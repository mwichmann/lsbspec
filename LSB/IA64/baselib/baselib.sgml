<PART ID=tocbaselib>
<TITLE>Base Libraries</TITLE>

<CHAPTER id=baselib>
<TITLE>Libraries</TITLE>

<PARA>
An LSB-conforming implementation shall support base libraries which
provide interfaces for accessing the operating system, processor and other
hardware in the system.
</PARA>

<PARA>
Only those interfaces that are unique to the IA64 Itanium &trade; 
platform are defined here. This
section should be used in conjunction with the corresponding section in
the Linux Standard Base Specification.
</PARA>

<PARA>
An LSB conforming implementation need not define an Unwind library interface
as required by the
<LINK LINKEND="std.IA64.ABI">
<XREF LINKEND="std.IA64.ABI">
</LINK>.
If such an interface is provided, it shall conform to the specification
in the 
<LINK LINKEND="std.IA64.ABI">
<XREF LINKEND="std.IA64.ABI">
</LINK>.
A conforming application shall not depend on this interface.
<!-- since there are no current implementations I can find for the unwind
library, we decided to omit it at this release -->
</PARA>

<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->
<!--    at Mon Apr 22 16:49:37 2002 -->
<SECT1 ID=libc>
<TITLE>Interfaces for libc</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libc</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libc.so.6.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
</PARA>
<SECT2>
<TITLE>RPC Interfaces</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - RPC Interfaces Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>authnone_create(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY><ENTRY>svcerr_auth(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_bytes(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_opaque(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_u_short(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY></ROW>
<ROW><ENTRY>clnt_create(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY><ENTRY>svcerr_decode(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_callhdr(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_opaque_auth(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_union(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY></ROW>
<ROW><ENTRY>clnt_pcreateerror(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY><ENTRY>svcerr_noproc(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_callmsg(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_pointer(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_vector(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY></ROW>
<ROW><ENTRY>clnt_perrno(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY><ENTRY>svcerr_noprog(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_char(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_reference(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_void(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY></ROW>
<ROW><ENTRY>clnt_perror(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY><ENTRY>svcerr_progvers(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_double(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_rejected_reply(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_wrapstring(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY></ROW>
<ROW><ENTRY>clnt_spcreateerror(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY><ENTRY>svcerr_systemerr(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_enum(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_replymsg(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdrmem_create(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY></ROW>
<ROW><ENTRY>clnt_sperrno(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY><ENTRY>svcerr_weakauth(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_float(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_short(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdrrec_create(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY></ROW>
<ROW><ENTRY>clnt_sperror(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-46"></ENTRY><ENTRY>xdr_accepted_reply(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_free(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_string(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdrrec_eof(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY></ROW>
<ROW><ENTRY>key_decryptsession(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_array(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_int(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_u_char(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>svc_getreqset(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_bool(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_long(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY>xdr_u_long(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-21"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Standard I/O</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Standard I/O Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>alphasort(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>flockfile(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fwrite(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>puts(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tempnam(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>clearerr(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fopen(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getc(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putw(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ungetc(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>ctermid(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fprintf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getc_unlocked(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>remove(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vasprintf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY></ROW>
<ROW><ENTRY>fclose(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fputc(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getchar(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>rewind(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vdprintf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY></ROW>
<ROW><ENTRY>fdopen(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fputs(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getchar_unlocked(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>rewinddir(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vfprintf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>feof(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fread(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>gets(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>scanf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vprintf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>ferror(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>freopen(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getw(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>seekdir(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vsnprintf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fflush(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fscanf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>pclose(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setbuf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vsprintf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fflush_unlocked(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fseek(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>popen(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setbuffer(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>wprintf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-25"></ENTRY></ROW>
<ROW><ENTRY>fgetc(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fseeko(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>printf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setvbuf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wscanf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-25"></ENTRY></ROW>
<ROW><ENTRY>fgetpos(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fsetpos(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putc(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>snprintf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>fgets(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fstatvfs(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putc_unlocked(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sprintf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>fgetwc_unlocked(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ftell(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putchar(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sscanf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>fileno(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ftello(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putchar_unlocked(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>telldir(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Standard I/O Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>stderr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>stdin<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>stdout<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Signal Handling</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Signal Handling Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__libc_current_sigrtmax(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigaddset(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sighold(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigpause(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigsuspend(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__libc_current_sigrtmin(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigaltstack(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigignore(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigpending(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigtimedwait(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__sigsetjmp(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigandset(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>siginterrupt(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigprocmask(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigwait(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__sysv_signal(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigblock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigisemptyset(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigqueue(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigwaitinfo(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>bsd_signal(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigdelset(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigismember(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigrelse(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>psignal(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigemptyset(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>siglongjmp(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigreturn(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>raise(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigfillset(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>signal(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigset(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>sigaction(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>siggetmask(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigorset(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigstack(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Signal Handling Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>_sys_siglist<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Standard Library</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Standard Library Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__assert_fail(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>__errno_location(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>__getpagesize(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>_exit(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>_setjmp(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__cxa_atexit(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>__fpending(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>__sysconf(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>_longjmp(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Standard Library Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__environ<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>_environ<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>_sys_errlist<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Localization Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Localization Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__dcgettext(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>catgets(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>dcgettext(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>iconv(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>nl_langinfo(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>catclose(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>catopen(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>gettext(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>localeconv(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setlocale(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Localization Functions Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>_nl_msg_cat_cntr<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Socket Interface</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Socket Interface Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>accept(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>gethostid(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>listen(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>sendmsg(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>socketpair(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY></ROW>
<ROW><ENTRY>bind(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>gethostname(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>recv(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>sendto(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>bindresvport(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>getpeername(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>recvfrom(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>setsockopt(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>connect(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getsockname(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>recvmsg(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>shutdown(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>gethostbyname_r(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>getsockopt(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>send(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>socket(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Socket Interface Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>h_errno<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>IPC Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - IPC Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>ftok(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>msgrcv(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>semget(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>shmctl(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>msgctl(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>msgsnd(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>semop(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>shmdt(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>msgget(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>semctl(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>shmat(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>shmget(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Regular Expressions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Regular Expressions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>advance(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>re_exec(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>regerror(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>regfree(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>re_comp(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>regcomp(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>regexec(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>step(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Regular Expressions Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>loc1<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>loc2<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>locs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Character Type Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Character Type Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__ctype_get_mb_cur_max(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>isdigit(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswalnum(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswlower(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>toascii(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>_tolower(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isgraph(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswalpha(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswprint(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tolower(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>_toupper(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>islower(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswblank(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>iswpunct(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>toupper(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>isalnum(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isprint(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswcntrl(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswspace(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>isalpha(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ispunct(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswctype(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>iswupper(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>isascii(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isspace(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswdigit(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswxdigit(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>iscntrl(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isupper(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswgraph(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isxdigit(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Character Type Functions Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__ctype_b<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>__ctype_tolower<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>__ctype_toupper<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Large File Support</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Large File Support Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__fxstat64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>fopen64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>ftello64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>mkstemp64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>readdir64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY></ROW>
<ROW><ENTRY>__lxstat64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>freopen64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>ftruncate64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>mmap64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>tmpfile64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY></ROW>
<ROW><ENTRY>__xstat64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>fseeko64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>ftw64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>nftw64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>truncate64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY></ROW>
<ROW><ENTRY>alphasort64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>fsetpos64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>getrlimit64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>open64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>creat64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>fstatfs64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>lockf64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>pread64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>fgetpos64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>fstatvfs64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>lseek64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY>pwrite64(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-131-35"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libc-ddefs>
<TITLE>Data Definitions for libc</TITLE>
<PARA>
</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->
<!--    at Mon Apr 22 16:50:30 2002 -->
<SECT1 ID=libm>
<TITLE>Interfaces for libm</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libm Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libm</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libm.so.6.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
</PARA>
</SECT1>
<SECT1 ID=libm-ddefs>
<TITLE>Data Definitions for libm</TITLE>
<PARA>
</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->
<!--    at Mon Apr 22 16:50:53 2002 -->
<SECT1 ID=libpthread>
<TITLE>Interfaces for libpthread</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libpthread Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libpthread</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libpthread.so.0</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
LSB systems support POSIX threads with the following exceptions.
This list is intended to match the behavior of historical Linux
implementations.  Applications should be written to deal with either
POSIX threads or the thread behaviors described here.
</PARA>

<PARA>
POSIX specifies a concept of per-process rather than per-thread
signals.  The LSB does not require this behavior; traditional Linux
implementations have had per-thread signals only.  A related issue is
that applications cannot (using legacy Linux implementations, at
least) rely on getpid() returning the same value in different threads.
</PARA>

<PARA>
Note: one implication of per-thread signals is that a core dump (for
example) may not stop all threads in a given process.  This may be an
issue when designing ways to stop/start applications.
</PARA>

<PARA>
Applications which create child processes (using fork() and the like)
must then wait for them (using waitpid() family of functions) in the
same thread as they created them.  Note that coding applications this
way will work both with full POSIX threads and legacy Linux thread
implementations.
</PARA>

<PARA>
POSIX specifies that changing the user or group id instantly affects
the behavior of all threads.  This behavior is not specified;
applications must use their own lock if they need this behavior.
Rationale: it seems unnecessary and it is a performance hit (an SMP
kernel must lock the user id).  (FIXME: is this our current
understanding?  It was discussed on lsb-spec on January 2000 but I'm
not sure we reached a consensus).
</PARA>

<PARA>
Although this standard doesn't have a way to list processes (/proc or
"ps" command line isn't in, right?), it is our intention to not
specify one way or the other whether multiple threads appear as
separate processes or as a single process.
</PARA>

<PARA>
Applications cannot rely on resource limits (getrusage and setrusage)
being maintained per-process rather than per-thread.
</PARA>

<PARA>
Applications must disconnect from the controlling tty before
pthread_create (FIXME: have I summarized this correctly?).
</PARA>

<PARA>
times() doesn't account for all threads, just the caller.
</PARA>

<PARA>
Applications must not call pthread_cancel if they call any system
libraries (most notably X windows), as system libraries are not
guaranteed to be thread safe.  Likewise, for such libraries, only one
thread per process may call them.
</PARA>

<PARA>
Applications cannot rely on fcntl/lockf locks being visible
per-process rather than per-thread.  Likewise for mandatory file
locks.
</PARA>

<PARA>
Threaded applications cannot use SIGUSR1 or SIGUSR2.
</PARA>
<PARA>
</PARA>
<SECT2>
<TITLE>Posix Threads</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libpthread - Posix Threads Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>pthread_attr_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_attr_setstackaddr(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_getspecific(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_once(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_setschedparam(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getdetachstate(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_attr_setstacksize(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_join(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_setspecific(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getguardsize(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cancel(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_key_create(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_sigmask(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getinheritsched(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cond_broadcast(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_key_delete(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_rdlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_testcancel(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getschedparam(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cond_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_kill(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_tryrdlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_close(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getschedpolicy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cond_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutex_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_trywrlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getscope(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cond_signal(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutex_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_unlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_getvalue(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getstackaddr(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cond_timedwait(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutex_lock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlock_wrlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_getstacksize(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_cond_wait(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutex_trylock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlockattr_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_open(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_condattr_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutex_unlock(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlockattr_getpshared(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_post(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setdetachstate(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_condattr_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutexattr_destroy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlockattr_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_timedwait(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-10"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setguardsize(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_create(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutexattr_getpshared(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_rwlockattr_setpshared(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_trywait(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setinheritsched(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_detach(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutexattr_gettype(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_self(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_unlink(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setschedparam(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_equal(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutexattr_init(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_setcancelstate(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>sem_wait(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setschedpolicy(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_exit(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutexattr_setpshared(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_setcanceltype(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>pthread_attr_setscope(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_getschedparam(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_mutexattr_settype(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY>pthread_setconcurrency(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-132-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libpthread-ddefs>
<TITLE>Data Definitions for libpthread</TITLE>
<PARA>
</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->
<!--    at Mon Apr 22 16:51:05 2002 -->
<SECT1 ID=libdl>
<TITLE>Interfaces for libdl</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libdl Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libdl</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libdl.so.2</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
</PARA>
<SECT2>
<TITLE>Dynamic Loader</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libdl - Dynamic Loader Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>dladdr(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-27-10"></ENTRY><ENTRY>dlclose(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-27-5"></ENTRY><ENTRY>dlerror(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-27-5"></ENTRY><ENTRY>dlopen(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-27-5"></ENTRY><ENTRY>dlsym(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-27-5"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libdl-ddefs>
<TITLE>Data Definitions for libdl</TITLE>
<PARA>
</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->
<!--    at Mon Apr 22 16:51:13 2002 -->
<SECT1 ID=libcrypt>
<TITLE>Interfaces for libcrypt</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libcrypt Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libcrypt</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libcrypt.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
</PARA>
<SECT2>
<TITLE>Encryption</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libcrypt - Encryption Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>crypt(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-29-5"></ENTRY><ENTRY>encrypt(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-29-5"></ENTRY><ENTRY>setkey(GLIBC_2.2)<FOOTNOTEREF LINKEND="std-29-5"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libcrypt-ddefs>
<TITLE>Data Definitions for libcrypt</TITLE>
<PARA>
</PARA>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->


</CHAPTER>

</PART>
