<SECT1 ID=libstdcxx>
<TITLE>Interfaces for libstdcxx</TITLE>
<PARA>
The following symbols and version were omitted and shall be included:
</PARA>
<TABLE id="lib-libstdcxx-errata">
<TITLE>libstdcxx Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>std::__num_base::_S_atoms_in</ENTRY>
<ENTRY>std::__num_base::_S_atoms_out</ENTRY>
</ROW>
<ROW>
<ENTRY>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> > std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> > >::_M_convert_int&lt;long>(std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> >, std::ios_base&, char, long) const</ENTRY>
<ENTRY>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> > >::_M_group_int(std::basic_string&lt;char, std::char_traits&lt;char>, std::allocator&lt;char> > const&, char, std::ios_base&, char*, char*, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> > std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> > >::_M_convert_int&lt;unsigned long>(std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> >, std::ios_base&, char, unsigned long) const</ENTRY>
<ENTRY>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> > std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> > >::_M_convert_int&lt;long long>(std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> >, std::ios_base&, char, long long) const</ENTRY>
</ROW>
<ROW>
<ENTRY>std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> > std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> > >::_M_convert_int&lt;unsigned long long>(std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> >, std::ios_base&, char, unsigned long long) const</ENTRY>
<ENTRY>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> > >::_M_group_float(std::basic_string&lt;char, std::char_traits&lt;char>, std::allocator&lt;char> > const&, char, char const*, char*, char*, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> > >::_M_pad(char, int, std::ios_base&, char*, char const*, int&) const</ENTRY>
<ENTRY>std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > >::_M_group_int(std::basic_string&lt;char, std::char_traits&lt;char>, std::allocator&lt;char> > const&, wchar_t, std::ios_base&, wchar_t*, wchar_t*, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > >::_M_convert_int&lt;long>(std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> >, std::ios_base&, wchar_t, long) const</ENTRY>
<ENTRY>std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > >::_M_convert_int&lt;unsigned long>(std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> >, std::ios_base&, wchar_t, unsigned long) const</ENTRY>
</ROW>
<ROW>
<ENTRY>std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > >::_M_convert_int&lt;long long>(std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> >, std::ios_base&, wchar_t, long long) const</ENTRY>
<ENTRY>std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > >::_M_convert_int&lt;unsigned long long>(std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> >, std::ios_base&, wchar_t, unsigned long long) const</ENTRY>
</ROW>
<ROW>
<ENTRY>std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > >::_M_group_float(std::basic_string&lt;char, std::char_traits&lt;char>, std::allocator&lt;char> > const&, wchar_t, wchar_t const*, wchar_t*, wchar_t*, int&) const</ENTRY>
<ENTRY>std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > >::_M_pad(wchar_t, int, std::ios_base&, wchar_t*, wchar_t const*, int&) const</ENTRY>
</ROW>
<ROW>
<ENTRY>std::__basic_file&lt;char>::showmanyc_helper()</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>std::basic_ios&lt;char, std::char_traits&lt;char> >::_M_setstate(std::_Ios_Iostate)</ENTRY>
<ENTRY>std::basic_ios&lt;wchar_t, std::char_traits&lt;wchar_t> >::_M_setstate(std::_Ios_Iostate)</ENTRY>
</ROW>
<ROW>
<ENTRY>std::basic_string&lt;char, std::char_traits&lt;char>, std::allocator&lt;char> > std::operator+&lt;char, std::char_traits&lt;char>, std::allocator&lt;char> >(std::basic_string&lt;char, std::char_traits&lt;char>, std::allocator&lt;char> > const&, std::basic_string&lt;char, std::char_traits&lt;char>, std::allocator&lt;char> > const&)</ENTRY>
<ENTRY>std::basic_string&lt;wchar_t, std::char_traits&lt;wchar_t>, std::allocator&lt;wchar_t> > std::operator+&lt;wchar_t, std::char_traits&lt;wchar_t>, std::allocator&lt;wchar_t> >(std::basic_string&lt;wchar_t, std::char_traits&lt;wchar_t>, std::allocator&lt;wchar_t> > const&, std::basic_string&lt;wchar_t, std::char_traits&lt;wchar_t>, std::allocator&lt;wchar_t> > const&)</ENTRY>
</ROW>
<ROW>
<ENTRY>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char> > >::_M_pad(char, long, std::ios_base&, char*, char const*, int&) const</ENTRY>
<ENTRY>std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > >::_M_convert_int&lt;long>(std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> >, std::ios_base&, wchar_t, long) const</ENTRY>
</ROW>
<ROW>
<ENTRY>std::num_put&lt;wchar_t, std::ostreambuf_iterator&lt;wchar_t, std::char_traits&lt;wchar_t> > >::_M_pad(wchar_t, long, std::ios_base&, wchar_t*, wchar_t const*, int&) cons</ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>

</SECT1>
