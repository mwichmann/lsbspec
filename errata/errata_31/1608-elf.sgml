Specification: LSB Core Generic
Specification: LSB Core IA32, IA64, AMD64, PPC32, PPC64 S390, S390X
Edition of Specification: 3.1
Type: Editorial
Status: Unapproved
Bug reference: http://bugs.linuxbase.org/show_bug.cgi?id=1608

Rationale: errors and lack of clarity in references to base
ELF ABI documents

=== generic ===

Section: 11.2.2.1. ELF Section Types

In Table 11-1. ELF Section Types

For entry SHT_DYNAMIC

replace

  The section holds information for dynamic
  linking. Currently, an object file shall have only one dynamic
  section, but this restriction may be relaxed in the future.
  See `Dynamic Section' in Chapter 5 for details.

with

  The section holds information for dynamic
  linking. Currently, an object file shall have only one dynamic
  section, but this restriction may be relaxed in the future.
  See `Dynamic Section' in Chapter 5 of System V ABI Update for
  details.

For entry SHT_FINI_ARRAY

replace

  This section contains an array of pointers
  to termination functions, as described in `Initialization and
  Termination Functions' in Chapter 5. Each pointer in the array
  is taken as a parameterless procedure with a void return.

with

  This section contains an array of pointers
  to termination functions, as described in `Initialization and
  Termination Functions' in Chapter 5 of System V ABI Update.
  Each pointer in the array is taken as a parameterless
  procedure with a void return.

For entry SHT_HASH

replace

  The section holds a symbol hash table. Currently,
  an object file shall have only one hash table, but this
  restriction may be relaxed in the future. See `Hash Table' in
  the Chapter 5 for details.

with

  The section holds a symbol hash table. Currently,
  an object file shall have only one hash table, but this
  restriction may be relaxed in the future. See `Hash Table' in
  Chapter 5 of System V ABI Update for details.

For entry SHT_INIT_ARRAY

replace

  This section contains an array of pointers
  to initialization functions, as described in `Initialization
  and Termination Functions' in Chapter 5. Each pointer in the
  array is taken as a parameterless procedure with a void
  return.

with

  This section contains an array of pointers
  to initialization functions, as described in `Initialization
  and Termination Functions' in Chapter 5 of System V ABI
  Update. Each pointer in the array is taken as a parameterless
  procedure with a void return.

For entry SHT_NOTE

replace

  The section holds information that marks the file
  in some way. See `Note Section' in Chapter 5 for details.

with

  The section holds information that marks the file
  in some way. See `Note Section' in Chapter 5 of System V ABI
  Update for details.

For entry SHT_PREINIT_ARRAY

replace

  This section contains an array of
  pointers to functions that are invoked before all other
  initialization functions, as described in `Initialization and
  Termination Functions' in Chapter 5. Each pointer in the array
  is taken as a parameterless proceure with a void return.

with

  This section contains an array of
  pointers to functions that are invoked before all other
  initialization functions, as described in `Initialization and
  Termination Functions' in Chapter 5 of System V ABI Update.
  Each pointer in the array is taken as a parameterless proceure
  with a void return.

For entry SHT_REL

replace

  The section holds relocation entries without
  explicit addends, such as type Elf32_Rel for the 32-bit class
  of object files or type Elf64_Rel for the 64-bit class of
  object files. An object file may have multiple relocation
  sections. See "Relocation"

with

  The section holds relocation entries without
  explicit addends, such as type Elf32_Rel for the 32-bit class
  of object files or type Elf64_Rel for the 64-bit class of
  object files. An object file may have multiple relocation
  sections. See `Relocation' in Chapter 4 of System V ABI Update
  for details.

For entry SHT_RELA

replace

  The section holds relocation entries with
  explicit addends, such as type Elf32_Rela for the 32-bit class
  of object files or type Elf64_Rela for the 64-bit class of
  object files. An object file may have multiple relocation
  sections. `Relocation' b

with

  The section holds relocation entries with
  explicit addends, such as type Elf32_Rela for the 32-bit class
  of object files or type Elf64_Rela for the 64-bit class of
  object files. An object file may have multiple relocation
  sections. See `Relocation' in Chapter 4 of System V ABI Update
  for details.

For entry SHT_STRTAB

replace

  The section holds a string table. An object
  file may have multiple string table sections. See `String
  The section holds a string table. An object
  file may have multiple string table sections. See `String
  Table' below for details.

with

  The section holds a string table. An object
  file may have multiple string table sections. See `String
  The section holds a string table. An object
  file may have multiple string table sections. See `String
  Table' in Chapter 4 of System V ABI Update for details.


Section: 11.3.1.1. ELF Special Sections

for .dynamic
 
replace

  This section holds dynamic linking information. The section's
  attributes will include the SHF_ALLOC bit. Whether the
  SHF_WRITE bit is set is processor specific. See Chapter 5 for
  more information.

with

  This section holds dynamic linking information. The section's
  attributes will include the SHF_ALLOC bit. Whether the
  SHF_WRITE bit is set is processor specific. See Chapter 5 of
  System V ABI Update for more information.

for .dynstr
 
replace

  This section holds strings needed for dynamic linking, most
  commonly the strings that represent the names associated with
  symbol table entries. See Chapter 5 for more information.

with

  This section holds strings needed for dynamic linking, most
  commonly the strings that represent the names associated with
  symbol table entries. See Chapter 5 of System V ABI Update for
  more information.

for .dynsym
 
replace 

  This section holds the dynamic linking symbol table, as
  described in `Symbol Table'. See Chapter 5 for more
  information.

with

  This section holds the dynamic linking symbol table, as
  described in `Symbol Table' of System V ABI Update.
 
for .hash
 
replace

  This section holds a symbol hash table. See `Hash Table' in
  Chapter 5 for more information.

with

  This section holds a symbol hash table. See `Hash Table' in
  Chapter 5 of System V ABI Update for more information.
 
for .interp

replace

  This section holds the path name of a program interpreter. If
  the file has a loadable segment that includes relocation, the
  sections' attributes will include the SHF_ALLOC bit;
  otherwise, that bit will be off. See Chapter 5 for more
  information.

with

  This section holds the path name of a program interpreter. If
  the file has a loadable segment that includes relocation, the
  sections' attributes will include the SHF_ALLOC bit;
  otherwise, that bit will be off. See Chapter 5 of System V ABI
  Update for more information.

for .rodata
 
replace

  This section holds read-only data that typically contribute to
  a non-writable segment in the process image. See `Program
  Header' in Chapter 5 for more information.

with

  This section holds read-only data that typically contribute to
  a non-writable segment in the process image. See `Program
  Header' in Chapter 5 of System V ABI Update for more
  information.

for .rodata1
 
replace

  This section hold sread-only data that typically contribute to
  a non-writable segment in the process image. See `Program
  Header' in Chapter 5 for more information.

with

  This section holds read-only data that typically contribute to
  a non-writable segment in the process image. See `Program
  Header' in Chapter 5 of System V ABI Update for more
  information.

for .strtab
 
replace 

  This section holds strings, most commonly the strings that
  represent the names associated with symbol table entries. If
  the file has a loadable segment that includes the symbol
  string table, the section's attributes will include the
  SHF_ALLOC bit; otherwi

with

  This section holds strings, most commonly the strings that
  represent the names associated with symbol table entries. If
  the file has a loadable segment that includes the symbol
  string table, the section's attributes will include the
  SHF_ALLOC bit; otherwise, that bit will be off.
 

=== IA32 ===

Section: 9.3.1.2. Addition Special Sections

for .rel.dyn
 
replace

  This section holds relocation information, as described in
  `Relocation'. These relocations are applied to the .dyn
  section.

with

  This section holds relocation information, as described in
  `Relocation' section in Chapter 4 of System V ABI Update.
  These relocations are applied to the .dyn section.


=== IA64 ===

Section: 9.3.1. Special Sections

for .plt
 
replace

  This section holds the Procedure Linkage Table.

with

  This section holds the procedure linkage table.


Section: 9.3.2. Linux Special Sections

for .rela.dyn
 
repalce

  This section holds relocation information, as described in
  `Relocation'. These relocations are applied to the .dyn
  section.

with

  This section holds RELA type relocation information for all
  sections of a shared library except the PLT.

for .rela.IA_64.pltoff
 
replace

  This section holds relocation information, as described in
  `Relocation'. These relocations are applied to the
  .IA_64.pltoff section.

with

  This section holds relocation information, as described in
  `Relocation' section in Chapter 4 of System V ABI Update.
  These relocations are applied to the .IA_64.pltoff section.


=== PPC32 ===

Section: 9.3.1. Special Sections

for .plt
 
replace

  This section holds the Procedure Linkage Table

with

  This section holds the procedure linkage table.


Section: 9.3.2. Linux Special Sections

for .rela.dyn
  
replace

  This section holds RELA type relocation information for all
  sections of a shared library except the PLT

with

  This section holds RELA type relocation information for all
  sections of a shared library except the PLT.


=== PPC64 ===

Section: 9.3.1. Additional Special Sections

for .rela.dyn
 
replace

  This section holds RELA type relocation information for all
  sections of a shared library except the PLT

with

  This section holds RELA type relocation information for all
  sections of a shared library except the PLT.


=== S390 ===

Section: 9.3.1. Special Sections

for .plt
 
replace

  This section holds the Procedure Linkage Table

with

  This section holds the procedure linkage table.

 
Section: 9.3.2. Additional Special Sections

for .rela.dyn

replace:
 
  This section holds RELA type relocation information for all
  sections of a shared library except the PLT

with

  This section holds RELA type relocation information for all
  sections of a shared library except the PLT.


=== S390X ===

Section: 9.3.2. Linux Special Sections

for .rela.dyn
 
replace

  This section holds RELA type relocation information for all
  sections of a shared library except the PLT

with

  This section holds RELA type relocation information for all
  sections of a shared library except the PLT.


=== AMD64 ===

Section: 9.3.2. Additional Special Sections

for .rela.dyn
 
replace

  This section holds RELA type relocation information for all
  sections of a shared library except the PLT

with

  This section holds RELA type relocation information for all
  sections of a shared library except the PLT.
