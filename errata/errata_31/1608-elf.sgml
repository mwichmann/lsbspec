Specification: LSB Core Generic
Specification: LSB Desktop IA32, IA64, AMD64, PPC32, PPC64 S390, S390X
Edition of Specification: 3.1
Type: Error
Status: Unapproved
Bug reference: http://bugs.linuxbase.org/show_bug.cgi?id=1608

Rationale: errors and lack of clarity in references to base
ELF ABI documents


XXX Initial generated diff - update with section references


=== generic ===
@@ -1105,7 +1105,8 @@
    SHT_DYNAMIC 0x6 The section holds information for dynamic
    linking. Currently, an object file shall have only one dynamic
    section, but this restriction may be relaxed in the future.
-   See `Dynamic Section' in Chapter 5 for details.
+   See `Dynamic Section' in Chapter 5 of System V ABI Update for
+   details.
    SHT_DYNSYM 0xb This section holds a minimal set of symbols
    adequate for dynamic linking. See also SHT_SYMTAB. Currently,
    an object file may have either a section of SHT_SYMTAB type or
@@ -1113,31 +1114,34 @@
    may be relaxed in the future.
    SHT_FINI_ARRAY 0xf This section contains an array of pointers
    to termination functions, as described in `Initialization and
-   Termination Functions' in Chapter 5. Each pointer in the array
-   is taken as a parameterless procedure with a void return.
+   Termination Functions' in Chapter 5 of System V ABI Update.
+   Each pointer in the array is taken as a parameterless
+   procedure with a void return.
    SHT_HASH 0x5 The section holds a symbol hash table. Currently,
    an object file shall have only one hash table, but this
    restriction may be relaxed in the future. See `Hash Table' in
-   the Chapter 5 for details.
+   Chapter 5 of System V ABI Update for details.
    SHT_INIT_ARRAY 0xe This section contains an array of pointers
    to initialization functions, as described in `Initialization
-   and Termination Functions' in Chapter 5. Each pointer in the
-   array is taken as a parameterless procedure with a void
-   return.
+   and Termination Functions' in Chapter 5 of System V ABI
+   Update. Each pointer in the array is taken as a parameterless
+   procedure with a void return.
    SHT_NOBITS 0x8 A section of this type occupies no space in the
    file but otherwise resembles SHT_PROGBITS. Although this
    section contains no bytes, the sh_offset member contains the
    conceptual file offset.
    SHT_NOTE 0x7 The section holds information that marks the file
-   in some way. See `Note Section' in Chapter 5 for details.
+   in some way. See `Note Section' in Chapter 5 of System V ABI
+   Update for details.
    SHT_NULL 0x0 This value marks the section header as inactive;
    it does not have an associated section. Other members of the
    section header have undefined values.
    SHT_PREINIT_ARRAY 0x10 This section contains an array of
    pointers to functions that are invoked before all other
    initialization functions, as described in `Initialization and
-   Termination Functions' in Chapter 5. Each pointer in the array
-   is taken as a parameterless proceure with a void return.
+   Termination Functions' in Chapter 5 of System V ABI Update.
+   Each pointer in the array is taken as a parameterless proceure
+   with a void return.
    SHT_PROGBITS 0x1 The section holds information defined by the
    program, whose format and meaning are determined solely by the
    program.
@@ -1145,15 +1149,17 @@
    explicit addends, such as type Elf32_Rel for the 32-bit class
    of object files or type Elf64_Rel for the 64-bit class of
    object files. An object file may have multiple relocation
-   sections. See "Relocation"
+   sections. See `Relocation' in Chapter 4 of System V ABI Update
+   for details.
    SHT_RELA 0x4 The section holds relocation entries with
    explicit addends, such as type Elf32_Rela for the 32-bit class
    of object files or type Elf64_Rela for the 64-bit class of
    object files. An object file may have multiple relocation
-   sections. `Relocation' b
+   sections. See `Relocation' in Chapter 4 of System V ABI Update
+   for details.
    SHT_STRTAB 0x3 The section holds a string table. An object
    file may have multiple string table sections. See `String
-   Table' below for details.
+   Table' in Chapter 4 of System V ABI Update for details.
    SHT_SYMTAB 0x2 This section holds a symbol table. Currently,
    an object file may have either a section of SHT_SYMTAB type or
    a section of SHT_DYNSYM type, but not both. This restriction
@@ -1248,18 +1254,18 @@
 
    This section holds dynamic linking information. The section's
    attributes will include the SHF_ALLOC bit. Whether the
-   SHF_WRITE bit is set is processor specific. See Chapter 5 for
-   more information.
+   SHF_WRITE bit is set is processor specific. See Chapter 5 of
+   System V ABI Update for more information.
    .dynstr
 
    This section holds strings needed for dynamic linking, most
    commonly the strings that represent the names associated with
-   symbol table entries. See Chapter 5 for more information.
+   symbol table entries. See Chapter 5 of System V ABI Update for
+   more information.
    .dynsym
 
    This section holds the dynamic linking symbol table, as
-   described in `Symbol Table'. See Chapter 5 for more
-   information.
+   described in `Symbol Table' of System V ABI Update.
    .fini
 
    This section holds executable instructions that contribute to
@@ -1274,7 +1280,7 @@
    .hash
 
    This section holds a symbol hash table. See `Hash Table' in
-   Chapter 5 for more information.
+   Chapter 5 of System V ABI Update for more information.
    .init
 
    This section holds executable instructions that contribute to
@@ -1292,8 +1298,8 @@
    This section holds the path name of a program interpreter. If
    the file has a loadable segment that includes relocation, the
    sections' attributes will include the SHF_ALLOC bit;
-   otherwise, that bit will be off. See Chapter 5 for more
-   information.
+   otherwise, that bit will be off. See Chapter 5 of System V ABI
+   Update for more information.
    .line
 
    This section holds line number information for symbolic
@@ -1314,12 +1320,14 @@
 
    This section holds read-only data that typically contribute to
    a non-writable segment in the process image. See `Program
-   Header' in Chapter 5 for more information.
+   Header' in Chapter 5 of System V ABI Update for more
+   information.
    .rodata1
 
-   This section hold sread-only data that typically contribute to
+   This section holds read-only data that typically contribute to
    a non-writable segment in the process image. See `Program
-   Header' in Chapter 5 for more information.
+   Header' in Chapter 5 of System V ABI Update for more
+   information.
    .shstrtab
 
    This section holds section names.
@@ -1329,7 +1337,7 @@
    represent the names associated with symbol table entries. If
    the file has a loadable segment that includes the symbol
    string table, the section's attributes will include the
-   SHF_ALLOC bit; otherwi
+   SHF_ALLOC bit; otherwise, that bit will be off.
    .symtab
 
    This section holds a symbol table, as `Symbol Table'. in this
=== IA32 ===
@@ -1327,8 +1327,8 @@
    .rel.dyn
 
    This section holds relocation information, as described in
-   `Relocation'. These relocations are applied to the .dyn
-   section.
+   `Relocation' section in Chapter 4 of System V ABI Update.
+   These relocations are applied to the .dyn section.
      _________________________________________________________
 
 9.4. Symbol Table
=== IA64 ===
@@ -1686,7 +1686,7 @@
    language specific, and is unspecified.
    .plt
 
-   This section holds the Procedure Linkage Table.
+   This section holds the procedure linkage table.
    .sbss
 
    This section holds uninitialized data that contribute to the
@@ -1725,14 +1725,13 @@
    This section holds function descriptors
    .rela.dyn
 
-   This section holds relocation information, as described in
-   `Relocation'. These relocations are applied to the .dyn
-   section.
+   This section holds RELA type relocation information for all
+   sections of a shared library except the PLT.
    .rela.IA_64.pltoff
 
    This section holds relocation information, as described in
-   `Relocation'. These relocations are applied to the
-   .IA_64.pltoff section.
+   `Relocation' section in Chapter 4 of System V ABI Update.
+   These relocations are applied to the .IA_64.pltoff section.
      _________________________________________________________
 
 9.3.3. Section Types
=== PPC32 ===
@@ -1225,7 +1225,7 @@
    for more information.
    .plt
 
-   This section holds the Procedure Linkage Table
+   This section holds the procedure linkage table.
    .sdata
 
    This section holds initialized small data that contribute to
@@ -1262,7 +1262,7 @@
    .rela.dyn
 
    This section holds RELA type relocation information for all
-   sections of a shared library except the PLT
+   sections of a shared library except the PLT.
    .rela.got
 
    This section holds RELA type relocation information for the
=== PPC64 ===
@@ -1178,7 +1178,7 @@
    .rela.dyn
 
    This section holds RELA type relocation information for all
-   sections of a shared library except the PLT
+   sections of a shared library except the PLT.
    .rela.plt
 
    This section holds RELA type relocation information for the
=== S390 ===
@@ -1137,7 +1137,7 @@
    This section holds the global offset table
    .plt
 
-   This section holds the Procedure Linkage Table
+   This section holds the procedure linkage table.
      _________________________________________________________
 
 9.3.2. Addition Special Sections
@@ -1152,7 +1152,7 @@
    .rela.dyn
 
    This section holds RELA type relocation information for all
-   sections of a shared library except the PLT
+   sections of a shared library except the PLT.
    .rela.plt
 
    This section holds RELA type relocation information for the
=== S390X ===
@@ -1156,7 +1156,7 @@
    .rela.dyn
 
    This section holds RELA type relocation information for all
-   sections of a shared library except the PLT
+   sections of a shared library except the PLT.
    .rela.plt
 
    This section holds RELA type relocation information for the
=== AMD64 ===
@@ -1236,7 +1236,7 @@
    .rela.dyn
 
    This section holds RELA type relocation information for all
-   sections of a shared library except the PLT
+   sections of a shared library except the PLT.
    .rela.plt
 
    This section holds RELA type relocation information for the
