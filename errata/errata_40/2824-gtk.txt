Specification: LSB Desktop generic
Edition of Specification: 4.0
Type: Error
Status: Unapproved
Bug reference: http://bugs.linuxbase.org/show_bug.cgi?id=2824

Rationale: a number of gtk library functions now have additional const
qualifiers.


In LSB Desktop generic:

16.28. Data Definitions for libgtk-x11-2.0

16.28.1. gtk-2.0/gtk/gtk.h

Change:

extern gboolean gtk_cell_renderer_activate(GtkCellRenderer * cell,
                                           GdkEvent * event,
                                           GtkWidget * widget,
                                           const gchar * path,
                                           GdkRectangle * background_area,
                                           GdkRectangle * cell_area,
                                           GtkCellRendererState flags);

To:

extern gboolean gtk_cell_renderer_activate(GtkCellRenderer * cell,
                                           GdkEvent * event,
                                           GtkWidget * widget,
                                           const gchar * path,
                                           const GdkRectangle * background_area,
                                           const GdkRectangle * cell_area,
                                           GtkCellRendererState flags);


Change:

extern void gtk_cell_renderer_get_size(GtkCellRenderer * cell,
                                       GtkWidget * widget,
                                       GdkRectangle * cell_area,
                                       gint * x_offset,
                                       gint * y_offset, gint * width,
                                       gint * height);

To:

extern void gtk_cell_renderer_get_size(GtkCellRenderer * cell,
                                       GtkWidget * widget,
                                       const GdkRectangle * cell_area,
                                       gint * x_offset,
                                       gint * y_offset, gint * width,
                                       gint * height);


Change:

extern void gtk_cell_renderer_render(GtkCellRenderer * cell,
                                     GdkWindow * window,
                                     GtkWidget * widget,
                                     GdkRectangle * background_area,
                                     GdkRectangle * cell_area,
                                     GdkRectangle * expose_area,
                                     GtkCellRendererState flags);

To:

extern void gtk_cell_renderer_render(GtkCellRenderer * cell,
                                     GdkWindow * window,
                                     GtkWidget * widget,
                                     const GdkRectangle * background_area,
                                     const GdkRectangle * cell_area,
                                     const GdkRectangle * expose_area,
                                     GtkCellRendererState flags);


Change:

extern GtkCellEditable *gtk_cell_renderer_start_editing(GtkCellRenderer* cell,
                                                        GdkEvent * event,
                                                        GtkWidget * widget,
                                                        const gchar * path,
                                                        GdkRectangle *
                                                        background_area,
                                                        GdkRectangle *
                                                        cell_area,
                                                        GtkCellRendererState
                                                        flags);

To:

extern GtkCellEditable *gtk_cell_renderer_start_editing(GtkCellRenderer* cell,
                                                        GdkEvent * event,
                                                        GtkWidget * widget,
                                                        const gchar * path,
                                                        const GdkRectangle *
                                                        background_area,
                                                        const GdkRectangle *
                                                        cell_area,
                                                        GtkCellRendererState
                                                        flags);


Change:

extern gchar *gtk_check_version(guint required_major,
                                guint required_minor,
                                guint required_micro);

To:

extern const gchar *gtk_check_version(guint required_major,
                                      guint required_minor,
                                      guint required_micro);


Change:

extern void gtk_draw_insertion_cursor(GtkWidget * widget,
                                      GdkDrawable * drawable,
                                      GdkRectangle * area,
                                      GdkRectangle * location,
                                      gboolean is_primary,
                                      GtkTextDirection direction,
                                      gboolean draw_arrow);

To:

extern void gtk_draw_insertion_cursor(GtkWidget * widget,
                                      GdkDrawable * drawable,
                                      const GdkRectangle * area,
                                      const GdkRectangle * location,
                                      gboolean is_primary,
                                      GtkTextDirection direction,
                                      gboolean draw_arrow);


Change:

extern void gtk_im_context_set_cursor_location(GtkIMContext * context,
                                               GdkRectangle * area);

To:

extern void gtk_im_context_set_cursor_location(GtkIMContext * context,
                                               const GdkRectangle * area);


Change:

extern void gtk_paint_arrow(GtkStyle * style, GdkWindow * window,
                            GtkStateType state_type,
                            GtkShadowType shadow_type,
                            GdkRectangle * area, GtkWidget * widget,
                            const gchar * detail,
                            GtkArrowType arrow_type, gboolean fill,
                            gint x, gint y, gint width, gint height);
extern void gtk_paint_box(GtkStyle * style, GdkWindow * window,
                          GtkStateType state_type,
                          GtkShadowType shadow_type,
                          GdkRectangle * area, GtkWidget * widget,
                          const gchar * detail, gint x, gint y,
                          gint width, gint height);
extern void gtk_paint_box_gap(GtkStyle * style, GdkWindow * window,
                              GtkStateType state_type,
                              GtkShadowType shadow_type,
                              GdkRectangle * area, GtkWidget * widget,
                              gchar * detail, gint x, gint y,
                              gint width, gint height,
                              GtkPositionType gap_side, gint gap_x,
                              gint gap_width);
extern void gtk_paint_check(GtkStyle * style, GdkWindow * window,
                            GtkStateType state_type,
                            GtkShadowType shadow_type,
                            GdkRectangle * area, GtkWidget * widget,
                            const gchar * detail, gint x, gint y,
                            gint width, gint height);
extern void gtk_paint_diamond(GtkStyle * style, GdkWindow * window,
                              GtkStateType state_type,
                              GtkShadowType shadow_type,
                              GdkRectangle * area, GtkWidget * widget,
                              const gchar * detail, gint x, gint y,
                              gint width, gint height);
extern void gtk_paint_expander(GtkStyle * style, GdkWindow * window,
                               GtkStateType state_type,
                               GdkRectangle * area, GtkWidget * widget,
                               const gchar * detail, gint x, gint y,
                               GtkExpanderStyle expander_style);
extern void gtk_paint_extension(GtkStyle * style, GdkWindow * window,
                                GtkStateType state_type,
                                GtkShadowType shadow_type,
                                GdkRectangle * area,
                                GtkWidget * widget, gchar * detail,
                                gint x, gint y, gint width,
                                gint height, GtkPositionType gap_side);
extern void gtk_paint_flat_box(GtkStyle * style, GdkWindow * window,
                               GtkStateType state_type,
                               GtkShadowType shadow_type,
                               GdkRectangle * area, GtkWidget * widget,
                               const gchar * detail, gint x, gint y,
                               gint width, gint height);
extern void gtk_paint_focus(GtkStyle * style, GdkWindow * window,
                            GtkStateType state_type,
                            GdkRectangle * area, GtkWidget * widget,
                            const gchar * detail, gint x, gint y,
                            gint width, gint height);
extern void gtk_paint_handle(GtkStyle * style, GdkWindow * window,
                             GtkStateType state_type,
                             GtkShadowType shadow_type,
                             GdkRectangle * area, GtkWidget * widget,
                             const gchar * detail, gint x, gint y,
                             gint width, gint height,
                             GtkOrientation orientation);
extern void gtk_paint_hline(GtkStyle * style, GdkWindow * window,
                            GtkStateType state_type,
                            GdkRectangle * area, GtkWidget * widget,
                            const gchar * detail, gint x1, gint x2,
                            gint y);
extern void gtk_paint_layout(GtkStyle * style, GdkWindow * window,
                             GtkStateType state_type,
                             gboolean use_text, GdkRectangle * area,
                             GtkWidget * widget, const gchar * detail,
                             gint x, gint y, PangoLayout * layout);
extern void gtk_paint_option(GtkStyle * style, GdkWindow * window,
                             GtkStateType state_type,
                             GtkShadowType shadow_type,
                             GdkRectangle * area, GtkWidget * widget,
                             const gchar * detail, gint x, gint y,
                             gint width, gint height);
extern void gtk_paint_polygon(GtkStyle * style, GdkWindow * window,
                              GtkStateType state_type,
                              GtkShadowType shadow_type,
                              GdkRectangle * area, GtkWidget * widget,
                              const gchar * detail, GdkPoint * points,
                              gint npoints, gboolean fill);
extern void gtk_paint_resize_grip(GtkStyle * style, GdkWindow * window,
                                  GtkStateType state_type,
                                  GdkRectangle * area,
                                  GtkWidget * widget,
                                  const gchar * detail,
                                  GdkWindowEdge edge, gint x, gint y,

To:

extern void gtk_paint_arrow(GtkStyle * style, GdkWindow * window,
                            GtkStateType state_type,
                            GtkShadowType shadow_type,
                            const GdkRectangle * area,
                            GtkWidget * widget, const gchar * detail,
                            GtkArrowType arrow_type, gboolean fill,
                            gint x, gint y, gint width, gint height);
extern void gtk_paint_box(GtkStyle * style, GdkWindow * window,
                          GtkStateType state_type,
                          GtkShadowType shadow_type,
                          const GdkRectangle * area,
                          GtkWidget * widget, const gchar * detail,
                          gint x, gint y, gint width, gint height);
extern void gtk_paint_box_gap(GtkStyle * style, GdkWindow * window,
                              GtkStateType state_type,
                              GtkShadowType shadow_type,
                              const GdkRectangle * area,
                              GtkWidget * widget, const gchar * detail,
                              gint x, gint y, gint width, gint height,
                              GtkPositionType gap_side, gint gap_x,
                              gint gap_width);
extern void gtk_paint_check(GtkStyle * style, GdkWindow * window,
                            GtkStateType state_type,
                            GtkShadowType shadow_type,
                            const GdkRectangle * area,
                            GtkWidget * widget, const gchar * detail,
                            gint x, gint y, gint width, gint height);
extern void gtk_paint_diamond(GtkStyle * style, GdkWindow * window,
                              GtkStateType state_type,
                              GtkShadowType shadow_type,
                              const GdkRectangle * area,
                              GtkWidget * widget, const gchar * detail,
                              gint x, gint y, gint width, gint height);
extern void gtk_paint_expander(GtkStyle * style, GdkWindow * window,
                               GtkStateType state_type,
                               const GdkRectangle * area,
                               GtkWidget * widget,
                               const gchar * detail, gint x, gint y,
                               GtkExpanderStyle expander_style);
extern void gtk_paint_extension(GtkStyle * style, GdkWindow * window,
                                GtkStateType state_type,
                                GtkShadowType shadow_type,
                                const GdkRectangle * area,
                                GtkWidget * widget,
                                const gchar * detail, gint x, gint y,
                                gint width, gint height,
                                GtkPositionType gap_side);
extern void gtk_paint_flat_box(GtkStyle * style, GdkWindow * window,
                               GtkStateType state_type,
                               GtkShadowType shadow_type,
                               const GdkRectangle * area,
                               GtkWidget * widget,
                               const gchar * detail, gint x, gint y,
                               gint width, gint height);
extern void gtk_paint_focus(GtkStyle * style, GdkWindow * window,
                            GtkStateType state_type,
                            const GdkRectangle * area,
                            GtkWidget * widget, const gchar * detail,
                            gint x, gint y, gint width, gint height);
extern void gtk_paint_handle(GtkStyle * style, GdkWindow * window,
                             GtkStateType state_type,
                             GtkShadowType shadow_type,
                             const GdkRectangle * area,
                             GtkWidget * widget, const gchar * detail,
                             gint x, gint y, gint width, gint height,
                             GtkOrientation orientation);
extern void gtk_paint_hline(GtkStyle * style, GdkWindow * window,
                            GtkStateType state_type,
                            const GdkRectangle * area,
                            GtkWidget * widget, const gchar * detail,
                            gint x1, gint x2, gint y);
extern void gtk_paint_layout(GtkStyle * style, GdkWindow * window,
                             GtkStateType state_type,
                             gboolean use_text,
                             const GdkRectangle * area,
                             GtkWidget * widget, const gchar * detail,
                             gint x, gint y, PangoLayout * layout);
extern void gtk_paint_option(GtkStyle * style, GdkWindow * window,
                             GtkStateType state_type,
                             GtkShadowType shadow_type,
                             const GdkRectangle * area,
                             GtkWidget * widget, const gchar * detail,
                             gint x, gint y, gint width, gint height);
extern void gtk_paint_polygon(GtkStyle * style, GdkWindow * window,
                              GtkStateType state_type,
                              GtkShadowType shadow_type,
                              const GdkRectangle * area,
                              GtkWidget * widget, const gchar * detail,
                              const GdkPoint * points, gint npoints,
                              gboolean fill);
extern void gtk_paint_resize_grip(GtkStyle * style, GdkWindow * window,
                                  GtkStateType state_type,
                                  const GdkRectangle * area,
                                  GtkWidget * widget,
                                  const gchar * detail,
                                  GdkWindowEdge edge, gint x, gint y,


Change:

extern void gtk_paint_shadow(GtkStyle * style, GdkWindow * window,
                             GtkStateType state_type,
                             GtkShadowType shadow_type,
                             GdkRectangle * area, GtkWidget * widget,
                             const gchar * detail, gint x, gint y,
                             gint width, gint height);
extern void gtk_paint_shadow_gap(GtkStyle * style, GdkWindow * window,
                                 GtkStateType state_type,
                                 GtkShadowType shadow_type,
                                 GdkRectangle * area,
                                 GtkWidget * widget, gchar * detail,
                                 gint x, gint y, gint width,
                                 gint height, GtkPositionType gap_side,
                                 gint gap_x, gint gap_width);
extern void gtk_paint_slider(GtkStyle * style, GdkWindow * window,
                             GtkStateType state_type,
                             GtkShadowType shadow_type,
                             GdkRectangle * area, GtkWidget * widget,
                             const gchar * detail, gint x, gint y,
                             gint width, gint height,
                             GtkOrientation orientation);
extern void gtk_paint_tab(GtkStyle * style, GdkWindow * window,
                          GtkStateType state_type,
                          GtkShadowType shadow_type,
                          GdkRectangle * area, GtkWidget * widget,
                          const gchar * detail, gint x, gint y,
                          gint width, gint height);
extern void gtk_paint_vline(GtkStyle * style, GdkWindow * window,
                            GtkStateType state_type,
                            GdkRectangle * area, GtkWidget * widget,
                            const gchar * detail, gint y1_, gint y2_,
                            gint x);

To:

extern void gtk_paint_shadow(GtkStyle * style, GdkWindow * window,
                             GtkStateType state_type,
                             GtkShadowType shadow_type,
                             const GdkRectangle * area,
                             GtkWidget * widget, const gchar * detail,
                             gint x, gint y, gint width, gint height);
extern void gtk_paint_shadow_gap(GtkStyle * style, GdkWindow * window,
                                 GtkStateType state_type,
                                 GtkShadowType shadow_type,
                                 const GdkRectangle * area,
                                 GtkWidget * widget,
                                 const gchar * detail, gint x, gint y,
                                 gint width, gint height,
                                 GtkPositionType gap_side, gint gap_x,
                                 gint gap_width);
extern void gtk_paint_slider(GtkStyle * style, GdkWindow * window,
                             GtkStateType state_type,
                             GtkShadowType shadow_type,
                             const GdkRectangle * area,
                             GtkWidget * widget, const gchar * detail,
                             gint x, gint y, gint width, gint height,
                             GtkOrientation orientation);
extern void gtk_paint_tab(GtkStyle * style, GdkWindow * window,
                          GtkStateType state_type,
                          GtkShadowType shadow_type,
                          const GdkRectangle * area,
                          GtkWidget * widget, const gchar * detail,
                          gint x, gint y, gint width, gint height);
extern void gtk_paint_vline(GtkStyle * style, GdkWindow * window,
                            GtkStateType state_type,
                            const GdkRectangle * area,
                            GtkWidget * widget, const gchar * detail,
                            gint y1_, gint y2_, gint x);


Change:

extern void gtk_style_apply_default_background(GtkStyle * style,
                                               GdkWindow * window,
                                               gboolean set_bg,
                                               GtkStateType state_type,
                                               GdkRectangle * area,
                                               gint x, gint y,
                                               gint width, gint height);

To:

extern void gtk_style_apply_default_background(GtkStyle * style,
                                               GdkWindow * window,
                                               gboolean set_bg,
                                               GtkStateType state_type,
                                               const GdkRectangle *
                                               area, gint x, gint y,
                                               gint width, gint height);


Change:

extern void gtk_tree_view_column_cell_get_size(GtkTreeViewColumn * tree_column,
                                               GdkRectangle * cell_area,
                                               gint * x_offset, gint * y_offset,
                                               gint * width, gint * height);

To:

extern void gtk_tree_view_column_cell_get_size(GtkTreeViewColumn * tree_column,
                                               const GdkRectangle * cell_area,
                                               gint * x_offset, gint * y_offset,
                                               gint * width, gint * height);


Change:

extern gboolean gtk_widget_intersect(GtkWidget * widget,
                                     GdkRectangle * area,
                                     GdkRectangle * intersection);

To:

extern gboolean gtk_widget_intersect(GtkWidget * widget,
                                     const GdkRectangle * area,
                                     GdkRectangle * intersection);


Change:

extern GdkRegion *gtk_widget_region_intersect(GtkWidget * widget,
                                              GdkRegion * region);

To:

extern GdkRegion *gtk_widget_region_intersect(GtkWidget * widget,
                                              const GdkRegion * region);


