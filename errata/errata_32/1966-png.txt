Specification: LSB Desktop generic
Edition of Specification: 3.2
Type: Editorial
Status: Unapproved
Bug reference: http://bugs.linuxbase.org/show_bug.cgi?id=1966

Rationale: the png library was incompletely specified, leaving it
difficult to use as specified.


In LSB Desktop generic:

In 8.2.1. png.h

Insert:

typedef struct __jmp_buf_tag *png_unknown_chunkp;
typedef struct png_sPLT_entry_struct {
    png_uint_16 red;
    png_uint_16 green;
    png_uint_16 blue;
    png_uint_16 alpha;
    png_uint_16 frequency;
} png_sPLT_entry;
typedef png_sPLT_entry *png_sPLT_entryp;
typedef png_sPLT_entry **png_sPLT_entrypp;
typedef struct png_sPLT_struct {
    png_charp name;
    png_byte depth;
    png_sPLT_entryp entries;
    png_int_32 nentries;
} png_sPLT_t;
typedef png_sPLT_t *png_sPLT_tp;
typedef png_sPLT_t **png_sPLT_tpp;
typedef struct png_unknown_chunk_t {
    png_byte name[5];
    png_byte *data;
    png_size_t size;
    png_byte location;
} png_unknown_chunk;


Replace:

typedef struct png_struct_def png_struct;

With:

typedef struct png_struct_def {
    struct __jmp_buf_tag jmpbuf[1];
    png_error_ptr error_fn;
    png_error_ptr warning_fn;
    png_voidp error_ptr;
    png_rw_ptr write_data_fn;
    png_rw_ptr read_data_fn;
    png_voidp io_ptr;
    png_user_transform_ptr read_user_transform_fn;
    png_user_transform_ptr write_user_transform_fn;
    png_voidp user_transform_ptr;
    png_byte user_transform_depth;
    png_byte user_transform_channels;
    png_uint_32 mode;
    png_uint_32 flags;
    png_uint_32 transformations;
    z_stream zstream;
    png_bytep zbuf;
    png_size_t zbuf_size;
    int zlib_level;
    int zlib_method;
    int zlib_window_bits;
    int zlib_mem_level;
    int zlib_strategy;
    png_uint_32 width;
    png_uint_32 height;
    png_uint_32 num_rows;
    png_uint_32 usr_width;
    png_uint_32 rowbytes;
    png_uint_32 irowbytes;
    png_uint_32 iwidth;
    png_uint_32 row_number;
    png_bytep prev_row;
    png_bytep row_buf;
    png_bytep sub_row;
    png_bytep up_row;
    png_bytep avg_row;
    png_bytep paeth_row;
    png_row_info row_info;
    png_uint_32 idat_size;
    png_uint_32 crc;
    png_colorp palette;
    png_uint_16 num_palette;
    png_uint_16 num_trans;
    png_byte chunk_name[5];
    png_byte compression;
    png_byte filter;
    png_byte interlaced;
    png_byte pass;
    png_byte do_filter;
    png_byte color_type;
    png_byte bit_depth;
    png_byte usr_bit_depth;
    png_byte pixel_depth;
    png_byte channels;
    png_byte usr_channels;
    png_byte sig_bytes;
    png_uint_16 filler;
    png_byte background_gamma_type;
    float background_gamma;
    png_color_16 background;
    png_color_16 background_1;
    png_flush_ptr output_flush_fn;
    png_uint_32 flush_dist;
    png_uint_32 flush_rows;
    int gamma_shift;
    float gamma;
    float screen_gamma;
    png_bytep gamma_table;
    png_bytep gamma_from_1;
    png_bytep gamma_to_1;
    png_uint_16pp gamma_16_table;
    png_uint_16pp gamma_16_from_1;
    png_uint_16pp gamma_16_to_1;
    png_color_8 sig_bit;
    png_color_8 shift;
    png_bytep trans;
    png_color_16 trans_values;
    png_read_status_ptr read_row_fn;
    png_write_status_ptr write_row_fn;
    png_progressive_info_ptr info_fn;
    png_progressive_row_ptr row_fn;
    png_progressive_end_ptr end_fn;
    png_bytep save_buffer_ptr;
    png_bytep save_buffer;
    png_bytep current_buffer_ptr;
    png_bytep current_buffer;
    png_uint_32 push_length;
    png_uint_32 skip_length;
    png_size_t save_buffer_size;
    png_size_t save_buffer_max;
    png_size_t buffer_size;
    png_size_t current_buffer_size;
    int process_mode;
    int cur_palette;
    png_size_t current_text_size;
    png_size_t current_text_left;
    png_charp current_text;
    png_charp current_text_ptr;
    png_bytep palette_lookup;
    png_bytep dither_index;
    png_uint_16p hist;
    png_byte heuristic_method;
    png_byte num_prev_filters;
    png_bytep prev_filters;
    png_uint_16p filter_weights;
    png_uint_16p inv_filter_weights;
    png_uint_16p filter_costs;
    png_uint_16p inv_filter_costs;
    png_charp time_buffer;
    png_uint_32 free_me;
    png_voidp user_chunk_ptr;
    png_user_chunk_ptr read_user_chunk_fn;
    int num_chunk_list;
    png_bytep chunk_list;
    png_byte rgb_to_gray_status;
    png_uint_16 rgb_to_gray_red_coeff;
    png_uint_16 rgb_to_gray_green_coeff;
    png_uint_16 rgb_to_gray_blue_coeff;
    png_uint_32 mng_features_permitted;
    png_fixed_point int_gamma;
    png_byte filter_type;
    png_byte mmx_bitdepth_threshold;
    png_uint_32 mmx_rowbytes_threshold;
    png_uint_32 asm_flags;
    png_voidp mem_ptr;
    png_malloc_ptr malloc_fn;
    png_free_ptr free_fn;
    png_bytep big_row_buf;
    png_bytep dither_sort;
    png_bytep index_to_palette;
    png_bytep palette_to_index;
    png_byte compression_type;
    png_uint_32 user_width_max;
    png_uint_32 user_height_max;
    png_unknown_chunk unknown_chunk;
} png_struct;


Replace:

With:

-typedef struct png_info_struct png_info;
typedef struct png_info_struct {
    png_uint_32 width;
    png_uint_32 height;
    png_uint_32 valid;
    png_uint_32 rowbytes;
    png_colorp palette;
    png_uint_16 num_palette;
    png_uint_16 num_trans;
    png_byte bit_depth;
    png_byte color_type;
    png_byte compression_type;
    png_byte filter_type;
    png_byte interlace_type;
    png_byte channels;
    png_byte pixel_depth;
    png_byte spare_byte;
    png_byte signature[8];
    float gamma;
    png_byte srgb_intent;
    int num_text;
    int max_text;
    png_textp text;
    png_time mod_time;
    png_color_8 sig_bit;
    png_bytep trans;
    png_color_16 trans_values;
    png_color_16 background;
    png_int_32 x_offset;
    png_int_32 y_offset;
    png_byte offset_unit_type;
    png_uint_32 x_pixels_per_unit;
    png_uint_32 y_pixels_per_unit;
    png_byte phys_unit_type;
    png_uint_16p hist;
    float x_white;
    float y_white;
    float x_red;
    float y_red;
    float x_green;
    float y_green;
    float x_blue;
    float y_blue;
    png_charp pcal_purpose;
    png_int_32 pcal_X0;
    png_int_32 pcal_X1;
    png_charp pcal_units;
    png_charpp pcal_params;
    png_byte pcal_type;
    png_byte pcal_nparams;
    png_uint_32 free_me;
    png_unknown_chunkp unknown_chunks;
    png_size_t unknown_chunks_num;
    png_charp iccp_name;
    png_charp iccp_profile;
    png_charp iccp_profile;
    png_uint_32 iccp_proflen;
    png_byte iccp_compression;
    png_sPLT_tp splt_palettes;
    png_uint_32 splt_palettes_num;
    png_byte scal_unit;
    double scal_pixel_width;
    double scal_pixel_height;
    png_charp scal_s_width;
    png_charp scal_s_height;
    png_bytepp row_pointers;
    png_fixed_point int_gamma;
    png_fixed_point int_x_white;
    png_fixed_point int_y_white;
    png_fixed_point int_x_red;
    png_fixed_point int_y_red;
    png_fixed_point int_x_green;
    png_fixed_point int_y_green;
    png_fixed_point int_x_blue;
    png_fixed_point int_y_blue;
} png_info;


Add:

typedef void (*png_user_transform_ptr) (png_structp, png_row_infop,
                                        png_bytep);
typedef void (*png_read_status_ptr) (png_structp, png_uint_32, int);
typedef void (*png_write_status_ptr) (png_structp, png_uint_32, int);
typedef void (*png_user_chunk_ptr) (png_structp, png_unknown_chunkp);
typedef png_voidp(*png_malloc_ptr) (png_structp, png_size_t);
typedef void (*png_free_ptr) (png_structp, png_voidp);

