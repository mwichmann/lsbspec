#!/usr/bin/perl
#
#	Linux Standard Base, http://www.linuxbase.org/
#	George Kraft IV, gk4@us.ibm.com, 03/09/2000
#
#


use DBI;
use Env qw(LSBUSER LSBDBPASSWD LSBDB LSBDBHOST);

local %references;
local %standards;

################################################################################
#	lsbOpenDB
################################################################################

sub lsbOpenDB {

	$dbh = DBI->connect("DBI:mysql:$LSBDB", $LSBUSER, $LSBDBPASSWD);
	die unless $dbh;

	$sth = $dbh->prepare( "SHOW TABLES" );
	$sth->execute;

}

################################################################################
#	lsbCloseDB
################################################################################

sub lsbCloseDB {

	$sth = $dbh->prepare( "SHOW TABLES" );
	$sth->execute;

	$sth->finish;
	$dbh->disconnect;
}

################################################################################
#	lsbCommands
################################################################################

sub lsbCommands {

		$sth = $dbh->prepare("SELECT DISTINCT Sfull, Sid FROM Standard,Command WHERE Standard.Sid=Command.Cstandard AND Command.Cstatus='Included' ORDER BY Sname");
		$sth->execute;

		if ($sth->rows > 0) {

		printf("<!-- Start of text generated from database -->\n");
		printf("<PARA>\n");
		printf("The behaviour of the interfaces described in this\n");
		printf("section are specified by the following Standards.");
		printf("</PARA>\n");
		printf("<SIMPLELIST COLUMNS=1>\n");

		my $i = 0;
		while (@field = $sth->fetchrow_array) {
#			if (!$standards{$field[1]}) {
#				++$i;
#				$standards{$field[1]} = $field[2];
#				$references{$i} = $field[1];
#				$permutation{$field[1]} = $i;
#				$ref = $i;
#			} else {
#				$ref = $permutation{$field[1]};
#			}
#
#			$ftid = sprintf("std-fn-%s-%s",  
#				$field[1], $permutation{$field[1]});
#
#			if (!$footer{$ftid}) {
				$footer{$ftid} = $ref;
				printf("<MEMBER>%s\n", $field[0]);
				printf("<FOOTNOTE ID=\"std-cmd-%d\">\n", $field[1]);
				printf("<PARA>%s</PARA></FOOTNOTE>", $field[0]);
				printf("</MEMBER>\n");
#			}
		}
		printf("</SIMPLELIST>\n");
		}

		$sth = $dbh->prepare("SELECT Cname, Cstandard, Sfull, Sid FROM Command LEFT JOIN Standard ON Command.Cstandard=Standard.Sid WHERE Command.Cstatus='Included' ORDER BY Command.Cname");
		$sth->execute;

		if ($sth->rows < 1) {
			printf("<PARA>No Commands or Utilities found!</PARA>\n");
			return;
		} 

		printf("<TABLE>\n");
		printf("<TITLE>Commands and Utilities</TITLE>\n");
		printf("<TGROUP COLS=5>\n");
		printf("<TBODY>\n");
		printf("<ROW>\n");

		my $i = 0;
		while (@field = $sth->fetchrow_array) {
			$ref = $permutation{$field[1]};

			if ($i != 0 && 0 == ($i % 5)) {
				printf("</ROW><ROW>\n");
			}

			#$ftid = sprintf("std-fn-%s-%s",  
			#	$field[1], $permutation{$field[1]});

			printf("<ENTRY>%s\n", $field[0]);
			if( $field[3] ) {
				printf("<FOOTNOTEREF LINKEND=\"std-cmd-%d\">\n", $field[3] );
				}
			printf("</ENTRY>\n");

			++$i;
		}

		printf("</ROW>\n");
		printf("</TBODY>\n");
		printf("</TGROUP>\n");
		printf("</TABLE>\n");
		printf("<!-- End of text generated from database -->\n");

#		foreach $key (keys %standards) {
#			printf("<FOOTNOTE ID=\"std-%s-%s\">\n", $key, $permutation{$key});
#			printf("<PARA>\n");
#			printf("%s\n", $standards{$key});
#			printf("</PARA>\n</FOOTNOTE>\n");
#		}

}

################################################################################
#	main
################################################################################

lsbOpenDB;
lsbCommands;
lsbCloseDB;

exit;

# EOF
