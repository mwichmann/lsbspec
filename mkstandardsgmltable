#!/usr/bin/perl

use Carp;
use Getopt::Long;
use Mysql;

use Env qw(LSBUSER LSBDBPASSWD LSBDB LSBDBHOST);

sub usage()
{
print STDERR "mkstandardsgmltable -a <archname>\n";
die;
}

# Uncomment to trace SQL statments
#$trace=1;

#
# 1) process the arguments
#

GetOptions("a=s" => \$archname, "s=s" => \$specids, "x=s" => \$exclids);

if( !$archname && !$specids ) { usage(); }

#
# 2) Establish connection to the database
#
$Dbh = Mysql->connect($LSBDBHOST,$LSBDB,$LSBUSER,$LSBDBPASSWD) || die $Mysql::db_errstr;

#
# 3) get & print the architecture info
#
if( $archname ) {
	$select = "SELECT * FROM Architecture WHERE ";
	$select.= "Architecture.Aname=".$Dbh->quote($archname);
	print STDERR $select,"\n" if $trace;
	$sth = $Dbh->query($select) || die $select."\n".$Dbh->errmsg();

	%entry=$sth->fetchhash;
	$Aid=$entry{'Aid'};
} else {
	$Aid=0;
}

$select = "SELECT * FROM Standard ";
$select.= "WHERE Stype='Standard' ";
$select.= "AND ( Sarch=$Aid OR Sarch=1 ) ";
if( $specids ) {
	$select.= "AND Sname IN ( $specids ) ";
}
if( $exclids ) {
	$select.= "AND Sname NOT IN ( $exclids ) ";
}
$select.= "ORDER BY Sshort";

#printf $select,"\n";
$sth = $Dbh->query($select) || die $Dbh->errmsg();

printf("<!-- Start of text generated from database -->\n");
printf("<!-- generated from the LSB specification database -->\n");
printf("<!--    by \$Header: /home/mats.deb/cvsrepo/lsb/lsbspec.smaller/mkstandardsgmltable,v 1.13 2004-09-20 18:31:52 nick Exp $- -->\n");
my $now_string = localtime;
printf("<!--    at %s -->\n", $now_string );

print "<THEAD>\n";
print "<ROW>";
print "<ENTRY>Name</ENTRY><ENTRY>Title</ENTRY><ENTRY>URL</ENTRY>";
print "</ROW>";
print "</THEAD>\n";
print "<TBODY>\n";
for(1..$sth->numrows) {
	%entry=$sth->fetchhash;
	print "<ROW>";
	# Don't print the nickname. It may be confusing
	#printf "<ENTRY>%s</ENTRY>",$entry{'Sname'};
	printf "<ENTRY ID=\"std.%s\" XREFLABEL=\"%s\">%s</ENTRY>",makeid($entry{'Sname'}),$entry{'Sshort'},$entry{'Sshort'};
	printf "<ENTRY>%s</ENTRY", $entry{'Sfull'};
	printf "<ENTRY><ULINK URL=\"%s\">%s</ULINK></ENTRY>",
					$entry{'Surl'}, $entry{'Surl'};
	#printf "<ENTRY>%s</ENTRY>",$entry{'Scomment'};
	print "</ROW>\n";
}
print "</TBODY>\n";
printf("<!-- End of text generated from database -->\n");
printf("<!--    by \$Header: /home/mats.deb/cvsrepo/lsb/lsbspec.smaller/mkstandardsgmltable,v 1.13 2004-09-20 18:31:52 nick Exp $- -->\n");

sub makeid {
	my ($name) = @_;
	$name =~ s/\s+/./g;
	$name =~ s/[^A-Za-z0-9.]+/./g;
	# finally, remove any repeated . (e.g. "RPC...XDR" which arose from "RPC & XDR")
	$name =~ s/\.\.+/./g;
	return $name;
}
