<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibapnd -->
<sect1 id=app-libc>
<title>libc</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LFS"> [LFS]
</member>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.RPC.XDR"> [RPC + XDR]
</member>
<member>
<xref linkend="std.SUSv2"> [SUSv2]
</member>
<member>
<xref linkend="std.SUSv3"> [SUSv3]
</member>
<member>
<xref linkend="std.SUSv4"> [SUSv4]
</member>
<member>
<xref linkend="std.SVID.4"> [SVID.4]
</member>
</simplelist>
</para>
<table>
<title>libc Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>_Exit<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>getdelim<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scandir<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_IO_feof<link linkend="std.LSB">[LSB]</link></entry><entry>getdomainname<link linkend="std.LSB">[LSB]</link></entry><entry>scandir64<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>_IO_getc<link linkend="std.LSB">[LSB]</link></entry><entry>getdtablesize<link linkend="std.LSB">[LSB]</link></entry><entry>scanf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>_IO_putc<link linkend="std.LSB">[LSB]</link></entry><entry>getegid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sched_get_priority_max<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_IO_puts<link linkend="std.LSB">[LSB]</link></entry><entry>getenv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sched_get_priority_min<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__assert_fail<link linkend="std.LSB">[LSB]</link></entry><entry>geteuid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sched_getaffinity(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__chk_fail(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getgid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sched_getparam<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__confstr_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getgrent<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sched_getscheduler<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__ctype_b_loc(GLIBC_2.3)<link linkend="std.LSB">[LSB]</link></entry><entry>getgrent_r<link linkend="std.LSB">[LSB]</link></entry><entry>sched_rr_get_interval<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__ctype_get_mb_cur_max<link linkend="std.LSB">[LSB]</link></entry><entry>getgrgid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sched_setaffinity(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__ctype_tolower_loc(GLIBC_2.3)<link linkend="std.LSB">[LSB]</link></entry><entry>getgrgid_r<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sched_setparam<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__ctype_toupper_loc(GLIBC_2.3)<link linkend="std.LSB">[LSB]</link></entry><entry>getgrnam<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sched_setscheduler<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__cxa_atexit<link linkend="std.LSB">[LSB]</link></entry><entry>getgrnam_r<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sched_yield<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__cxa_finalize<link linkend="std.LSB">[LSB]</link></entry><entry>getgrouplist<link linkend="std.LSB">[LSB]</link></entry><entry>seed48<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__errno_location<link linkend="std.LSB">[LSB]</link></entry><entry>getgroups<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>seed48_r<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__fgets_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>gethostbyaddr<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>seekdir<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fgets_unlocked_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>gethostbyaddr_r<link linkend="std.LSB">[LSB]</link></entry><entry>select<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fgetws_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>gethostbyname<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>semctl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fgetws_unlocked_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>gethostbyname2<link linkend="std.LSB">[LSB]</link></entry><entry>semget<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fpending<link linkend="std.LSB">[LSB]</link></entry><entry>gethostbyname2_r<link linkend="std.LSB">[LSB]</link></entry><entry>semop<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fprintf_chk<link linkend="std.LSB">[LSB]</link></entry><entry>gethostbyname_r<link linkend="std.LSB">[LSB]</link></entry><entry>send<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fwprintf_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>gethostid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sendfile<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__fxstat<link linkend="std.LSB">[LSB]</link></entry><entry>gethostname<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sendfile64(GLIBC_2.3)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__fxstat64<link linkend="std.LSB">[LSB]</link></entry><entry>getifaddrs(GLIBC_2.3)<link linkend="std.LSB">[LSB]</link></entry><entry>sendmsg<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fxstatat(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getitimer<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sendto<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fxstatat64(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getline<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setbuf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__getcwd_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getloadavg<link linkend="std.LSB">[LSB]</link></entry><entry>setbuffer<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__getgroups_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getlogin<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setcontext<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>__gethostname_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getlogin_r<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setegid<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__getlogin_r_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getnameinfo<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setenv<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__getpagesize<link linkend="std.LSB">[LSB]</link></entry><entry>getopt<link linkend="std.LSB">[LSB]</link></entry><entry>seteuid<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__getpgid<link linkend="std.LSB">[LSB]</link></entry><entry>getopt_long<link linkend="std.LSB">[LSB]</link></entry><entry>setgid<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__h_errno_location<link linkend="std.LSB">[LSB]</link></entry><entry>getopt_long_only<link linkend="std.LSB">[LSB]</link></entry><entry>setgrent<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__isinf<link linkend="std.LSB">[LSB]</link></entry><entry>getpagesize<link linkend="std.LSB">[LSB]</link></entry><entry>setgroups<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__isinff<link linkend="std.LSB">[LSB]</link></entry><entry>getpeername<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sethostname<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__isinfl<link linkend="std.LSB">[LSB]</link></entry><entry>getpgid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setitimer<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__isnan<link linkend="std.LSB">[LSB]</link></entry><entry>getpgrp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setlocale<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__isnanf<link linkend="std.LSB">[LSB]</link></entry><entry>getpid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setlogmask<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__isnanl<link linkend="std.LSB">[LSB]</link></entry><entry>getppid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setpgid<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__libc_current_sigrtmax<link linkend="std.LSB">[LSB]</link></entry><entry>getpriority<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setpgrp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__libc_current_sigrtmin<link linkend="std.LSB">[LSB]</link></entry><entry>getprotobyname<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setpriority<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__libc_start_main<link linkend="std.LSB">[LSB]</link></entry><entry>getprotobyname_r<link linkend="std.LSB">[LSB]</link></entry><entry>setprotoent<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__lxstat<link linkend="std.LSB">[LSB]</link></entry><entry>getprotobynumber<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setpwent<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__lxstat64<link linkend="std.LSB">[LSB]</link></entry><entry>getprotobynumber_r<link linkend="std.LSB">[LSB]</link></entry><entry>setregid<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__mbsnrtowcs_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getprotoent<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setreuid<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__mbsrtowcs_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getprotoent_r<link linkend="std.LSB">[LSB]</link></entry><entry>setrlimit<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__mbstowcs_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getpwent<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setrlimit64<link linkend="std.LFS">[LFS]</link></entry></row>
<row><entry>__memcpy_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getpwent_r<link linkend="std.LSB">[LSB]</link></entry><entry>setservent<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__memmove_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getpwnam<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setsid<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__mempcpy<link linkend="std.LSB">[LSB]</link></entry><entry>getpwnam_r<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setsockopt<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__mempcpy_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getpwuid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setstate<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__memset_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getpwuid_r<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setstate_r<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__pread64_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getrlimit<link linkend="std.LSB">[LSB]</link></entry><entry>setuid<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__pread_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getrlimit64<link linkend="std.LFS">[LFS]</link></entry><entry>setutent<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__printf_chk<link linkend="std.LSB">[LSB]</link></entry><entry>getrusage<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setutxent<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__rawmemchr<link linkend="std.LSB">[LSB]</link></entry><entry>getservbyname<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setvbuf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__read_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getservbyname_r<link linkend="std.LSB">[LSB]</link></entry><entry>shmat<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__readlink_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getservbyport<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>shmctl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__realpath_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getservbyport_r<link linkend="std.LSB">[LSB]</link></entry><entry>shmdt<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__recv_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getservent<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>shmget<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__recvfrom_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getservent_r<link linkend="std.LSB">[LSB]</link></entry><entry>shutdown<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__register_atfork(GLIBC_2.3.2)<link linkend="std.LSB">[LSB]</link></entry><entry>getsid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigaction<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__sigsetjmp<link linkend="std.LSB">[LSB]</link></entry><entry>getsockname<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigaddset<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__snprintf_chk<link linkend="std.LSB">[LSB]</link></entry><entry>getsockopt<link linkend="std.LSB">[LSB]</link></entry><entry>sigaltstack<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__sprintf_chk<link linkend="std.LSB">[LSB]</link></entry><entry>getsubopt<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigandset<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__stack_chk_fail(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>gettext<link linkend="std.LSB">[LSB]</link></entry><entry>sigdelset<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__stpcpy<link linkend="std.LSB">[LSB]</link></entry><entry>gettimeofday<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigemptyset<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__stpcpy_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getuid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigfillset<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__stpncpy_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getutent<link linkend="std.LSB">[LSB]</link></entry><entry>sighold<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strcat_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getutent_r<link linkend="std.LSB">[LSB]</link></entry><entry>sigignore<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strcpy_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getutxent<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>siginterrupt<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strdup<link linkend="std.LSB">[LSB]</link></entry><entry>getutxid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigisemptyset<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__strncat_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getutxline<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigismember<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strncpy_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getw<link linkend="std.SUSv2">[SUSv2]</link></entry><entry>siglongjmp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strtod_internal<link linkend="std.LSB">[LSB]</link></entry><entry>getwc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>signal<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strtof_internal<link linkend="std.LSB">[LSB]</link></entry><entry>getwc_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>sigorset<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__strtok_r<link linkend="std.LSB">[LSB]</link></entry><entry>getwchar<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigpause<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__strtol_internal<link linkend="std.LSB">[LSB]</link></entry><entry>getwchar_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>sigpending<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strtold_internal<link linkend="std.LSB">[LSB]</link></entry><entry>getwd<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>sigprocmask<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strtoll_internal<link linkend="std.LSB">[LSB]</link></entry><entry>glob<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigqueue<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strtoul_internal<link linkend="std.LSB">[LSB]</link></entry><entry>glob64<link linkend="std.LSB">[LSB]</link></entry><entry>sigrelse<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strtoull_internal<link linkend="std.LSB">[LSB]</link></entry><entry>globfree<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigreturn<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__swprintf_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>globfree64<link linkend="std.LSB">[LSB]</link></entry><entry>sigset<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__sysconf<link linkend="std.LSB">[LSB]</link></entry><entry>gmtime<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigsuspend<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__syslog_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>gmtime_r<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigtimedwait<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__sysv_signal<link linkend="std.LSB">[LSB]</link></entry><entry>gnu_get_libc_release<link linkend="std.LSB">[LSB]</link></entry><entry>sigwait<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__ttyname_r_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>gnu_get_libc_version<link linkend="std.LSB">[LSB]</link></entry><entry>sigwaitinfo<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__vfprintf_chk<link linkend="std.LSB">[LSB]</link></entry><entry>grantpt<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sleep<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__vfwprintf_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>hcreate<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>snprintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__vprintf_chk<link linkend="std.LSB">[LSB]</link></entry><entry>hcreate_r<link linkend="std.LSB">[LSB]</link></entry><entry>sockatmark<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__vsnprintf_chk<link linkend="std.LSB">[LSB]</link></entry><entry>hdestroy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>socket<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__vsprintf_chk<link linkend="std.LSB">[LSB]</link></entry><entry>hdestroy_r<link linkend="std.LSB">[LSB]</link></entry><entry>socketpair<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__vswprintf_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>hsearch<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sprintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__vsyslog_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>hsearch_r<link linkend="std.LSB">[LSB]</link></entry><entry>srand<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__vwprintf_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>htonl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>srand48<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wcpcpy_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>htons<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>srand48_r<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__wcpncpy_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>iconv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>srandom<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wcrtomb_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>iconv_close<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>srandom_r<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__wcscat_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>iconv_open<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sscanf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__wcscpy_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>if_freenameindex<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>statfs<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__wcsncat_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>if_indextoname<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>statfs64<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__wcsncpy_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>if_nameindex<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>statvfs<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wcsnrtombs_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>if_nametoindex<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>statvfs64<link linkend="std.LFS">[LFS]</link></entry></row>
<row><entry>__wcsrtombs_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>imaxabs<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>stime<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__wcstod_internal<link linkend="std.LSB">[LSB]</link></entry><entry>imaxdiv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>stpcpy<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wcstof_internal<link linkend="std.LSB">[LSB]</link></entry><entry>index<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>stpncpy<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wcstol_internal<link linkend="std.LSB">[LSB]</link></entry><entry>inet_addr<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strcasecmp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wcstold_internal<link linkend="std.LSB">[LSB]</link></entry><entry>inet_aton<link linkend="std.LSB">[LSB]</link></entry><entry>strcasecmp_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wcstombs_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>inet_ntoa<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strcasestr<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__wcstoul_internal<link linkend="std.LSB">[LSB]</link></entry><entry>inet_ntop<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strcat<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wctomb_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>inet_pton<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strchr<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wmemcpy_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>initgroups<link linkend="std.LSB">[LSB]</link></entry><entry>strcmp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wmemmove_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>initstate<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strcoll<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wmempcpy_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>initstate_r<link linkend="std.LSB">[LSB]</link></entry><entry>strcoll_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wmemset_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>inotify_add_watch(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>strcpy<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wprintf_chk(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>inotify_init(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>strcspn<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__xmknod<link linkend="std.LSB">[LSB]</link></entry><entry>inotify_rm_watch(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>strdup<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__xmknodat(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>insque<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strerror<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__xpg_basename<link linkend="std.LSB">[LSB]</link></entry><entry>ioctl<link linkend="std.LSB">[LSB]</link></entry><entry>strerror_l(GLIBC_2.6)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__xpg_sigpause<link linkend="std.LSB">[LSB]</link></entry><entry>isalnum<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strerror_r<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__xpg_strerror_r(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>isalnum_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strfmon<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__xstat<link linkend="std.LSB">[LSB]</link></entry><entry>isalpha<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strfmon_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__xstat64<link linkend="std.LSB">[LSB]</link></entry><entry>isalpha_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strftime<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_exit<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isascii<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strftime_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_longjmp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isatty<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strlen<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_setjmp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isblank<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strncasecmp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_tolower<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isblank_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strncasecmp_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_toupper<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iscntrl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strncat<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>a64l<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iscntrl_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strncmp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>abort<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isdigit<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strncpy<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>abs<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isdigit_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strndup<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>accept<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isgraph<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strnlen<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>access<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isgraph_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strpbrk<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>acct<link linkend="std.LSB">[LSB]</link></entry><entry>islower<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strptime<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>adjtime<link linkend="std.LSB">[LSB]</link></entry><entry>islower_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strrchr<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>alarm<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isprint<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strsep<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>alphasort<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isprint_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strsignal<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>alphasort64<link linkend="std.LSB">[LSB]</link></entry><entry>ispunct<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strspn<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_add<link linkend="std.LSB">[LSB]</link></entry><entry>ispunct_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strstr<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_add_sep<link linkend="std.LSB">[LSB]</link></entry><entry>isspace<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtod<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_append<link linkend="std.LSB">[LSB]</link></entry><entry>isspace_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtof<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_count<link linkend="std.LSB">[LSB]</link></entry><entry>isupper<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtoimax<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_create<link linkend="std.LSB">[LSB]</link></entry><entry>isupper_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtok<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_create_sep<link linkend="std.LSB">[LSB]</link></entry><entry>iswalnum<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtok_r<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_delete<link linkend="std.LSB">[LSB]</link></entry><entry>iswalnum_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtol<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_extract<link linkend="std.LSB">[LSB]</link></entry><entry>iswalpha<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtold<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_insert<link linkend="std.LSB">[LSB]</link></entry><entry>iswalpha_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtoll<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_next<link linkend="std.LSB">[LSB]</link></entry><entry>iswblank<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtoq<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>argz_replace<link linkend="std.LSB">[LSB]</link></entry><entry>iswblank_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtoul<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_stringify<link linkend="std.LSB">[LSB]</link></entry><entry>iswcntrl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtoull<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asctime<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iswcntrl_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtoumax<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asctime_r<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iswctype<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtouq<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>asprintf<link linkend="std.LSB">[LSB]</link></entry><entry>iswctype_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strxfrm<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atof<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iswdigit<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strxfrm_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atoi<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iswdigit_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svc_getreqset<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>atol<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iswgraph<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svc_register<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>atoll<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iswgraph_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svc_run<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>authnone_create<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>iswlower<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svc_sendreply<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>backtrace<link linkend="std.LSB">[LSB]</link></entry><entry>iswlower_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcerr_auth<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>backtrace_symbols<link linkend="std.LSB">[LSB]</link></entry><entry>iswprint<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcerr_decode<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>backtrace_symbols_fd<link linkend="std.LSB">[LSB]</link></entry><entry>iswprint_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcerr_noproc<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>basename<link linkend="std.LSB">[LSB]</link></entry><entry>iswpunct<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcerr_noprog<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>bcmp<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>iswpunct_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcerr_progvers<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>bcopy<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>iswspace<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcerr_systemerr<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>bind<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iswspace_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcerr_weakauth<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>bind_textdomain_codeset<link linkend="std.LSB">[LSB]</link></entry><entry>iswupper<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcfd_create<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry></row>
<row><entry>bindresvport<link linkend="std.LSB">[LSB]</link></entry><entry>iswupper_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcraw_create<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry></row>
<row><entry>bindtextdomain<link linkend="std.LSB">[LSB]</link></entry><entry>iswxdigit<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svctcp_create<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>brk<link linkend="std.SUSv2">[SUSv2]</link></entry><entry>iswxdigit_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcudp_create<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>bsd_signal<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>isxdigit<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>swab<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>bsearch<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isxdigit_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>swapcontext<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>btowc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>jrand48<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>swprintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>bzero<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>jrand48_r<link linkend="std.LSB">[LSB]</link></entry><entry>swscanf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>calloc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>key_decryptsession<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>symlink<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>callrpc<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry><entry>kill<link linkend="std.LSB">[LSB]</link></entry><entry>symlinkat(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catclose<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>killpg<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sync<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catgets<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>l64a<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sysconf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>catopen<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>labs<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sysinfo<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cfgetispeed<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lchown<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>syslog<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cfgetospeed<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lcong48<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>system<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cfmakeraw<link linkend="std.LSB">[LSB]</link></entry><entry>lcong48_r<link linkend="std.LSB">[LSB]</link></entry><entry>tcdrain<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cfsetispeed<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ldiv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcflow<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cfsetospeed<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lfind<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcflush<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cfsetspeed<link linkend="std.LSB">[LSB]</link></entry><entry>link<link linkend="std.LSB">[LSB]</link></entry><entry>tcgetattr<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>chdir<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>linkat(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcgetpgrp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>chmod<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>listen<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcgetsid<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>chown<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>llabs<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcsendbreak<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>chroot<link linkend="std.SUSv2">[SUSv2]</link></entry><entry>lldiv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcsetattr<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clearerr<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>localeconv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcsetpgrp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clearerr_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>localtime<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tdelete<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clnt_create<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>localtime_r<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>telldir<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clnt_pcreateerror<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>lockf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tempnam<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clnt_perrno<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>lockf64<link linkend="std.LFS">[LFS]</link></entry><entry>textdomain<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>clnt_perror<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>longjmp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tfind<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clnt_spcreateerror<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>lrand48<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>time<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clnt_sperrno<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>lrand48_r<link linkend="std.LSB">[LSB]</link></entry><entry>times<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clnt_sperror<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>lsearch<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tmpfile<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clntraw_create<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry><entry>lseek<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tmpfile64<link linkend="std.LFS">[LFS]</link></entry></row>
<row><entry>clnttcp_create<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry><entry>lseek64<link linkend="std.LFS">[LFS]</link></entry><entry>tmpnam<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clntudp_bufcreate<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry><entry>lutimes(GLIBC_2.3)<link linkend="std.LSB">[LSB]</link></entry><entry>toascii<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clntudp_create<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry><entry>makecontext<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>tolower<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clock<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>malloc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tolower_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>close<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mblen<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>toupper<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>closedir<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mbrlen<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>toupper_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>closelog<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mbrtowc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>towctrans<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>confstr<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mbsinit<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>towctrans_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>connect<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mbsnrtowcs<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>towlower<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>creat<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mbsrtowcs<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>towlower_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>creat64<link linkend="std.LFS">[LFS]</link></entry><entry>mbstowcs<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>towupper<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ctermid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mbtowc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>towupper_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ctime<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>memccpy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>truncate<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ctime_r<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>memchr<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>truncate64<link linkend="std.LFS">[LFS]</link></entry></row>
<row><entry>cuserid<link linkend="std.SUSv2">[SUSv2]</link></entry><entry>memcmp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tsearch<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>daemon<link linkend="std.LSB">[LSB]</link></entry><entry>memcpy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ttyname<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dcgettext<link linkend="std.LSB">[LSB]</link></entry><entry>memmem<link linkend="std.LSB">[LSB]</link></entry><entry>ttyname_r<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dcngettext<link linkend="std.LSB">[LSB]</link></entry><entry>memmove<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>twalk<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dgettext<link linkend="std.LSB">[LSB]</link></entry><entry>memrchr<link linkend="std.LSB">[LSB]</link></entry><entry>tzset<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>difftime<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>memset<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ualarm<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>dirfd<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mkdir<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ulimit<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dirname<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mkdirat(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>umask<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>div<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mkdtemp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>uname<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dl_iterate_phdr<link linkend="std.LSB">[LSB]</link></entry><entry>mkfifo<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ungetc<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dngettext<link linkend="std.LSB">[LSB]</link></entry><entry>mkfifoat(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ungetwc<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dprintf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mkstemp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>unlink<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>drand48<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mkstemp64<link linkend="std.LSB">[LSB]</link></entry><entry>unlinkat(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>drand48_r<link linkend="std.LSB">[LSB]</link></entry><entry>mktemp<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>unlockpt<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dup<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mktime<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>unsetenv<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dup2<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mlock<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>uselocale(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>duplocale(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mlockall<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>usleep<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>ecvt<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>mmap<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>utime<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>endgrent<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mmap64<link linkend="std.LFS">[LFS]</link></entry><entry>utimensat(GLIBC_2.6)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>endprotoent<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mprotect<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>utimes<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>endpwent<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mrand48<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>utmpname<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>endservent<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mrand48_r<link linkend="std.LSB">[LSB]</link></entry><entry>vasprintf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>endutent<link linkend="std.LSB">[LSB]</link></entry><entry>mremap<link linkend="std.LSB">[LSB]</link></entry><entry>vdprintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>endutxent<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>msgctl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>verrx<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>envz_add<link linkend="std.LSB">[LSB]</link></entry><entry>msgget<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vfork<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>envz_entry<link linkend="std.LSB">[LSB]</link></entry><entry>msgrcv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vfprintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>envz_get<link linkend="std.LSB">[LSB]</link></entry><entry>msgsnd<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vfscanf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>envz_merge<link linkend="std.LSB">[LSB]</link></entry><entry>msync<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vfwprintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>envz_remove<link linkend="std.LSB">[LSB]</link></entry><entry>munlock<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vfwscanf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>envz_strip<link linkend="std.LSB">[LSB]</link></entry><entry>munlockall<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vprintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>epoll_create(GLIBC_2.3.2)<link linkend="std.LSB">[LSB]</link></entry><entry>munmap<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vscanf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>epoll_ctl(GLIBC_2.3.2)<link linkend="std.LSB">[LSB]</link></entry><entry>nanosleep<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vsnprintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>epoll_wait(GLIBC_2.3.2)<link linkend="std.LSB">[LSB]</link></entry><entry>newlocale(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vsprintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>erand48<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nftw<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vsscanf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>erand48_r<link linkend="std.LSB">[LSB]</link></entry><entry>nftw64<link linkend="std.LFS">[LFS]</link></entry><entry>vswprintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>err<link linkend="std.LSB">[LSB]</link></entry><entry>ngettext<link linkend="std.LSB">[LSB]</link></entry><entry>vswscanf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>error<link linkend="std.LSB">[LSB]</link></entry><entry>nice<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vsyslog<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>errx<link linkend="std.LSB">[LSB]</link></entry><entry>nl_langinfo<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vwprintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>execl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nrand48<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vwscanf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>execle<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nrand48_r<link linkend="std.LSB">[LSB]</link></entry><entry>wait<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>execlp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ntohl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wait4<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>execv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ntohs<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>waitid<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>execve<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>open<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>waitpid<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>execvp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>open64<link linkend="std.LFS">[LFS]</link></entry><entry>warn<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>exit<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>open_memstream<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>warnx<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>faccessat(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>open_wmemstream(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcpcpy<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fchdir<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>openat(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcpncpy<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fchmod<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>openat64(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>wcrtomb<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fchmodat(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>opendir<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcscasecmp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fchown<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>openlog<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcscasecmp_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fchownat(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pathconf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcscat<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fclose<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pause<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcschr<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fcntl<link linkend="std.LSB">[LSB]</link></entry><entry>pclose<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcscmp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fcvt<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>perror<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcscoll<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fdatasync<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pipe<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcscoll_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fdopen<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pmap_getport<link linkend="std.LSB">[LSB]</link></entry><entry>wcscpy<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fdopendir(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pmap_set<link linkend="std.LSB">[LSB]</link></entry><entry>wcscspn<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>feof<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pmap_unset<link linkend="std.LSB">[LSB]</link></entry><entry>wcsdup<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>feof_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>poll<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsftime<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ferror<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>popen<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcslen<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ferror_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>posix_fadvise<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsncasecmp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fexecve<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_fadvise64<link linkend="std.LSB">[LSB]</link></entry><entry>wcsncasecmp_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fflush<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_fallocate<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsncat<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fflush_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>posix_fallocate64<link linkend="std.LSB">[LSB]</link></entry><entry>wcsncmp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ffs<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_madvise<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsncpy<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgetc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_memalign<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsnlen<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgetc_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>posix_openpt<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsnrtombs<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgetpos<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawn<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcspbrk<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgetpos64<link linkend="std.LFS">[LFS]</link></entry><entry>posix_spawn_file_actions_addclose<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsrchr<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgets<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawn_file_actions_adddup2<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsrtombs<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgets_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>posix_spawn_file_actions_addopen<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsspn<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgetwc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawn_file_actions_destroy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsstr<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgetwc_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>posix_spawn_file_actions_init<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstod<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgetws<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_destroy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstof<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgetws_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>posix_spawnattr_getflags<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstoimax<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fileno<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_getpgroup<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstok<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fileno_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>posix_spawnattr_getschedparam<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstol<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>flock<link linkend="std.LSB">[LSB]</link></entry><entry>posix_spawnattr_getschedpolicy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstold<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>flockfile<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_getsigdefault<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstoll<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fmemopen<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_getsigmask<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstombs<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fmtmsg<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_init<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstoq<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fnmatch<link linkend="std.LSB">[LSB]</link></entry><entry>posix_spawnattr_setflags<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstoul<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fopen<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_setpgroup<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstoull<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fopen64<link linkend="std.LFS">[LFS]</link></entry><entry>posix_spawnattr_setschedparam<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstoumax<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fork<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_setschedpolicy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstouq<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fpathconf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_setsigdefault<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcswcs<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>fprintf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_setsigmask<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcswidth<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsxfrm<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputc_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>pread<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsxfrm_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputs<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pread64<link linkend="std.LSB">[LSB]</link></entry><entry>wctob<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputs_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>printf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wctomb<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputwc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pselect<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wctrans<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputwc_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>psiginfo(GLIBC_2.10)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wctrans_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputws<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>psignal<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wctype<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputws_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>ptrace<link linkend="std.LSB">[LSB]</link></entry><entry>wctype_l(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fread<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ptsname<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcwidth<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fread_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>putc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wmemchr<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>free<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>putc_unlocked<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wmemcmp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>freeaddrinfo<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>putchar<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wmemcpy<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>freeifaddrs(GLIBC_2.3)<link linkend="std.LSB">[LSB]</link></entry><entry>putchar_unlocked<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wmemmove<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>freelocale(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>putenv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wmemset<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>freopen<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>puts<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wordexp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>freopen64<link linkend="std.LFS">[LFS]</link></entry><entry>pututxline<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wordfree<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fscanf<link linkend="std.LSB">[LSB]</link></entry><entry>putw<link linkend="std.SUSv2">[SUSv2]</link></entry><entry>wprintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fseek<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>putwc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>write<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fseeko<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>putwc_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>writev<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fseeko64<link linkend="std.LFS">[LFS]</link></entry><entry>putwchar<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wscanf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fsetpos<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>putwchar_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>xdr_accepted_reply<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>fsetpos64<link linkend="std.LFS">[LFS]</link></entry><entry>pwrite<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_array<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>fstatfs<link linkend="std.LSB">[LSB]</link></entry><entry>pwrite64<link linkend="std.LSB">[LSB]</link></entry><entry>xdr_bool<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>fstatfs64<link linkend="std.LSB">[LSB]</link></entry><entry>qsort<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_bytes<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>fstatvfs<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>raise<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_callhdr<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>fstatvfs64<link linkend="std.LFS">[LFS]</link></entry><entry>rand<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_callmsg<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>fsync<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>rand_r<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_char<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>ftell<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>random<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_double<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>ftello<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>random_r<link linkend="std.LSB">[LSB]</link></entry><entry>xdr_enum<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>ftello64<link linkend="std.LFS">[LFS]</link></entry><entry>read<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_float<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>ftime<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>readdir<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_free<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>ftok<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>readdir64<link linkend="std.LFS">[LFS]</link></entry><entry>xdr_int<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>ftruncate<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>readdir64_r<link linkend="std.LSB">[LSB]</link></entry><entry>xdr_long<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>ftruncate64<link linkend="std.LFS">[LFS]</link></entry><entry>readdir_r<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_opaque<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>ftrylockfile<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>readlink<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_opaque_auth<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>ftw<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>readlinkat(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_pointer<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>ftw64<link linkend="std.LFS">[LFS]</link></entry><entry>readv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_reference<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>funlockfile<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>realloc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_rejected_reply<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>futimens(GLIBC_2.6)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>realpath<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_replymsg<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>futimes(GLIBC_2.3)<link linkend="std.LSB">[LSB]</link></entry><entry>recv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_short<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>fwide<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>recvfrom<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_string<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>fwprintf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>recvmsg<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_u_char<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>fwrite<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>regcomp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_u_int<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fwrite_unlocked<link linkend="std.LSB">[LSB]</link></entry><entry>regerror<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_u_long<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>fwscanf<link linkend="std.LSB">[LSB]</link></entry><entry>regexec<link linkend="std.LSB">[LSB]</link></entry><entry>xdr_u_short<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>gai_strerror<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>regfree<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_union<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>gcvt<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>remove<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_vector<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getaddrinfo<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remque<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_void<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>rename<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_wrapstring<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getc_unlocked<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>renameat(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdrmem_create<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getchar<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>rewind<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdrrec_create<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getchar_unlocked<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>rewinddir<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdrrec_endofrecord<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry></row>
<row><entry>getcontext<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>rindex<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>xdrrec_eof<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getcwd<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>rmdir<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdrrec_skiprecord<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry></row>
<row><entry>getdate<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sbrk<link linkend="std.SUSv2">[SUSv2]</link></entry><entry>xdrstdio_create<link linkend="std.LSB">[LSB]</link></entry></row>
</tbody>
</tgroup>
</table>
<table>
<title>libc Data Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>__daylight<link linkend="std.LSB">[LSB]</link></entry><entry>__tzname<link linkend="std.LSB">[LSB]</link></entry><entry>in6addr_loopback<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>__environ<link linkend="std.LSB">[LSB]</link></entry><entry>_sys_errlist<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
<row><entry>__timezone<link linkend="std.LSB">[LSB]</link></entry><entry>in6addr_any<link linkend="std.SUSv3">[SUSv3]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libcrypt>
<title>libcrypt</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.SUSv4"> [SUSv4]
</member>
</simplelist>
</para>
<table>
<title>libcrypt Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>crypt<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>encrypt<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setkey<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>crypt_r<link linkend="std.LSB">[LSB]</link></entry><entry>encrypt_r<link linkend="std.LSB">[LSB]</link></entry><entry>setkey_r<link linkend="std.LSB">[LSB]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libdl>
<title>libdl</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.SUSv4"> [SUSv4]
</member>
</simplelist>
</para>
<table>
<title>libdl Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>dladdr<link linkend="std.LSB">[LSB]</link></entry><entry>dlerror<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>dlsym<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>dlclose<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>dlopen<link linkend="std.LSB">[LSB]</link></entry><entry>dlvsym<link linkend="std.LSB">[LSB]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libgcc-s>
<title>libgcc_s</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
</simplelist>
</para>
<table>
<title>libgcc_s Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>_Unwind_Backtrace<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_GetGR<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_RaiseException<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>_Unwind_DeleteException<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_GetIP<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_Resume<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>_Unwind_FindEnclosingFunction<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_GetIPInfo(GCC_4.2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_Resume_or_Rethrow<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>_Unwind_ForcedUnwind<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_GetLanguageSpecificData<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_SetGR<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>_Unwind_GetCFA<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_GetRegionStart<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_SetIP<link linkend="std.LSB">[LSB]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libm>
<title>libm</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.SUSv3"> [SUSv3]
</member>
<member>
<xref linkend="std.SUSv4"> [SUSv4]
</member>
</simplelist>
</para>
<table>
<title>libm Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>__finite<link linkend="std.LSB">[LSB]</link></entry><entry>csinl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>llroundf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__finitef<link linkend="std.LSB">[LSB]</link></entry><entry>csqrt<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>llroundl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__finitel<link linkend="std.LSB">[LSB]</link></entry><entry>csqrtf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fpclassify<link linkend="std.LSB">[LSB]</link></entry><entry>csqrtl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log10<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fpclassifyf<link linkend="std.LSB">[LSB]</link></entry><entry>ctan<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log10f<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__signbit<link linkend="std.LSB">[LSB]</link></entry><entry>ctanf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log10l<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__signbitf<link linkend="std.LSB">[LSB]</link></entry><entry>ctanh<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log1p<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>acos<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ctanhf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log1pf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>acosf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ctanhl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log1pl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>acosh<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ctanl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log2<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>acoshf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>drem<link linkend="std.LSB">[LSB]</link></entry><entry>log2f<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>acoshl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>dremf<link linkend="std.LSB">[LSB]</link></entry><entry>log2l<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>acosl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>dreml<link linkend="std.LSB">[LSB]</link></entry><entry>logb<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asin<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>erf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>logbf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asinf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>erfc<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>logbl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asinh<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>erfcf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>logf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asinhf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>erfcl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>logl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asinhl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>erff<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lrint<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asinl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>erfl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lrintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atan<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>exp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lrintl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atan2<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>exp10<link linkend="std.LSB">[LSB]</link></entry><entry>lround<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atan2f<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>exp10f<link linkend="std.LSB">[LSB]</link></entry><entry>lroundf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atan2l<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>exp10l<link linkend="std.LSB">[LSB]</link></entry><entry>lroundl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atanf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>exp2<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>matherr<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>atanh<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>exp2f<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>modf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atanhf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>expf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>modff<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atanhl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>expl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>modfl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atanl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>expm1<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nan<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cabs<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>expm1f<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nanf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cabsf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>expm1l<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nanl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cabsl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fabs<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nearbyint<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cacos<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fabsf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nearbyintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cacosf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fabsl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nearbyintl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cacosh<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fdim<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nextafter<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cacoshf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fdimf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nextafterf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cacoshl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fdiml<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nextafterl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cacosl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>feclearexcept<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nexttoward<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>carg<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fedisableexcept<link linkend="std.LSB">[LSB]</link></entry><entry>nexttowardf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cargf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>feenableexcept<link linkend="std.LSB">[LSB]</link></entry><entry>nexttowardl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cargl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fegetenv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pow<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>casin<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fegetexcept<link linkend="std.LSB">[LSB]</link></entry><entry>pow10<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>casinf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fegetexceptflag<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pow10f<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>casinh<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fegetround<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pow10l<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>casinhf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>feholdexcept<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>powf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>casinhl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>feraiseexcept<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>powl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>casinl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fesetenv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remainder<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catan<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fesetexceptflag<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remainderf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catanf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fesetround<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remainderl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catanh<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fetestexcept<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remquo<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catanhf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>feupdateenv<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remquof<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catanhl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>finite<link linkend="std.LSB">[LSB]</link></entry><entry>remquol<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catanl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>finitef<link linkend="std.LSB">[LSB]</link></entry><entry>rint<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cbrt<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>finitel<link linkend="std.LSB">[LSB]</link></entry><entry>rintf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cbrtf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>floor<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>rintl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cbrtl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>floorf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>round<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ccos<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>floorl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>roundf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ccosf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fma<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>roundl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ccosh<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmaf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalb<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>ccoshf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmal<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalbf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>ccoshl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmax<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalbl<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>ccosl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmaxf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalbln<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ceil<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmaxl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalblnf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ceilf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmin<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalblnl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ceill<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fminf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalbn<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cexp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fminl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalbnf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cexpf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmod<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalbnl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cexpl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmodf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>significand<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cimag<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmodl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>significandf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cimagf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>frexp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>significandl<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cimagl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>frexpf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sin<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clog<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>frexpl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sincos<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>clog10<link linkend="std.LSB">[LSB]</link></entry><entry>gamma<link linkend="std.LSB">[LSB]</link></entry><entry>sincosf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>clog10f<link linkend="std.LSB">[LSB]</link></entry><entry>gammaf<link linkend="std.LSB">[LSB]</link></entry><entry>sincosl<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>clog10l<link linkend="std.LSB">[LSB]</link></entry><entry>gammal<link linkend="std.LSB">[LSB]</link></entry><entry>sinf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clogf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>hypot<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sinh<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clogl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>hypotf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sinhf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>conj<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>hypotl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sinhl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>conjf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ilogb<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sinl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>conjl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ilogbf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sqrt<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>copysign<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ilogbl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sqrtf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>copysignf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>j0<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sqrtl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>copysignl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>j0f<link linkend="std.LSB">[LSB]</link></entry><entry>tan<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cos<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>j0l<link linkend="std.LSB">[LSB]</link></entry><entry>tanf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cosf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>j1<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tanh<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cosh<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>j1f<link linkend="std.LSB">[LSB]</link></entry><entry>tanhf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>coshf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>j1l<link linkend="std.LSB">[LSB]</link></entry><entry>tanhl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>coshl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>jn<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tanl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cosl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>jnf<link linkend="std.LSB">[LSB]</link></entry><entry>tgamma<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cpow<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>jnl<link linkend="std.LSB">[LSB]</link></entry><entry>tgammaf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cpowf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ldexp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tgammal<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cpowl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ldexpf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>trunc<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cproj<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ldexpl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>truncf<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cprojf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lgamma<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>truncl<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cprojl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lgamma_r<link linkend="std.LSB">[LSB]</link></entry><entry>y0<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>creal<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lgammaf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>y0f<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>crealf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lgammaf_r<link linkend="std.LSB">[LSB]</link></entry><entry>y0l<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>creall<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lgammal<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>y1<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>csin<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lgammal_r<link linkend="std.LSB">[LSB]</link></entry><entry>y1f<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>csinf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>llrint<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>y1l<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>csinh<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>llrintf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>yn<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>csinhf<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>llrintl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ynf<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>csinhl<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>llround<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ynl<link linkend="std.LSB">[LSB]</link></entry></row>
</tbody>
</tgroup>
</table>
<table>
<title>libm Data Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>signgam<link linkend="std.SUSv4">[SUSv4]</link></entry><entry></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libncurses>
<title>libncurses</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.X.CURSES"> [X-CURSES]
</member>
</simplelist>
</para>
<table>
<title>libncurses Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>addch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvdelch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>slk_refresh<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>addchnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvderwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>slk_restore<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>addchstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvgetch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>slk_set<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>addnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvgetnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>slk_touch<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>addstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvgetstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>standend<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>attr_get<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvhline<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>standout<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>attr_off<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvinch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>start_color<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>attr_on<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvinchnstr<link linkend="std.LSB">[LSB]</link></entry><entry>subpad<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>attr_set<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvinchstr<link linkend="std.LSB">[LSB]</link></entry><entry>subwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>attroff<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvinnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>syncok<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>attron<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvinsch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>termattrs<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>attrset<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvinsnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>termname<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>baudrate<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvinsstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>tgetent<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>beep<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvinstr<link linkend="std.LSB">[LSB]</link></entry><entry>tgetflag<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>bkgd<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvprintw<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>tgetnum<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>bkgdset<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvscanw<link linkend="std.LSB">[LSB]</link></entry><entry>tgetstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>border<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvvline<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>tgoto<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>box<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwaddch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>tigetflag<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>can_change_color<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwaddchnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>tigetnum<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>cbreak<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwaddchstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>tigetstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>chgat<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwaddnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>timeout<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>clear<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwaddstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>touchline<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>clearok<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwchgat<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>touchwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>clrtobot<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwdelch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>tparm<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>clrtoeol<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwgetch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>tputs<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>color_content<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwgetnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>typeahead<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>color_set<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwgetstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>unctrl<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>copywin<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwhline<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>ungetch<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>curs_set<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>untouchwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>def_prog_mode<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwinch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>use_env<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>def_shell_mode<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwinchnstr<link linkend="std.LSB">[LSB]</link></entry><entry>vidattr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>del_curterm<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwinchstr<link linkend="std.LSB">[LSB]</link></entry><entry>vidputs<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>delay_output<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwinnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>vline<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>delch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwinsch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>vw_printw<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>deleteln<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwinsnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>vw_scanw<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>delscreen<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwinsstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>vwprintw<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>delwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwinstr<link linkend="std.LSB">[LSB]</link></entry><entry>vwscanw<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>derwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwprintw<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>waddch<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>doupdate<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwscanw<link linkend="std.LSB">[LSB]</link></entry><entry>waddchnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>dupwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>mvwvline<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>waddchstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>echo<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>napms<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>waddnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>echochar<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>newpad<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>waddstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>endwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>newterm<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wattr_get<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>erase<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>newwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wattr_off<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>erasechar<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>nl<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wattr_on<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>filter<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>nocbreak<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wattr_set<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>flash<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>nodelay<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wattroff<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>flushinp<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>noecho<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wattron<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>getbkgd<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>nonl<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wattrset<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>getch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>noqiflush<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wbkgd<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>getnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>noraw<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wbkgdset<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>getstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>notimeout<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wborder<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>getwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>overlay<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wchgat<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>halfdelay<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>overwrite<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wclear<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>has_colors<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>pair_content<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wclrtobot<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>has_ic<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>pechochar<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wclrtoeol<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>has_il<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>pnoutrefresh<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wcolor_set<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>hline<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>prefresh<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wcursyncup<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>idcok<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>printw<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wdelch<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>idlok<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>putp<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wdeleteln<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>immedok<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>putwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wechochar<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>inch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>qiflush<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>werase<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>inchnstr<link linkend="std.LSB">[LSB]</link></entry><entry>raw<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wgetch<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>inchstr<link linkend="std.LSB">[LSB]</link></entry><entry>redrawwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wgetnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>init_color<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>refresh<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wgetstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>init_pair<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>reset_prog_mode<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>whline<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>initscr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>reset_shell_mode<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>winch<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>innstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>resetty<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>winchnstr<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>insch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>restartterm<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>winchstr<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>insdelln<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>ripoffline<link linkend="std.LSB">[LSB]</link></entry><entry>winnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>insertln<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>savetty<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>winsch<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>insnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>scanw<link linkend="std.LSB">[LSB]</link></entry><entry>winsdelln<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>insstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>scr_dump<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>winsertln<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>instr<link linkend="std.LSB">[LSB]</link></entry><entry>scr_init<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>winsnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>intrflush<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>scr_restore<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>winsstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>is_linetouched<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>scr_set<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>winstr<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>is_wintouched<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>scrl<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wmove<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>isendwin<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>scroll<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wnoutrefresh<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>keyname<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>scrollok<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wprintw<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>keypad<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>set_curterm<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wredrawln<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>killchar<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>set_term<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wrefresh<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>leaveok<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>setscrreg<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wscanw<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>longname<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>setupterm<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wscrl<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>meta<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>slk_attr_set<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wsetscrreg<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>move<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>slk_attroff<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wstandend<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>mvaddch<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>slk_attron<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wstandout<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>mvaddchnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>slk_attrset<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wsyncdown<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>mvaddchstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>slk_clear<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wsyncup<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>mvaddnstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>slk_color<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wtimeout<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>mvaddstr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>slk_init<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wtouchln<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>mvchgat<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>slk_label<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wvline<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>mvcur<link linkend="std.LSB">[LSB]</link></entry><entry>slk_noutrefresh<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
<table>
<title>libncurses Data Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>COLORS<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>acs_map<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>stdscr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>COLOR_PAIRS<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>cur_term<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>ttytype<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>COLS<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>curscr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry></entry></row>
<row><entry>LINES<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>newscr<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libncursesw>
<title>libncursesw</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.Libncursesw"> [Libncursesw]
</member>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.ncursesw"> [ncursesw]
</member>
<member>
<xref linkend="std.X.CURSES"> [X-CURSES]
</member>
</simplelist>
</para>
<table>
<title>libncursesw Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>add_wch<link linkend="std.LSB">[LSB]</link></entry><entry>mvaddnwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_init<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>add_wchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvaddstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_label<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>add_wchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvaddwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_noutrefresh<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>addch<link linkend="std.LSB">[LSB]</link></entry><entry>mvchgat<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_refresh<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>addchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvcur<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_restore<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>addchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvdelch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>addnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvderwin<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_touch<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>addnwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvget_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_wset<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>addstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvget_wstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>standend<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>addwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvgetch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>standout<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>assume_default_colors<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvgetn_wstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>start_color<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>attr_get<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvgetnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>subpad<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>attr_off<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvgetstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>subwin<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>attr_on<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvhline<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>syncok<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>attr_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvhline_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>term_attrs<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>attroff<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvin_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>termattrs<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>attron<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvin_wchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>termname<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>attrset<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvin_wchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>tgetent<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>baudrate<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvinch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>tgetflag<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>beep<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvinchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>tgetnum<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>bkgd<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvinchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>tgetstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>bkgdset<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvinnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>tgoto<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>bkgrnd<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvinnwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>tigetflag<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>bkgrndset<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvins_nwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>tigetnum<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>border<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvins_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>tigetstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>border_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvins_wstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>timeout<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>box<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvinsch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>touchline<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>box_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvinsnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>touchwin<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>can_change_color<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvinsstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>tparm<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>cbreak<link linkend="std.LSB">[LSB]</link></entry><entry>mvinstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>tputs<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>chgat<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvinwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>typeahead<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>clear<link linkend="std.LSB">[LSB]</link></entry><entry>mvprintw<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>unctrl<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>clearok<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvscanw<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>unget_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>clrtobot<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvvline<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>ungetch<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>clrtoeol<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvvline_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>ungetmouse<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>color_content<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwadd_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>untouchwin<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>color_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwadd_wchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>use_default_colors<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>copywin<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwadd_wchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>use_env<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>curs_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwaddch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>use_extended_names<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>curses_version<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwaddchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>vid_attr<link linkend="std.X.CURSES">[X-CURSES]</link></entry></row>
<row><entry>def_prog_mode<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwaddchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>vid_puts<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>def_shell_mode<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwaddnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>vidattr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>define_key<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwaddnwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>vidputs<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>del_curterm<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwaddstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>vline<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>delay_output<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwaddwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>vline_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>delch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwchgat<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>vw_printw<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>deleteln<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwdelch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>vw_scanw<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>delscreen<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwget_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>vwprintw<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>delwin<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwget_wstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>vwscanw<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>derwin<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwgetch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wadd_wch<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>doupdate<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwgetn_wstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wadd_wchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>dupwin<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwgetnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wadd_wchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>echo<link linkend="std.LSB">[LSB]</link></entry><entry>mvwgetstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>waddch<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>echo_wchar<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwhline<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>waddchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>echochar<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwhline_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>waddchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>endwin<link linkend="std.LSB">[LSB]</link></entry><entry>mvwin<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>waddnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>erase<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwin_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>waddnwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>erasechar<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwin_wchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>waddstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>erasewchar<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwin_wchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>waddwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>filter<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwinch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wattr_get<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>flash<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwinchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wattr_off<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>flushinp<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwinchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wattr_on<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>get_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwinnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wattr_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>get_wstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwinnwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wattroff<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>getbkgd<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwins_nwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wattron<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>getbkgrnd<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwins_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wattrset<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>getcchar<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwins_wstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wbkgd<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>getch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwinsch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wbkgdset<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>getmouse<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwinsnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wbkgrnd<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>getn_wstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwinsstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wbkgrndset<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>getnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwinstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wborder<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>getstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwinwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wborder_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>getwin<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwprintw<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wchgat<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>halfdelay<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwscanw<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wclear<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>has_colors<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwvline<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wclrtobot<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>has_ic<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>mvwvline_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wclrtoeol<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>has_il<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>napms<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wcolor_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>has_key<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>newpad<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wcursyncup<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>has_mouse<link linkend="std.LSB">[LSB]</link></entry><entry>newterm<link linkend="std.LSB">[LSB]</link></entry><entry>wdelch<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>hline<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>newwin<link linkend="std.LSB">[LSB]</link></entry><entry>wdeleteln<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>hline_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>nl<link linkend="std.LSB">[LSB]</link></entry><entry>wecho_wchar<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>idcok<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>nocbreak<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wechochar<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>idlok<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>nodelay<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>werase<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>immedok<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>noecho<link linkend="std.LSB">[LSB]</link></entry><entry>wget_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>in_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>nonl<link linkend="std.LSB">[LSB]</link></entry><entry>wget_wstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>in_wchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>noqiflush<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wgetbkgrnd<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>in_wchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>noraw<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wgetch<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>inch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>notimeout<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wgetn_wstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>inchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>overlay<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wgetnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>inchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>overwrite<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wgetstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>init_color<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>pair_content<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>whline<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>init_pair<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>pecho_wchar<link linkend="std.LSB">[LSB]</link></entry><entry>whline_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>initscr<link linkend="std.LSB">[LSB]</link></entry><entry>pechochar<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>win_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>innstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>pnoutrefresh<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>win_wchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>innwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>prefresh<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>win_wchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>ins_nwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>printw<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>winch<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>ins_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>putp<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>winchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>ins_wstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>putwin<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>winchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>insch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>qiflush<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>winnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>insdelln<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>raw<link linkend="std.LSB">[LSB]</link></entry><entry>winnwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>insertln<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>redrawwin<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wins_nwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>insnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>refresh<link linkend="std.LSB">[LSB]</link></entry><entry>wins_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>insstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>reset_prog_mode<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wins_wstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>instr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>reset_shell_mode<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>winsch<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>intrflush<link linkend="std.LSB">[LSB]</link></entry><entry>resetty<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>winsdelln<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>inwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>resizeterm<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>winsertln<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>is_linetouched<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>restartterm<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>winsnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>is_wintouched<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>ripoffline<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>winsstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>isendwin<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>savetty<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>winstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>key_name<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>scanw<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>winwstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>keybound<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>scr_dump<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wmouse_trafo<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>keyname<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>scr_init<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wmove<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>keyok<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>scr_restore<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wnoutrefresh<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>keypad<link linkend="std.LSB">[LSB]</link></entry><entry>scr_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wprintw<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>killchar<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>scrl<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wredrawln<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>killwchar<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>scroll<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wrefresh<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>leaveok<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>scrollok<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wresize<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>longname<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>set_curterm<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wscanw<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>mcprint<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>set_term<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wscrl<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>meta<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>setcchar<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wsetscrreg<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>mouse_trafo<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>setscrreg<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wstandend<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>mouseinterval<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>setupterm<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wstandout<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>mousemask<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_attr<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wsyncdown<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>move<link linkend="std.LSB">[LSB]</link></entry><entry>slk_attr_off<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wsyncup<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>mvadd_wch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_attr_on<link linkend="std.X.CURSES">[X-CURSES]</link></entry><entry>wtimeout<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>mvadd_wchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_attr_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wtouchln<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>mvadd_wchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_attroff<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wunctrl<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>mvaddch<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_attron<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wvline<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>mvaddchnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_attrset<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>wvline_set<link linkend="std.Libncursesw">[Libncursesw]</link></entry></row>
<row><entry>mvaddchstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_clear<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry></entry></row>
<row><entry>mvaddnstr<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry>slk_color<link linkend="std.Libncursesw">[Libncursesw]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
<table>
<title>libncursesw Data Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>COLORS<link linkend="std.ncursesw">[ncursesw]</link></entry><entry>acs_map<link linkend="std.LSB">[LSB]</link></entry><entry>stdscr<link linkend="std.ncursesw">[ncursesw]</link></entry></row>
<row><entry>COLOR_PAIRS<link linkend="std.ncursesw">[ncursesw]</link></entry><entry>cur_term<link linkend="std.LSB">[LSB]</link></entry><entry>ttytype<link linkend="std.ncursesw">[ncursesw]</link></entry></row>
<row><entry>COLS<link linkend="std.ncursesw">[ncursesw]</link></entry><entry>curscr<link linkend="std.ncursesw">[ncursesw]</link></entry><entry></entry></row>
<row><entry>LINES<link linkend="std.ncursesw">[ncursesw]</link></entry><entry>newscr<link linkend="std.ncursesw">[ncursesw]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libpam>
<title>libpam</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.PAM"> [PAM]
</member>
</simplelist>
</para>
<table>
<title>libpam Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>pam_acct_mgmt(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pam_get_data(LIBPAM_1.0)<link linkend="std.PAM">[PAM]</link></entry><entry>pam_putenv(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>pam_authenticate(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pam_get_item(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pam_set_data(LIBPAM_1.0)<link linkend="std.PAM">[PAM]</link></entry></row>
<row><entry>pam_chauthtok(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pam_get_user(LIBPAM_1.0)<link linkend="std.PAM">[PAM]</link></entry><entry>pam_set_item(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>pam_close_session(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pam_getenv(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pam_setcred(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>pam_end(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pam_getenvlist(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pam_start(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>pam_fail_delay(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pam_open_session(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pam_strerror(LIBPAM_1.0)<link linkend="std.LSB">[LSB]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libpthread>
<title>libpthread</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LFS"> [LFS]
</member>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.SUSv3"> [SUSv3]
</member>
<member>
<xref linkend="std.SUSv4"> [SUSv4]
</member>
</simplelist>
</para>
<table>
<title>libpthread Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>__errno_location<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_cond_destroy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_tryrdlock<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__h_errno_location<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_cond_init<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_trywrlock<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__libc_current_sigrtmax<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_cond_signal<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_unlock<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__libc_current_sigrtmin<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_cond_timedwait<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_wrlock<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_pthread_cleanup_pop<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_cond_wait<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlockattr_destroy<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_pthread_cleanup_push<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_condattr_destroy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlockattr_getkind_np<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>accept<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_condattr_getclock(GLIBC_2.3.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlockattr_getpshared<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>close<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_condattr_getpshared<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlockattr_init<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>connect<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_condattr_init<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlockattr_setkind_np<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fcntl<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_condattr_setclock(GLIBC_2.3.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlockattr_setpshared<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>flockfile<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_condattr_setpshared<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_self<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fork<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_create<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_setcancelstate<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fsync<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_detach<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_setcanceltype<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ftrylockfile<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_equal<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_setconcurrency<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>funlockfile<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_exit<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_setschedparam<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>longjmp<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_getattr_np<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_setschedprio(GLIBC_2.3.4)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>lseek<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_getconcurrency<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_setspecific<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>lseek64<link linkend="std.LFS">[LFS]</link></entry><entry>pthread_getcpuclockid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_sigmask<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>msync<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_getschedparam<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_spin_destroy<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>nanosleep<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_getspecific<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_spin_init<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>open<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_join<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_spin_lock<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>open64<link linkend="std.LFS">[LFS]</link></entry><entry>pthread_key_create<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_spin_trylock<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pause<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_key_delete<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_spin_unlock<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pread<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_kill<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_testcancel<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pread64<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_mutex_consistent(GLIBC_2.12)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pwrite<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_destroy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_consistent_np<link linkend="std.LSB">[LSB]</link></entry><entry>pwrite64<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>pthread_attr_getdetachstate<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_destroy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>raise<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getguardsize<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_getprioceiling(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>read<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getinheritsched<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_init<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>recv<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getschedparam<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_lock<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>recvfrom<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getschedpolicy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_setprioceiling(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>recvmsg<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getscope<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_timedlock<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_close<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getstack<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_trylock<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_destroy<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getstackaddr<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>pthread_mutex_unlock<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_getvalue<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getstacksize<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_destroy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_init<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_init<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_getprioceiling(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_open<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setdetachstate<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_getprotocol(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_post<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setguardsize<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_getpshared<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_timedwait<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setinheritsched<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_getrobust(GLIBC_2.12)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_trywait<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setschedparam<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_getrobust_np<link linkend="std.LSB">[LSB]</link></entry><entry>sem_unlink<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setschedpolicy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_gettype<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_wait<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setscope<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_init<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>send<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setstack<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_setprioceiling(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sendmsg<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setstackaddr<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>pthread_mutexattr_setprotocol(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sendto<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setstacksize<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_setpshared<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigaction<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_barrier_destroy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_setrobust(GLIBC_2.12)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>siglongjmp<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_barrier_init<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_setrobust_np<link linkend="std.LSB">[LSB]</link></entry><entry>sigwait<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_barrier_wait<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_settype<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>system<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>pthread_barrierattr_destroy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_once<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcdrain<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_barrierattr_getpshared(GLIBC_2.3.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_destroy<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vfork<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>pthread_barrierattr_init<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_init<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wait<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_barrierattr_setpshared<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_rdlock<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>waitpid<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>pthread_cancel<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_timedrdlock<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>write<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_cond_broadcast<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_timedwrlock<link linkend="std.SUSv4">[SUSv4]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-librt>
<title>librt</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LFS"> [LFS]
</member>
<member>
<xref linkend="std.SUSv4"> [SUSv4]
</member>
</simplelist>
</para>
<table>
<title>librt Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>aio_cancel<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>aio_write64<link linkend="std.LFS">[LFS]</link></entry><entry>mq_send(GLIBC_2.3.4)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_cancel64<link linkend="std.LFS">[LFS]</link></entry><entry>clock_getcpuclockid<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mq_setattr(GLIBC_2.3.4)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_error<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>clock_getres<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mq_timedreceive(GLIBC_2.3.4)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_error64<link linkend="std.LFS">[LFS]</link></entry><entry>clock_gettime<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mq_timedsend(GLIBC_2.3.4)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_fsync<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>clock_nanosleep<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mq_unlink(GLIBC_2.3.4)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_fsync64<link linkend="std.LFS">[LFS]</link></entry><entry>clock_settime<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>shm_open<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_read<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lio_listio(GLIBC_2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>shm_unlink<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_read64<link linkend="std.LFS">[LFS]</link></entry><entry>lio_listio64(GLIBC_2.4)<link linkend="std.LFS">[LFS]</link></entry><entry>timer_create<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_return<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mq_close(GLIBC_2.3.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>timer_delete<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_return64<link linkend="std.LFS">[LFS]</link></entry><entry>mq_getattr(GLIBC_2.3.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>timer_getoverrun<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_suspend<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mq_notify(GLIBC_2.3.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>timer_gettime<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_suspend64<link linkend="std.LFS">[LFS]</link></entry><entry>mq_open(GLIBC_2.3.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>timer_settime<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_write<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mq_receive(GLIBC_2.3.4)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libutil>
<title>libutil</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
</simplelist>
</para>
<table>
<title>libutil Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>forkpty<link linkend="std.LSB">[LSB]</link></entry><entry>login_tty<link linkend="std.LSB">[LSB]</link></entry><entry>logwtmp<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>login<link linkend="std.LSB">[LSB]</link></entry><entry>logout<link linkend="std.LSB">[LSB]</link></entry><entry>openpty<link linkend="std.LSB">[LSB]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libz>
<title>libz</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
</simplelist>
</para>
<table>
<title>libz Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>adler32<link linkend="std.LSB">[LSB]</link></entry><entry>gzclose<link linkend="std.LSB">[LSB]</link></entry><entry>inflate<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>compress<link linkend="std.LSB">[LSB]</link></entry><entry>gzdopen<link linkend="std.LSB">[LSB]</link></entry><entry>inflateBack(ZLIB_1.2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>compress2<link linkend="std.LSB">[LSB]</link></entry><entry>gzeof<link linkend="std.LSB">[LSB]</link></entry><entry>inflateBackEnd(ZLIB_1.2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>compressBound(ZLIB_1.2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>gzerror<link linkend="std.LSB">[LSB]</link></entry><entry>inflateBackInit_(ZLIB_1.2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>crc32<link linkend="std.LSB">[LSB]</link></entry><entry>gzflush<link linkend="std.LSB">[LSB]</link></entry><entry>inflateCopy(ZLIB_1.2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>deflate<link linkend="std.LSB">[LSB]</link></entry><entry>gzgetc<link linkend="std.LSB">[LSB]</link></entry><entry>inflateEnd<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>deflateBound(ZLIB_1.2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>gzgets<link linkend="std.LSB">[LSB]</link></entry><entry>inflateInit2_<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>deflateCopy<link linkend="std.LSB">[LSB]</link></entry><entry>gzopen<link linkend="std.LSB">[LSB]</link></entry><entry>inflateInit_<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>deflateEnd<link linkend="std.LSB">[LSB]</link></entry><entry>gzprintf<link linkend="std.LSB">[LSB]</link></entry><entry>inflateReset<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>deflateInit2_<link linkend="std.LSB">[LSB]</link></entry><entry>gzputc<link linkend="std.LSB">[LSB]</link></entry><entry>inflateSetDictionary<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>deflateInit_<link linkend="std.LSB">[LSB]</link></entry><entry>gzputs<link linkend="std.LSB">[LSB]</link></entry><entry>inflateSync<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>deflateParams<link linkend="std.LSB">[LSB]</link></entry><entry>gzread<link linkend="std.LSB">[LSB]</link></entry><entry>inflateSyncPoint<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>deflatePrime(ZLIB_1.2.0.8)<link linkend="std.LSB">[LSB]</link></entry><entry>gzrewind<link linkend="std.LSB">[LSB]</link></entry><entry>uncompress<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>deflateReset<link linkend="std.LSB">[LSB]</link></entry><entry>gzseek<link linkend="std.LSB">[LSB]</link></entry><entry>zError<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>deflateSetDictionary<link linkend="std.LSB">[LSB]</link></entry><entry>gzsetparams<link linkend="std.LSB">[LSB]</link></entry><entry>zlibVersion<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>get_crc_table<link linkend="std.LSB">[LSB]</link></entry><entry>gztell<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
<row><entry>gzclearerr(ZLIB_1.2.0.2)<link linkend="std.LSB">[LSB]</link></entry><entry>gzwrite<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<!-- End of text generated from database -->
