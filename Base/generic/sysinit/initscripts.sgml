<SECT1 ID=initscrcomconv XRefLabel="Comment Conventions for Init Scripts">
<TITLE>Comment Conventions for Init Scripts</TITLE>

<PARA>
Conforming applications may install one or more init scripts.
These init scripts must be activated by invoking the
<command>install_initd</command> command.
Prior to package removal, the changes applied by
<command>install_initd</command> must be undone by
invoking <command>remove_initd</command>.
See <xref linkend="initsrcinstrm"> for more details.
</PARA>

<PARA> 
<command>install_initd</command> and <command>remove_initd</command>
determine actions to take by decoding a specially formatted
block of lines in the script. This block shall be delimited
by the lines 
<screen>
### BEGIN INIT INFO
### END INIT INFO
</screen>
The delimiter lines may contain trailing whitespace, which shall be
ignored.  All lines inside the block shall begin with a hash
character <literal>'#'</literal> in the first column, so the shell
interprets them as comment lines which do not affect operation of
the script. The lines shall be of the form:
<SCREEN>
<!-- tried to do this as a <cmdsynopsis> but the ':' defeats me -->
# {keyword}: arg1 [arg2...]
</SCREEN>
with exactly one space character between the <literal>'#'</literal>
and the keyword, with a single exception.  In lines following a
line containing the <command>Description</command> keyword, and until the
next keyword or block ending delimiter is seen,
a line where the <literal>'#'</literal>
is followed by more than one space or a tab character
shall be treated as a continuation of the previous line.
</para>
<para>
The information extracted from the block is used by the
installation tool or the init-script system to assure
that init scripts are run in the correct order.   
It is unspecified whether the information is evaluated
only when <command>install_initd</command> runs, when
the init scripts are executed, or both. The information
extracted includes run levels, defined in <xref linkend="runlevels">,
and boot facilities, defined in <xref linkend="facilname">.
</para>

<para>
The following keywords, with their arguments, are defined:
</PARA>

<variablelist>
<varlistentry>
<term>
<cmdsynopsis>
<command>Provides:</command>
<arg choice=plain>boot_facility_1</arg>
<arg choice=opt rep=repeat>boot_facility_2</arg>
</cmdsynopsis>
</term>
<listitem>
<para>
boot facilities provided by this init script.
When an init script is run with a <command>start</command> argument,
the boot facility or facilities specified by the 
<command>Provides</command> keyword shall be deemed present
and hence init scripts which require those boot facilities
should be started later.  When an init script is run with a 
<command>stop</command> argument, the boot facilities specified by
the <command>Provides</command> keyword are deemed  no longer present.  
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<cmdsynopsis>
<command>Required-Start:</command>
<arg choice=plain>boot_facility_1</arg>
<arg choice=opt rep=repeat>boot_facility_2</arg>
</cmdsynopsis>
</term>
<listitem>
<para>
facilities which must be available during startup of this service.
The init-script system should insure init scripts which
provide the <command>Required-Start</command> facilities
are started before starting this script.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<cmdsynopsis>
<command>Required-Stop:</command>
<arg choice=plain>boot_facility_1</arg>
<arg choice=opt rep=repeat>boot_facility_2</arg>
</cmdsynopsis>
</term>
<listitem>
<para>
facilities which must
be available during the shutdown of this service.  The
init-script system should avoid stopping init scripts which provide
the <command>Required-Stop</command>
facilities until this script is stopped.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<cmdsynopsis>
<command>Should-Start:</command>
<arg choice=plain>boot_facility_1</arg>
<arg choice=opt rep=repeat>boot_facility_2</arg>
</cmdsynopsis>
</term>
<listitem>
<para>
facilities which, if present, should
be available during startup of this service. This allows for weak dependencies
which do not cause the service to fail if a facility is not available.
The service may provide reduced functionality in this situation.
Conforming applications should not rely on the existence of this feature.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<cmdsynopsis>
<command>Should-Stop:</command>
<arg choice=plain>boot_facility_1</arg>
<arg choice=opt rep=repeat>boot_facility_2</arg>
</cmdsynopsis>
</term>
<listitem>
<para>
facilities which should be available during shutdown of this service.
<!-- XXX seems like more should be said here -->
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<cmdsynopsis>
<command>Default-Start:</command>
<arg choice=plain>run_level_1</arg>
<arg choice=opt rep=repeat>run_level_2</arg>
</cmdsynopsis>
</term>
<term>
<cmdsynopsis>
<command>Default-Stop:</command>
<arg choice=plain>run_level_1</arg>
<arg choice=opt rep=repeat>run_level_2</arg>
</cmdsynopsis>
</term>
<listitem>
<para>
which run levels should by default run the init script with a 
<command>start</command> (<command>stop</command>) argument
to start (stop) the services controlled by the init script.
<informalexample>
<para>
For example, if a service should run in runlevels 3, 4, and 5 only,
specify "Default-Start: 3 4 5" and "Default-Stop: 0 1 2 6".
</para>
</informalexample>
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<cmdsynopsis>
<command>Short-Description:</command>
<arg choice=plain>short_description</arg>
</cmdsynopsis>
</term>
<listitem>
<para>
provide a brief description of the actions of the init script.
Limited to a single line of text.
</para>
</listitem>
</varlistentry>

<varlistentry>
<term>
<cmdsynopsis>
<command>Description:</command>
<arg choice=plain>multiline_description</arg>
</cmdsynopsis>
</term>
<listitem>
<para>
provide a more complete description of the actions of the init script.
May span mulitple lines.  In a multiline description,
each continuation line shall begin with a '#' followed by tab character
or a '#' followed by at least two space characters.  The multiline
description is terminated by the first line that does not match this
criteria.
</para>
</listitem>
</varlistentry>
</variablelist>

<PARA>
Additional keywords may be defined in future versions of
this specification. Also, implementations 
may define local extensions by using the prefix
<command>X-<replaceable>implementor</replaceable></command>.
For example, <command>X-RedHat-foobardecl</command>, or 
<command>X-Debian-xyzzydecl</command>.  
</PARA>

<para>
Example:
<informalexample>
<screen>
	### BEGIN INIT INFO
	# Provides: lsb-ourdb
	# Required-Start: $local_fs $network $remote_fs
	# Required-Stop: $local_fs $network $remote_fs
	# Default-Start:  2 3 4 5
	# Default-Stop: 0 1 6
	# Short-Description: start and stop OurDB
	# Description: OurDB is a very fast and reliable database
	#	 engine used for illustrating init scripts
	### END INIT INFO
</screen>
</informalexample>
</para>

<PARA>
The comment conventions described in this section are only required for
init scripts installed by conforming applications. Conforming
runtime implementations are not required to use this scheme in their system
provided init scripts.
</PARA>

<NOTE><PARA>
This specification does not require, but is designed to allow, the
development of a system which runs init scripts in parallel.  Hence,
enforced-serialization of scripts is avoided unless it is explicitly
necessary. 
</PARA></NOTE>

</SECT1>
