<REFENTRY ID="baselib---rawmemchr"> <REFMETA>
<REFENTRYTITLE>__rawmemchr</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__rawmemchr</REFNAME>
<REFPURPOSE>
scan memory
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void * 
  <FUNCTION>__rawmemchr</FUNCTION></FUNCDEF>
 <PARAMDEF>const void * 
  <PARAMETER><REPLACEABLE>s</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>int 
  <PARAMETER><REPLACEABLE>c</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>11 June 2008</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>__rawmemchr</FUNCTION> function shall locate the first occurrence of
<PARAMETER>c</PARAMETER>
(converted to an unsigned char) in the object pointed to by <PARAMETER>s</PARAMETER>. If the byte does
not occur in the object, then the behavior is undefined.
</PARA>
<PARA>
<FUNCTION>__rawmemchr</FUNCTION> is a weak alias for
<FUNCTION>rawmemchr</FUNCTION>. It is similar to 
<FUNCTION>memchr</FUNCTION>, but it has no length limit. 
</PARA>
<PARA>
<FUNCTION>__rawmemchr</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>

<REFSECT1>
<REFSECT1INFO>
<DATE>11 June 2008</DATE>
</REFSECT1INFO>
<TITLE>Return Value</TITLE>
<PARA>
The <FUNCTION>__rawmemchr</FUNCTION> function shall return a pointer to the located byte.
</PARA>
</REFSECT1>

</REFENTRY>

