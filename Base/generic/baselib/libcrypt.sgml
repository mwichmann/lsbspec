<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libcrypt>
<TITLE>Interfaces for libcrypt</TITLE>
<PARA>
<xref linkend="lib-libcrypt-def"> defines the library name and shared object name
for the libcrypt library
</PARA>
<TABLE id="lib-libcrypt-def">
<TITLE>libcrypt Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libcrypt</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libcrypt.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libcrypt.1'>
[LSB] <xref linkend="std.LSB">
</MEMBER>
<MEMBER ID='REFSTD.libcrypt.2'>
[SUSv4] <xref linkend="std.SUSv4">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Encryption -->
<SECT2>
<!--libgroup-->
<TITLE>Encryption</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Encryption</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Encryption specified in <xref linkend="tbl-libcrypt-encry-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libcrypt-encry-ints">
<TITLE>libcrypt - Encryption Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>crypt</primary></indexterm>crypt <LINK LINKEND="REFSTD.libcrypt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>crypt_r</primary></indexterm>crypt_r <LINK LINKEND="REFSTD.libcrypt.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>encrypt</primary></indexterm>encrypt <LINK LINKEND="REFSTD.libcrypt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>encrypt_r</primary></indexterm>encrypt_r <LINK LINKEND="REFSTD.libcrypt.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>setkey</primary></indexterm>setkey <LINK LINKEND="REFSTD.libcrypt.2">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setkey_r</primary></indexterm>setkey_r <LINK LINKEND="REFSTD.libcrypt.1">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libcrypt-ddefs>
<TITLE>Data Definitions for libcrypt</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libcrypt.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <xref linkend="std.ISOC99"> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>crypt.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct crypt_data {
    char keysched[128];
    char sb0[32768];
    char sb1[32768];
    char sb2[32768];
    char sb3[32768];
    char crypt_3_buf[14];
    char current_salt[2];
    long int current_saltbits;
    int direction;
    int initialized;
};
extern char *crypt_r(const char *key, const char *salt,
		     struct crypt_data *data);
extern void encrypt_r(const char *block, int edflag,
		      struct crypt_data *data);
extern void setkey_r(const char *key, struct crypt_data *data);
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libcryptman>
<TITLE>Interface Definitions for libcrypt</TITLE>
<PARA>
The interfaces defined on the following pages are included in libcrypt and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed in <xref linkend="libcrypt"> shall behave as described
in the referenced base document.
</PARA>
m4_sinclude(m4_ifdef('crypt_r','',crypt_r.sgml))
m4_define('crypt_r','1')
m4_sinclude(m4_ifdef('encrypt_r','',encrypt_r.sgml))
m4_define('encrypt_r','1')
m4_sinclude(m4_ifdef('setkey_r','',setkey_r.sgml))
m4_define('setkey_r','1')
</SECT1>
<!-- End of text generated from database -->
