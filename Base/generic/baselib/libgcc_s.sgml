<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libgcc-s>
<TITLE>Interfaces for libgcc_s</TITLE>
<PARA>
<xref linkend="lib-libgcc-s-def"> defines the library name and shared object name
for the libgcc_s library
</PARA>
<TABLE id="lib-libgcc-s-def">
<TITLE>libgcc_s Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libgcc_s</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libgcc_s.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libgcc.s.1'>
[LSB] <xref linkend="std.LSB">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name Unwind Library -->
<SECT2>
<!--libgroup-->
<TITLE>Unwind Library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Unwind Library</TITLE>
<PARA>
An LSB conforming implementation shall provide the generic functions
for Unwind Library specified in <xref linkend="tbl-libgcc-s-unwin-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libgcc-s-unwin-ints">
<TITLE>libgcc_s - Unwind Library Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_Unwind_Backtrace</primary></indexterm>_Unwind_Backtrace <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_DeleteException</primary></indexterm>_Unwind_DeleteException <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_FindEnclosingFunction</primary></indexterm>_Unwind_FindEnclosingFunction <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_ForcedUnwind</primary></indexterm>_Unwind_ForcedUnwind <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Unwind_GetCFA</primary></indexterm>_Unwind_GetCFA <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetGR</primary></indexterm>_Unwind_GetGR <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetIP</primary></indexterm>_Unwind_GetIP <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetIPInfo</primary></indexterm>_Unwind_GetIPInfo(GCC_4.2.0) <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Unwind_GetLanguageSpecificData</primary></indexterm>_Unwind_GetLanguageSpecificData <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_GetRegionStart</primary></indexterm>_Unwind_GetRegionStart <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_RaiseException</primary></indexterm>_Unwind_RaiseException <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_Resume</primary></indexterm>_Unwind_Resume <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_Unwind_Resume_or_Rethrow</primary></indexterm>_Unwind_Resume_or_Rethrow <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_SetGR</primary></indexterm>_Unwind_SetGR <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_Unwind_SetIP</primary></indexterm>_Unwind_SetIP <LINK LINKEND="REFSTD.libgcc.s.1">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libgcc-s-ddefs>
<TITLE>Data Definitions for libgcc_s</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libgcc_s.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <xref linkend="std.ISOC99"> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>unwind.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct _Unwind_Context;
struct _Unwind_Exception;

typedef unsigned int _Unwind_Ptr __attribute__ ((__mode__(__pointer__)));
typedef unsigned int _Unwind_Word __attribute__ ((__mode__(__word__)));
typedef unsigned int _Unwind_Exception_Class
    __attribute__ ((__mode__(__DI__)));

typedef enum {
    _URC_NO_REASON = 0,
    _URC_FOREIGN_EXCEPTION_CAUGHT = 1,
    _URC_FATAL_PHASE2_ERROR = 2,
    _URC_FATAL_PHASE1_ERROR = 3,
    _URC_NORMAL_STOP = 4,
    _URC_END_OF_STACK = 5,
    _URC_HANDLER_FOUND = 6,
    _URC_INSTALL_CONTEXT = 7,
    _URC_CONTINUE_UNWIND = 8
} _Unwind_Reason_Code;

typedef void (*_Unwind_Exception_Cleanup_Fn) (_Unwind_Reason_Code,
					      struct _Unwind_Exception *);

struct _Unwind_Exception {
    _Unwind_Exception_Class exception_class;
    _Unwind_Exception_Cleanup_Fn exception_cleanup;
    _Unwind_Word private_1;
    _Unwind_Word private_2;
} __attribute__ ((__aligned__));

#define _UA_SEARCH_PHASE	1
#define _UA_END_OF_STACK	16
#define _UA_CLEANUP_PHASE	2
#define _UA_HANDLER_FRAME	4
#define _UA_FORCE_UNWIND	8

typedef int _Unwind_Action;

typedef _Unwind_Reason_Code(*_Unwind_Stop_Fn) (int version,
					       _Unwind_Action actions,
					       _Unwind_Exception_Class
					       exceptionClass,
					       struct _Unwind_Exception *
					       exceptionObject,
					       struct _Unwind_Context *
					       context,
					       void *stop_parameter);

typedef _Unwind_Reason_Code(*_Unwind_Trace_Fn) (struct _Unwind_Context *,
						void *);
extern _Unwind_Reason_Code _Unwind_Backtrace(_Unwind_Trace_Fn, void *);
extern void _Unwind_DeleteException(struct _Unwind_Exception *);
extern void *_Unwind_FindEnclosingFunction(void *);
extern _Unwind_Reason_Code _Unwind_ForcedUnwind(struct _Unwind_Exception *,
						_Unwind_Stop_Fn, void *);
extern _Unwind_Word _Unwind_GetCFA(struct _Unwind_Context *);
extern _Unwind_Word _Unwind_GetGR(struct _Unwind_Context *, int);
extern _Unwind_Ptr _Unwind_GetIP(struct _Unwind_Context *);
extern _Unwind_Ptr _Unwind_GetIPInfo(struct _Unwind_Context *, int *);
extern void *_Unwind_GetLanguageSpecificData(struct _Unwind_Context *);
extern _Unwind_Ptr _Unwind_GetRegionStart(struct _Unwind_Context *);
extern _Unwind_Reason_Code _Unwind_RaiseException(struct _Unwind_Exception
						  *);
extern void _Unwind_Resume(struct _Unwind_Exception *);
extern _Unwind_Reason_Code _Unwind_Resume_or_Rethrow(struct
						     _Unwind_Exception *);
extern void _Unwind_SetGR(struct _Unwind_Context *, int, u_int64_t);
extern void _Unwind_SetIP(struct _Unwind_Context *, _Unwind_Ptr);
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libgcc-sman>
<TITLE>Interface Definitions for libgcc_s</TITLE>
<PARA>
The interfaces defined on the following pages are included in libgcc_s and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed in <xref linkend="libgcc-s"> shall behave as described
in the referenced base document.
</PARA>
m4_sinclude(m4_ifdef('_Unwind_Backtrace','',_Unwind_Backtrace.sgml))
m4_define('_Unwind_Backtrace','1')
m4_sinclude(m4_ifdef('_Unwind_DeleteException','',_Unwind_DeleteException.sgml))
m4_define('_Unwind_DeleteException','1')
m4_sinclude(m4_ifdef('_Unwind_FindEnclosingFunction','',_Unwind_FindEnclosingFunction.sgml))
m4_define('_Unwind_FindEnclosingFunction','1')
m4_sinclude(m4_ifdef('_Unwind_ForcedUnwind','',_Unwind_ForcedUnwind.sgml))
m4_define('_Unwind_ForcedUnwind','1')
m4_sinclude(m4_ifdef('_Unwind_GetCFA','',_Unwind_GetCFA.sgml))
m4_define('_Unwind_GetCFA','1')
m4_sinclude(m4_ifdef('_Unwind_GetGR','',_Unwind_GetGR.sgml))
m4_define('_Unwind_GetGR','1')
m4_sinclude(m4_ifdef('_Unwind_GetIP','',_Unwind_GetIP.sgml))
m4_define('_Unwind_GetIP','1')
m4_sinclude(m4_ifdef('_Unwind_GetIPInfo','',_Unwind_GetIPInfo.sgml))
m4_define('_Unwind_GetIPInfo','1')
m4_sinclude(m4_ifdef('_Unwind_GetLanguageSpecificData','',_Unwind_GetLanguageSpecificData.sgml))
m4_define('_Unwind_GetLanguageSpecificData','1')
m4_sinclude(m4_ifdef('_Unwind_GetRegionStart','',_Unwind_GetRegionStart.sgml))
m4_define('_Unwind_GetRegionStart','1')
m4_sinclude(m4_ifdef('_Unwind_RaiseException','',_Unwind_RaiseException.sgml))
m4_define('_Unwind_RaiseException','1')
m4_sinclude(m4_ifdef('_Unwind_Resume','',_Unwind_Resume.sgml))
m4_define('_Unwind_Resume','1')
m4_sinclude(m4_ifdef('_Unwind_Resume_or_Rethrow','',_Unwind_Resume_or_Rethrow.sgml))
m4_define('_Unwind_Resume_or_Rethrow','1')
m4_sinclude(m4_ifdef('_Unwind_SetGR','',_Unwind_SetGR.sgml))
m4_define('_Unwind_SetGR','1')
m4_sinclude(m4_ifdef('_Unwind_SetIP','',_Unwind_SetIP.sgml))
m4_define('_Unwind_SetIP','1')
</SECT1>
<!-- End of text generated from database -->
