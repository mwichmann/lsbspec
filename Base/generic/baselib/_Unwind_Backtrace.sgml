<REFENTRY ID="baselib--Unwind-Backtrace"> <REFMETA>
<REFENTRYTITLE>_Unwind_Backtrace</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_Backtrace
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>20 July 2010</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>_Unwind_Reason_Code
  <FUNCTION>_Unwind_Backtrace</FUNCTION></FUNCDEF>
 <PARAMDEF>_Unwind_Trace_Fn
  <PARAMETER>trace</PARAMETER></PARAMDEF>
 <PARAMDEF>void *
  <PARAMETER>trace_argument</PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>20 July 2010</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_Backtrace</FUNCTION> 
performs a stack backtrace using unwind data.
The <PARAMETER>trace</PARAMETER> callback is called for 
every stack frame in the call chain.

No cleanup actions are performed.
</PARA>
</REFSECT1>
</REFENTRY>
