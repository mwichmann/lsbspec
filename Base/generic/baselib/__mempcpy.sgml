<REFENTRY ID="baselib---mempcpy"> <REFMETA>
<REFENTRYTITLE>__mempcpy</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>__mempcpy</REFNAME>
<REFPURPOSE>
copy given number of bytes of source to destination
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>5 June 2008</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;string.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>void *
  <FUNCTION>__mempcpy</FUNCTION></FUNCDEF>
 <PARAMDEF>void * restrict 
  <PARAMETER><REPLACEABLE>dest</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>const void * restrict 
  <PARAMETER><REPLACEABLE>src</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>size_t 
  <PARAMETER><REPLACEABLE>n</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>5 June 2008</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>__mempcpy</FUNCTION> copies <PARAMETER>n</PARAMETER> 
bytes of <PARAMETER>src</PARAMETER> to <PARAMETER>dest</PARAMETER>,
returning a pointer to the byte after the last written byte.
</PARA>
<PARA>
If copying takes place between objects that overlap, the behavior is
undefined.
</PARA>
<PARA>
If either <PARAMETER>dest</PARAMETER> or <PARAMETER>src</PARAMETER> 
is a null pointer, the behavior is undefined.
</PARA>
<PARA>
If <PARAMETER>n</PARAMETER> is <LITERAL>0</LITERAL> and the other parameters
are valid, the return value is <PARAMETER>dest</PARAMETER>.
</PARA>
<PARA>
<FUNCTION>__mempcpy</FUNCTION> is not in the source standard; 
it is only in the binary standard.
</PARA>
</REFSECT1>
</REFENTRY>
