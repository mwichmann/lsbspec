<REFENTRY ID="baselib-xdrstdio-create-3"> <REFMETA>
<REFENTRYTITLE>xdrstdio_create</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>xdrstdio_create</REFNAME>
<REFPURPOSE>
library routines for external data representation
</REFPURPOSE>
</REFNAMEDIV>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>
#include &lt;rpc/xdr.h&gt;
</funcsynopsisinfo><funcprototype>
<funcdef>void
<function>xdrstdio_create</function>
</funcdef>
<paramdef>XDR *
<parameter>xdrs</parameter>
</paramdef>
<paramdef>FILE *
<parameter>file</parameter>
</paramdef>
<paramdef>enum xdr_op
<parameter>op</parameter>
</paramdef>

</funcprototype>
</funcsynopsis>
</refsynopsisdiv>
<REFSECT1>
<REFSECT1INFO>
<DATE>21 August 2007</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The <FUNCTION>xdrstdio_create</FUNCTION> function
shall initialize the XDR stream object referred to by <parameter>xdrs</parameter>.
The XDR stream data shall be written to, or read from, the standard I/O stream associated
with <parameter>file</parameter>. If the operation <parameter>op</parameter> is 
<symbol>XDR_ENCODE</symbol>, encoded data shall be written to <parameter>file</parameter>.
If <parameter>op</parameter> is <symbol>XDR_DECODE</symbol>, encoded data shall be read from 
<parameter>file</parameter>.
If <parameter>op</parameter> is <symbol>XDR_FREE</symbol>, 
the XDR stream object may be used to deallocate storage allocated by a previous <symbol>XDR_DECODE</symbol>.
</PARA>
<PARA>
The associated destroy function shall flush the <parameter>file</parameter> I/O stream, but not close
it.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
None.
</PARA>
</REFSECT1>
</REFENTRY>
