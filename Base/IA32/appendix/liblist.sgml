<APPENDIX ID=app-A>
<TITLE>Alphabetical Listing of Interfaces by Library</TITLE>
<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibapnd -->
<sect1 id=app-libc>
<title>libc</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LFS"> [LFS]
</member>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.RPC.XDR"> [RPC + XDR]
</member>
<member>
<xref linkend="std.SUSv2"> [SUSv2]
</member>
<member>
<xref linkend="std.SUSv3"> [SUSv3]
</member>
<member>
<xref linkend="std.SUSv4"> [SUSv4]
</member>
<member>
<xref linkend="std.SVID.4"> [SVID.4]
</member>
</simplelist>
</para>
<table>
<title>libc Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>_Exit(GLIBC_2.1.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>getopt(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>setbuf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_IO_feof(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getopt_long(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>setbuffer(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>_IO_getc(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getopt_long_only(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>setcontext(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>_IO_putc(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getpagesize(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>setegid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_IO_puts(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getpeername(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setenv(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__assert_fail(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getpgid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>seteuid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__ctype_get_mb_cur_max(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getpgrp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setgid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__cxa_atexit(GLIBC_2.1.3)<link linkend="std.LSB">[LSB]</link></entry><entry>getpid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setgrent(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__cxa_finalize(GLIBC_2.1.3)<link linkend="std.LSB">[LSB]</link></entry><entry>getppid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setgroups(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__errno_location(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getpriority(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sethostname(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__fpending(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>getprotobyname(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setitimer(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fprintf_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getprotobyname_r(GLIBC_2.1.2)<link linkend="std.LSB">[LSB]</link></entry><entry>setlocale(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fxstat(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getprotobynumber(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setlogmask(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fxstat64(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>getprotobynumber_r(GLIBC_2.1.2)<link linkend="std.LSB">[LSB]</link></entry><entry>setpgid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__getpagesize(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getprotoent(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setpgrp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__getpgid(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getprotoent_r(GLIBC_2.1.2)<link linkend="std.LSB">[LSB]</link></entry><entry>setpriority(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__h_errno_location(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getpwent(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setprotoent(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__isinf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getpwent_r(GLIBC_2.1.2)<link linkend="std.LSB">[LSB]</link></entry><entry>setpwent(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__isinff(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getpwnam(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setregid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__isinfl(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getpwnam_r(GLIBC_2.1.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setreuid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__isnan(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getpwuid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setrlimit(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__isnanf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getpwuid_r(GLIBC_2.1.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setrlimit64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry></row>
<row><entry>__isnanl(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getrlimit(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>setservent(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__libc_current_sigrtmax(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>getrlimit64(GLIBC_2.2)<link linkend="std.LFS">[LFS]</link></entry><entry>setsid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__libc_current_sigrtmin(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>getrusage(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setsockopt(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__libc_start_main(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getservbyname(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setstate(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__lxstat(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getservbyname_r(GLIBC_2.1.2)<link linkend="std.LSB">[LSB]</link></entry><entry>setstate_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__lxstat64(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>getservbyport(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setuid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__mempcpy(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getservbyport_r(GLIBC_2.1.2)<link linkend="std.LSB">[LSB]</link></entry><entry>setutent(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__printf_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getservent(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setutxent(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__rawmemchr(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>getservent_r(GLIBC_2.1.2)<link linkend="std.LSB">[LSB]</link></entry><entry>setvbuf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__sigsetjmp(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getsid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>shmat(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__snprintf_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getsockname(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>shmctl(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__sprintf_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getsockopt(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>shmdt(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__stpcpy(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getsubopt(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>shmget(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strdup(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>gettext(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>shutdown(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strtod_internal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>gettimeofday(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigaction(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strtof_internal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getuid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigaddset(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strtok_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getutent(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>sigaltstack(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strtol_internal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getutent_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>sigandset(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__strtold_internal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getutxent(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigdelset(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strtoll_internal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getutxid(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigemptyset(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strtoul_internal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getutxline(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigfillset(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__strtoull_internal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getw(GLIBC_2.0)<link linkend="std.SUSv2">[SUSv2]</link></entry><entry>sighold(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__sysconf(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>getwc(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigignore(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__sysv_signal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>getwc_unlocked(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>siginterrupt(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__vfprintf_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getwchar(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigisemptyset(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__vprintf_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getwchar_unlocked(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>sigismember(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__vsnprintf_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>getwd(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>siglongjmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__vsprintf_chk(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>glob(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>signal(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wcstod_internal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>glob64(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>sigorset(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__wcstof_internal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>globfree(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigpause(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__wcstol_internal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>globfree64(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>sigpending(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wcstold_internal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>gmtime(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigprocmask(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__wcstoul_internal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>gmtime_r(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigqueue(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__xmknod(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>gnu_get_libc_release(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>sigrelse(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__xpg_basename(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>gnu_get_libc_version(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>sigreturn(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__xpg_sigpause(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>grantpt(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigset(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__xpg_strerror_r(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>hcreate(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigsuspend(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__xstat(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>hcreate_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>sigtimedwait(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__xstat64(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>hdestroy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigwait(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_exit(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>hdestroy_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>sigwaitinfo(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_longjmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>hsearch(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sleep(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_setjmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>hsearch_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>snprintf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_tolower(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>htonl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sockatmark(GLIBC_2.2.4)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_toupper(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>htons(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>socket(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>a64l(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iconv(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>socketpair(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>abort(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iconv_close(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sprintf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>abs(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iconv_open(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>srand(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>accept(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>if_freenameindex(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>srand48(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>access(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>if_indextoname(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>srand48_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>acct(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>if_nameindex(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>srandom(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>adjtime(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>if_nametoindex(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>srandom_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>alarm(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>imaxabs(GLIBC_2.1.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sscanf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>alphasort(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>imaxdiv(GLIBC_2.1.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>statfs(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>alphasort64(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>index(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>statfs64(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>argz_add(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>inet_addr(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>statvfs(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_add_sep(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>inet_aton(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>statvfs64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry></row>
<row><entry>argz_append(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>inet_ntoa(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>stime(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>argz_count(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>inet_ntop(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>stpcpy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_create(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>inet_pton(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>stpncpy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_create_sep(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>initgroups(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>strcasecmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_delete(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>initstate(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strcasestr(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>argz_extract(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>initstate_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>strcat(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_insert(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>insque(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strchr(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_next(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>ioctl(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>strcmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_replace(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>ioperm(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>strcoll(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>argz_stringify(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>iopl(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>strcpy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asctime(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isalnum(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strcspn(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asctime_r(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isalpha(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strdup(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asprintf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>isascii(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strerror(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atof(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isatty(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strerror_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>atoi(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isblank(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strfmon(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atol(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iscntrl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strftime(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atoll(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isdigit(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strlen(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>authnone_create(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>isgraph(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strncasecmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>backtrace(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>islower(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strncat(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>backtrace_symbols(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>isprint(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strncmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>backtrace_symbols_fd(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>ispunct(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strncpy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>basename(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>isspace(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strndup(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>bcmp(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>isupper(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strnlen(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>bcopy(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>iswalnum(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strpbrk(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>bind(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iswalpha(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strptime(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>bind_textdomain_codeset(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>iswblank(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strrchr(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>bindresvport(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>iswcntrl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strsep(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>bindtextdomain(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>iswctype(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strsignal(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>brk(GLIBC_2.0)<link linkend="std.SUSv2">[SUSv2]</link></entry><entry>iswdigit(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strspn(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>bsd_signal(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>iswgraph(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strstr(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>bsearch(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iswlower(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtod(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>btowc(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iswprint(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtof(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>bzero(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>iswpunct(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtoimax(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>calloc(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iswspace(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtok(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>callrpc(GLIBC_2.0)<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry><entry>iswupper(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtok_r(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catclose(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>iswxdigit(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtol(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catgets(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>isxdigit(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtold(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catopen(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>jrand48(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtoll(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cfgetispeed(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>jrand48_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>strtoq(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cfgetospeed(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>key_decryptsession(GLIBC_2.1)<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>strtoul(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cfmakeraw(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>kill(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>strtoull(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cfsetispeed(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>killpg(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtoumax(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cfsetospeed(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>l64a(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strtouq(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cfsetspeed(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>labs(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>strxfrm(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>chdir(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lchown(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svc_getreqset(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>chmod(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lcong48(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svc_register(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>chown(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lcong48_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>svc_run(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>chroot(GLIBC_2.0)<link linkend="std.SUSv2">[SUSv2]</link></entry><entry>ldiv(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svc_sendreply(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>clearerr(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lfind(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcerr_auth(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>clearerr_unlocked(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>link(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>svcerr_decode(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>clnt_create(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>listen(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcerr_noproc(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>clnt_pcreateerror(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>llabs(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcerr_noprog(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>clnt_perrno(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>lldiv(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcerr_progvers(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>clnt_perror(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>localeconv(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcerr_systemerr(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>clnt_spcreateerror(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>localtime(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcerr_weakauth(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>clnt_sperrno(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>localtime_r(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcfd_create(GLIBC_2.0)<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry></row>
<row><entry>clnt_sperror(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry><entry>lockf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcraw_create(GLIBC_2.0)<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry></row>
<row><entry>clntraw_create(GLIBC_2.0)<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry><entry>lockf64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>svctcp_create(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>clnttcp_create(GLIBC_2.0)<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry><entry>longjmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>svcudp_create(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>clntudp_bufcreate(GLIBC_2.0)<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry><entry>lrand48(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>swab(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clntudp_create(GLIBC_2.0)<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry><entry>lrand48_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>swapcontext(GLIBC_2.1)<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>clock(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lsearch(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>swprintf(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>close(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lseek(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>swscanf(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>closedir(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lseek64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>symlink(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>closelog(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>makecontext(GLIBC_2.1)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>sync(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>confstr(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>malloc(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sysconf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>connect(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mblen(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sysinfo(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>creat(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mbrlen(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>syslog(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>creat64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>mbrtowc(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>system(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>ctermid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mbsinit(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcdrain(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ctime(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mbsnrtowcs(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcflow(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ctime_r(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mbsrtowcs(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcflush(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cuserid(GLIBC_2.0)<link linkend="std.SUSv2">[SUSv2]</link></entry><entry>mbstowcs(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcgetattr(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>daemon(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>mbtowc(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcgetpgrp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dcgettext(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>memccpy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcgetsid(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dcngettext(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>memchr(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcsendbreak(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dgettext(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>memcmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcsetattr(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>difftime(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>memcpy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcsetpgrp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dirfd(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>memmem(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>tdelete(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dirname(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>memmove(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>telldir(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>div(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>memrchr(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>tempnam(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dl_iterate_phdr(GLIBC_2.2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>memset(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>textdomain(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>dngettext(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>mkdir(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tfind(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dprintf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mkdtemp(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>time(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>drand48(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mkfifo(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>times(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>drand48_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>mkstemp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tmpfile(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>dup(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mkstemp64(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>tmpfile64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry></row>
<row><entry>dup2(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mktemp(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>tmpnam(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ecvt(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>mktime(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>toascii(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>endgrent(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mlock(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tolower(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>endprotoent(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mlockall(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>toupper(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>endpwent(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mmap(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>towctrans(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>endservent(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mmap64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>towlower(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>endutent(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>mprotect(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>towupper(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>endutxent(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>mrand48(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>truncate(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>envz_add(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>mrand48_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>truncate64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry></row>
<row><entry>envz_entry(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>mremap(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>tsearch(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>envz_get(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>msgctl(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ttyname(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>envz_merge(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>msgget(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ttyname_r(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>envz_remove(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>msgrcv(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>twalk(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>envz_strip(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>msgsnd(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tzset(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>erand48(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>msync(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ualarm(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>erand48_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>munlock(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ulimit(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>err(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>munlockall(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>umask(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>error(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>munmap(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>uname(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>errx(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>nanosleep(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ungetc(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>execl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nftw(GLIBC_2.3.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ungetwc(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>execle(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nftw64(GLIBC_2.3.3)<link linkend="std.LFS">[LFS]</link></entry><entry>unlink(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>execlp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ngettext(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>unlockpt(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>execv(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nice(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>unsetenv(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>execve(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nl_langinfo(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>usleep(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>execvp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nrand48(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>utime(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>exit(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nrand48_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>utimes(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fchdir(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ntohl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>utmpname(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fchmod(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ntohs(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vasprintf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fchown(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>open(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vdprintf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fclose(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>open64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>verrx(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fcntl(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>open_memstream(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vfork(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>fcvt(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>opendir(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vfprintf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fdatasync(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>openlog(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vfscanf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fdopen(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pathconf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vfwprintf(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>feof(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pause(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vfwscanf(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>feof_unlocked(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pclose(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vprintf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ferror(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>perror(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vscanf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>ferror_unlocked(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pipe(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vsnprintf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fexecve(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pmap_getport(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>vsprintf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fflush(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pmap_set(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>vsscanf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fflush_unlocked(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pmap_unset(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>vswprintf(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ffs(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>poll(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vswscanf(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fgetc(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>popen(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vsyslog(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fgetc_unlocked(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>posix_fadvise(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vwprintf(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgetpos(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_fadvise64(GLIBC_2.3.3)<link linkend="std.LSB">[LSB]</link></entry><entry>vwscanf(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fgetpos64(GLIBC_2.2)<link linkend="std.LFS">[LFS]</link></entry><entry>posix_fallocate(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wait(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgets(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_fallocate64(GLIBC_2.3.3)<link linkend="std.LSB">[LSB]</link></entry><entry>wait4(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fgets_unlocked(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>posix_madvise(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>waitid(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgetwc(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_memalign(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>waitpid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fgetwc_unlocked(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>posix_openpt(GLIBC_2.2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>warn(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fgetws(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawn(GLIBC_2.15)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>warnx(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fgetws_unlocked(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>posix_spawn_file_actions_addclose(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcpcpy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fileno(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawn_file_actions_adddup2(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcpncpy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fileno_unlocked(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>posix_spawn_file_actions_addopen(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcrtomb(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>flock(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>posix_spawn_file_actions_destroy(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcscasecmp(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>flockfile(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawn_file_actions_init(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcscat(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fmemopen(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_destroy(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcschr(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fmtmsg(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_getflags(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcscmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fnmatch(GLIBC_2.2.3)<link linkend="std.LSB">[LSB]</link></entry><entry>posix_spawnattr_getpgroup(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcscoll(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fopen(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_getschedparam(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcscpy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fopen64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>posix_spawnattr_getschedpolicy(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcscspn(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fork(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_getsigdefault(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsdup(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fpathconf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_getsigmask(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsftime(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fprintf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_init(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcslen(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputc(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_setflags(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsncasecmp(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputc_unlocked(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>posix_spawnattr_setpgroup(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsncat(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputs(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_setschedparam(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsncmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputs_unlocked(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>posix_spawnattr_setschedpolicy(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsncpy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputwc(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnattr_setsigdefault(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsnlen(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputwc_unlocked(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>posix_spawnattr_setsigmask(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsnrtombs(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputws(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>posix_spawnp(GLIBC_2.15)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcspbrk(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fputws_unlocked(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>pread(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsrchr(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fread(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pread64(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>wcsrtombs(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fread_unlocked(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>printf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsspn(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>free(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pselect(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsstr(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>freeaddrinfo(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>psignal(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstod(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>freopen(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ptrace(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>wcstof(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>freopen64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>ptsname(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstoimax(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fscanf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>putc(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstok(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fseek(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>putc_unlocked(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstol(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fseeko(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>putchar(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstold(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fseeko64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>putchar_unlocked(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstoll(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fsetpos(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>putenv(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstombs(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fsetpos64(GLIBC_2.2)<link linkend="std.LFS">[LFS]</link></entry><entry>puts(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstoq(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fstatfs(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pututxline(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstoul(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fstatfs64(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>putw(GLIBC_2.0)<link linkend="std.SUSv2">[SUSv2]</link></entry><entry>wcstoull(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fstatvfs(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>putwc(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcstoumax(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fstatvfs64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>putwc_unlocked(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>wcstouq(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>fsync(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>putwchar(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcswcs(GLIBC_2.1)<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>ftell(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>putwchar_unlocked(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>wcswidth(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ftello(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pwrite(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcsxfrm(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ftello64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>pwrite64(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>wctob(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ftime(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>qsort(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wctomb(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ftok(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>raise(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wctrans(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ftruncate(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>rand(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wctype(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ftruncate64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>rand_r(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wcwidth(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ftrylockfile(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>random(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wmemchr(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ftw(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>random_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>wmemcmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ftw64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>read(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wmemcpy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>funlockfile(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>readdir(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wmemmove(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fwide(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>readdir64(GLIBC_2.2)<link linkend="std.LFS">[LFS]</link></entry><entry>wmemset(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fwprintf(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>readdir64_r(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>wordexp(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fwrite(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>readdir_r(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wordfree(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fwrite_unlocked(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>readlink(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wprintf(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fwscanf(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>readv(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>write(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>gai_strerror(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>realloc(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>writev(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>gcvt(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>realpath(GLIBC_2.3)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wscanf(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>getaddrinfo(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>recv(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_accepted_reply(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getc(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>recvfrom(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_array(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getc_unlocked(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>recvmsg(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_bool(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getchar(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>regcomp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_bytes(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getchar_unlocked(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>regerror(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_callhdr(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getcontext(GLIBC_2.1)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>regexec(GLIBC_2.3.4)<link linkend="std.LSB">[LSB]</link></entry><entry>xdr_callmsg(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getcwd(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>regfree(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_char(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getdate(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remove(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_double(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getdelim(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remque(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_enum(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getdomainname(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>rename(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_float(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getdtablesize(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>rewind(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_free(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getegid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>rewinddir(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_int(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getenv(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>rindex(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>xdr_long(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>geteuid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>rmdir(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_opaque(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getgid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sbrk(GLIBC_2.0)<link linkend="std.SUSv2">[SUSv2]</link></entry><entry>xdr_opaque_auth(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getgrent(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scandir(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_pointer(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getgrent_r(GLIBC_2.1.2)<link linkend="std.LSB">[LSB]</link></entry><entry>scandir64(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>xdr_reference(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getgrgid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scanf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>xdr_rejected_reply(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getgrgid_r(GLIBC_2.1.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sched_get_priority_max(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_replymsg(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getgrnam(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sched_get_priority_min(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_short(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getgrnam_r(GLIBC_2.1.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sched_getparam(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_string(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getgrouplist(GLIBC_2.2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>sched_getscheduler(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_u_char(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getgroups(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sched_rr_get_interval(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_u_int(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>gethostbyaddr(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>sched_setparam(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_u_long(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>gethostbyaddr_r(GLIBC_2.1.2)<link linkend="std.LSB">[LSB]</link></entry><entry>sched_setscheduler(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>xdr_u_short(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>gethostbyname(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>sched_yield(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_union(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>gethostbyname2(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>seed48(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_vector(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>gethostbyname2_r(GLIBC_2.1.2)<link linkend="std.LSB">[LSB]</link></entry><entry>seed48_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>xdr_void(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>gethostbyname_r(GLIBC_2.1.2)<link linkend="std.LSB">[LSB]</link></entry><entry>seekdir(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdr_wrapstring(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>gethostid(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>select(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdrmem_create(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>gethostname(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>semctl(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdrrec_create(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getitimer(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>semget(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdrrec_endofrecord(GLIBC_2.0)<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry></row>
<row><entry>getline(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>semop(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdrrec_eof(GLIBC_2.0)<link linkend="std.SVID.4">[SVID.4]</link></entry></row>
<row><entry>getloadavg(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>send(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>xdrrec_skiprecord(GLIBC_2.0)<link linkend="std.RPC.XDR">[RPC + XDR]</link></entry></row>
<row><entry>getlogin(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sendfile(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>xdrstdio_create(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>getlogin_r(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sendmsg(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry></entry></row>
<row><entry>getnameinfo(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sendto(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
<table>
<title>libc Data Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>__daylight<link linkend="std.LSB">[LSB]</link></entry><entry>__tzname<link linkend="std.LSB">[LSB]</link></entry><entry>in6addr_loopback<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>__environ<link linkend="std.LSB">[LSB]</link></entry><entry>_sys_errlist<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
<row><entry>__timezone<link linkend="std.LSB">[LSB]</link></entry><entry>in6addr_any<link linkend="std.SUSv3">[SUSv3]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libcrypt>
<title>libcrypt</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.SUSv4"> [SUSv4]
</member>
</simplelist>
</para>
<table>
<title>libcrypt Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>crypt(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>encrypt(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>setkey(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>crypt_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>encrypt_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>setkey_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libdl>
<title>libdl</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.SUSv4"> [SUSv4]
</member>
</simplelist>
</para>
<table>
<title>libdl Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>dladdr(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>dlerror(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>dlsym(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>dlclose(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>dlopen(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>dlvsym(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libgcc-s>
<title>libgcc_s</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
</simplelist>
</para>
<table>
<title>libgcc_s Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>_Unwind_Backtrace(GCC_3.3)<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_GetDataRelBase(GCC_3.0)<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_RaiseException(GCC_3.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>_Unwind_DeleteException(GCC_3.0)<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_GetGR(GCC_3.0)<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_Resume(GCC_3.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>_Unwind_FindEnclosingFunction(GCC_3.3)<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_GetIP(GCC_3.0)<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_Resume_or_Rethrow(GCC_3.3)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>_Unwind_Find_FDE(GCC_3.0)<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_GetLanguageSpecificData(GCC_3.0)<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_SetGR(GCC_3.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>_Unwind_ForcedUnwind(GCC_3.0)<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_GetRegionStart(GCC_3.0)<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_SetIP(GCC_3.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>_Unwind_GetCFA(GCC_3.3)<link linkend="std.LSB">[LSB]</link></entry><entry>_Unwind_GetTextRelBase(GCC_3.0)<link linkend="std.LSB">[LSB]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libm>
<title>libm</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.SUSv3"> [SUSv3]
</member>
<member>
<xref linkend="std.SUSv4"> [SUSv4]
</member>
</simplelist>
</para>
<table>
<title>libm Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>__finite(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>csinhl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>llround(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__finitef(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>csinl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>llroundf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__finitel(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>csqrt(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>llroundl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fpclassify(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>csqrtf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fpclassifyf(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>csqrtl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log10(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__fpclassifyl(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>ctan(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log10f(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__signbit(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>ctanf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log10l(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__signbitf(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>ctanh(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log1p(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__signbitl(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>ctanhf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log1pf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>acos(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ctanhl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log1pl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>acosf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ctanl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>log2(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>acosh(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>drem(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>log2f(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>acoshf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>dremf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>log2l(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>acoshl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>dreml(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>logb(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>acosl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>erf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>logbf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asin(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>erfc(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>logbl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asinf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>erfcf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>logf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asinh(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>erfcl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>logl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asinhf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>erff(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lrint(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asinhl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>erfl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lrintf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>asinl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>exp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lrintl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atan(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>exp10(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>lround(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atan2(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>exp10f(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>lroundf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atan2f(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>exp10l(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>lroundl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atan2l(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>exp2(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>matherr(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>atanf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>exp2f(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>modf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atanh(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>exp2l(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>modff(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atanhf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>expf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>modfl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atanhl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>expl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nan(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>atanl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>expm1(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nanf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cabs(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>expm1f(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nanl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cabsf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>expm1l(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nearbyint(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cabsl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fabs(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nearbyintf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cacos(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fabsf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nearbyintl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cacosf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fabsl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nextafter(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cacosh(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fdim(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nextafterf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cacoshf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fdimf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nextafterl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cacoshl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fdiml(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nexttoward(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cacosl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>feclearexcept(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>nexttowardf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>carg(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fedisableexcept(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>nexttowardl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cargf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>feenableexcept(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>pow(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cargl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fegetenv(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pow10(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>casin(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fegetexcept(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>pow10f(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>casinf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fegetexceptflag(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pow10l(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>casinh(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fegetround(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>powf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>casinhf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>feholdexcept(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>powl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>casinhl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>feraiseexcept(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remainder(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>casinl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fesetenv(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remainderf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catan(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fesetexceptflag(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remainderl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catanf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fesetround(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remquo(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catanh(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fetestexcept(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remquof(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catanhf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>feupdateenv(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>remquol(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catanhl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>finite(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>rint(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>catanl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>finitef(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>rintf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cbrt(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>finitel(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>rintl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cbrtf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>floor(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>round(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cbrtl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>floorf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>roundf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ccos(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>floorl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>roundl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ccosf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fma(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalb(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>ccosh(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmaf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalbf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>ccoshf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmal(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalbl(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>ccoshl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmax(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalbln(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ccosl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmaxf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalblnf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ceil(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmaxl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalblnl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ceilf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmin(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalbn(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ceill(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fminf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalbnf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cexp(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fminl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>scalbnl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cexpf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmod(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>significand(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cexpl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmodf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>significandf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cimag(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>fmodl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>significandl(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>cimagf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>frexp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sin(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cimagl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>frexpf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sincos(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>clog(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>frexpl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sincosf(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>clog10(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>gamma(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>sincosl(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>clog10f(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>gammaf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>sinf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clog10l(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>gammal(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>sinh(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clogf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>hypot(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sinhf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>clogl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>hypotf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sinhl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>conj(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>hypotl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sinl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>conjf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ilogb(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sqrt(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>conjl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ilogbf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sqrtf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>copysign(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ilogbl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sqrtl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>copysignf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>j0(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tan(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>copysignl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>j0f(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>tanf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cos(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>j0l(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>tanh(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cosf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>j1(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tanhf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cosh(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>j1f(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>tanhl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>coshf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>j1l(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>tanl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>coshl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>jn(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tgamma(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cosl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>jnf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>tgammaf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cpow(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>jnl(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>tgammal(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cpowf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ldexp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>trunc(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cpowl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ldexpf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>truncf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cproj(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ldexpl(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>truncl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cprojf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lgamma(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>y0(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>cprojl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lgamma_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>y0f(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>creal(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lgammaf(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>y0l(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>crealf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lgammaf_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>y1(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>creall(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lgammal(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>y1f(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>csin(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>lgammal_r(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>y1l(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>csinf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>llrint(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>yn(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>csinh(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>llrintf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ynf(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>csinhf(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>llrintl(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>ynl(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
</tbody>
</tgroup>
</table>
<table>
<title>libm Data Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>signgam<link linkend="std.SUSv4">[SUSv4]</link></entry><entry></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libpthread>
<title>libpthread</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LFS"> [LFS]
</member>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
<member>
<xref linkend="std.SUSv3"> [SUSv3]
</member>
<member>
<xref linkend="std.SUSv4"> [SUSv4]
</member>
</simplelist>
</para>
<table>
<title>libpthread Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>__errno_location(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_barrierattr_setpshared(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlockattr_destroy(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__h_errno_location(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_cancel(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlockattr_getkind_np(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>__libc_current_sigrtmax(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_cond_broadcast(GLIBC_2.3.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlockattr_getpshared(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>__libc_current_sigrtmin(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_cond_destroy(GLIBC_2.3.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlockattr_init(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>_pthread_cleanup_pop(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_cond_init(GLIBC_2.3.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlockattr_setkind_np(GLIBC_2.1)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>_pthread_cleanup_push(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_cond_signal(GLIBC_2.3.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlockattr_setpshared(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>accept(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_cond_timedwait(GLIBC_2.3.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_self(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>close(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_cond_wait(GLIBC_2.3.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_setcancelstate(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>connect(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_condattr_destroy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_setcanceltype(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fcntl(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_condattr_getpshared(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_setconcurrency(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>flockfile(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_condattr_init(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_setschedparam(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fork(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_condattr_setpshared(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_setspecific(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>fsync(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_create(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_sigmask(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>ftrylockfile(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_detach(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_spin_destroy(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>funlockfile(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_equal(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_spin_init(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>longjmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_exit(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_spin_lock(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>lseek(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_getattr_np(GLIBC_2.2.3)<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_spin_trylock(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>lseek64(GLIBC_2.2)<link linkend="std.LFS">[LFS]</link></entry><entry>pthread_getconcurrency(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_spin_unlock(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>msync(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_getcpuclockid(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_testcancel(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>nanosleep(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_getschedparam(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pwrite(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>open(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_getspecific(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pwrite64(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>open64(GLIBC_2.2)<link linkend="std.LFS">[LFS]</link></entry><entry>pthread_join(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>raise(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pause(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_key_create(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>read(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pread(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_key_delete(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>recv(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pread64(GLIBC_2.2)<link linkend="std.LSB">[LSB]</link></entry><entry>pthread_kill(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>recvfrom(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_destroy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_consistent_np(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>recvmsg(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getdetachstate(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_destroy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_close(GLIBC_2.1.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getguardsize(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_init(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_destroy(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getinheritsched(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_lock(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_getvalue(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getschedparam(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_timedlock(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_init(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getschedpolicy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_trylock(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_open(GLIBC_2.1.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getscope(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutex_unlock(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_post(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getstack(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_destroy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_timedwait(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getstackaddr(GLIBC_2.1)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>pthread_mutexattr_getpshared(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_trywait(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_getstacksize(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_getrobust_np(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>sem_unlink(GLIBC_2.1.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_init(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_gettype(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sem_wait(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setdetachstate(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_init(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>send(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setguardsize(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_setpshared(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sendmsg(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setinheritsched(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_setrobust_np(GLIBC_2.4)<link linkend="std.LSB">[LSB]</link></entry><entry>sendto(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setschedparam(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_mutexattr_settype(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigaction(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setschedpolicy(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_once(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>siglongjmp(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setscope(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_destroy(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>sigwait(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setstack(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_init(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>system(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>pthread_attr_setstackaddr(GLIBC_2.1)<link linkend="std.SUSv3">[SUSv3]</link></entry><entry>pthread_rwlock_rdlock(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>tcdrain(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_attr_setstacksize(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_timedrdlock(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>vfork(GLIBC_2.0)<link linkend="std.SUSv3">[SUSv3]</link></entry></row>
<row><entry>pthread_barrier_destroy(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_timedwrlock(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>wait(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_barrier_init(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_tryrdlock(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>waitpid(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>pthread_barrier_wait(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_trywrlock(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>write(GLIBC_2.0)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>pthread_barrierattr_destroy(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_unlock(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry></entry></row>
<row><entry>pthread_barrierattr_init(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>pthread_rwlock_wrlock(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-librt>
<title>librt</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LFS"> [LFS]
</member>
<member>
<xref linkend="std.SUSv4"> [SUSv4]
</member>
</simplelist>
</para>
<table>
<title>librt Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>aio_cancel(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>aio_return64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>clock_settime(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_cancel64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>aio_suspend(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>shm_open(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_error(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>aio_suspend64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>shm_unlink(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_error64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>aio_write(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>timer_create(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_fsync(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>aio_write64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>timer_delete(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_fsync64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>clock_getcpuclockid(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>timer_getoverrun(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_read(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>clock_getres(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>timer_gettime(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_read64(GLIBC_2.1)<link linkend="std.LFS">[LFS]</link></entry><entry>clock_gettime(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>timer_settime(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry></row>
<row><entry>aio_return(GLIBC_2.1)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry>clock_nanosleep(GLIBC_2.2)<link linkend="std.SUSv4">[SUSv4]</link></entry><entry></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<sect1 id=app-libutil>
<title>libutil</title>
<para>
</para>
<para>
The behavior of the interfaces in this library is specified by the following Standards.<simplelist columns=1>
<member>
<xref linkend="std.LSB"> [LSB]
</member>
</simplelist>
</para>
<table>
<title>libutil Function Interfaces</title>
<tgroup cols=3>
<tbody>
<row><entry>forkpty(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>login_tty(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>logwtmp(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
<row><entry>login(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>logout(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry><entry>openpty(GLIBC_2.0)<link linkend="std.LSB">[LSB]</link></entry></row>
</tbody>
</tgroup>
</table>
</sect1>
<!-- End of text generated from database -->

</APPENDIX>
