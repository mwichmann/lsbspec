<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibspec -->
<SECT1 ID=libc>
<TITLE>Interfaces for libc</TITLE>
<PARA>
<XREF LINKEND="lib-libc-def"> defines the library name and shared object name
for the libc library
</PARA>
<TABLE id="lib-libc-def">
<TITLE>libc Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libc</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libc.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following specifications:<SIMPLELIST COLUMNS=1>
<MEMBER ID='REFSTD.libc.1'>
[LFS] <XREF LINKEND="std.LFS">
</MEMBER>
<MEMBER ID='REFSTD.libc.2'>
[LSB] <XREF LINKEND="std.LSB">
</MEMBER>
<MEMBER ID='REFSTD.libc.3'>
[RPC + XDR] <XREF LINKEND="std.RPC.XDR">
</MEMBER>
<MEMBER ID='REFSTD.libc.4'>
[SUSv2] <XREF LINKEND="std.SUSv2">
</MEMBER>
<MEMBER ID='REFSTD.libc.5'>
[SUSv3] <XREF LINKEND="std.SUSv3">
</MEMBER>
<MEMBER ID='REFSTD.libc.6'>
[SUSv4] <XREF LINKEND="std.SUSv4">
</MEMBER>
<MEMBER ID='REFSTD.libc.7'>
[SVID.4] <XREF LINKEND="std.SVID.4">
</MEMBER>
</SIMPLELIST>
</PARA>
<!-- debug: database interface name RPC -->
<SECT2>
<!--libgroup-->
<TITLE>RPC</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for RPC</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for RPC specified in <XREF linkend="tbl-libc-rpc-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-rpc-ints">
<TITLE>libc - RPC Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>authnone_create</primary></indexterm>authnone_create(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>callrpc</primary></indexterm>callrpc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.3">[RPC + XDR]</LINK></ENTRY>
<ENTRY><indexterm><primary>clnt_create</primary></indexterm>clnt_create(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>clnt_pcreateerror</primary></indexterm>clnt_pcreateerror(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_perrno</primary></indexterm>clnt_perrno(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>clnt_perror</primary></indexterm>clnt_perror(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>clnt_spcreateerror</primary></indexterm>clnt_spcreateerror(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>clnt_sperrno</primary></indexterm>clnt_sperrno(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clnt_sperror</primary></indexterm>clnt_sperror(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>clntraw_create</primary></indexterm>clntraw_create(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.3">[RPC + XDR]</LINK></ENTRY>
<ENTRY><indexterm><primary>clnttcp_create</primary></indexterm>clnttcp_create(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.3">[RPC + XDR]</LINK></ENTRY>
<ENTRY><indexterm><primary>clntudp_bufcreate</primary></indexterm>clntudp_bufcreate(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.3">[RPC + XDR]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clntudp_create</primary></indexterm>clntudp_create(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.3">[RPC + XDR]</LINK></ENTRY>
<ENTRY><indexterm><primary>key_decryptsession</primary></indexterm>key_decryptsession(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>pmap_getport</primary></indexterm>pmap_getport(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>pmap_set</primary></indexterm>pmap_set(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pmap_unset</primary></indexterm>pmap_unset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>svc_getreqset</primary></indexterm>svc_getreqset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>svc_register</primary></indexterm>svc_register(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>svc_run</primary></indexterm>svc_run(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>svc_sendreply</primary></indexterm>svc_sendreply(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_auth</primary></indexterm>svcerr_auth(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_decode</primary></indexterm>svcerr_decode(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_noproc</primary></indexterm>svcerr_noproc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>svcerr_noprog</primary></indexterm>svcerr_noprog(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_progvers</primary></indexterm>svcerr_progvers(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_systemerr</primary></indexterm>svcerr_systemerr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcerr_weakauth</primary></indexterm>svcerr_weakauth(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>svcfd_create</primary></indexterm>svcfd_create(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.3">[RPC + XDR]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcraw_create</primary></indexterm>svcraw_create(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.3">[RPC + XDR]</LINK></ENTRY>
<ENTRY><indexterm><primary>svctcp_create</primary></indexterm>svctcp_create(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>svcudp_create</primary></indexterm>svcudp_create(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xdr_accepted_reply</primary></indexterm>xdr_accepted_reply(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_array</primary></indexterm>xdr_array(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_bool</primary></indexterm>xdr_bool(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_bytes</primary></indexterm>xdr_bytes(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xdr_callhdr</primary></indexterm>xdr_callhdr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_callmsg</primary></indexterm>xdr_callmsg(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_char</primary></indexterm>xdr_char(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_double</primary></indexterm>xdr_double(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xdr_enum</primary></indexterm>xdr_enum(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_float</primary></indexterm>xdr_float(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_free</primary></indexterm>xdr_free(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_int</primary></indexterm>xdr_int(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xdr_long</primary></indexterm>xdr_long(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_opaque</primary></indexterm>xdr_opaque(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_opaque_auth</primary></indexterm>xdr_opaque_auth(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_pointer</primary></indexterm>xdr_pointer(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xdr_reference</primary></indexterm>xdr_reference(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_rejected_reply</primary></indexterm>xdr_rejected_reply(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_replymsg</primary></indexterm>xdr_replymsg(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_short</primary></indexterm>xdr_short(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xdr_string</primary></indexterm>xdr_string(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_u_char</primary></indexterm>xdr_u_char(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_u_int</primary></indexterm>xdr_u_int(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_u_long</primary></indexterm>xdr_u_long(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xdr_u_short</primary></indexterm>xdr_u_short(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_union</primary></indexterm>xdr_union(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_vector</primary></indexterm>xdr_vector(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdr_void</primary></indexterm>xdr_void(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xdr_wrapstring</primary></indexterm>xdr_wrapstring(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdrmem_create</primary></indexterm>xdrmem_create(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdrrec_create</primary></indexterm>xdrrec_create(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdrrec_endofrecord</primary></indexterm>xdrrec_endofrecord(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.3">[RPC + XDR]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>xdrrec_eof</primary></indexterm>xdrrec_eof(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdrrec_skiprecord</primary></indexterm>xdrrec_skiprecord(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.3">[RPC + XDR]</LINK></ENTRY>
<ENTRY><indexterm><primary>xdrstdio_create</primary></indexterm>xdrstdio_create(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific deprecated functions
for RPC specified in <XREF linkend="tbl-libc-rpc-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libc-rpc-depints">
<TITLE>libc - RPC Deprecated Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>key_decryptsession</primary></indexterm>key_decryptsession(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.7">[SVID.4]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Epoll -->
<SECT2>
<!--libgroup-->
<TITLE>Epoll</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Epoll</TITLE>
<PARA>
No external functions are defined for libc - Epoll
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name System Calls -->
<SECT2>
<!--libgroup-->
<TITLE>System Calls</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for System Calls</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for System Calls specified in <XREF linkend="tbl-libc-syste-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-syste-ints">
<TITLE>libc - System Calls Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__fxstat</primary></indexterm>__fxstat(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__getpgid</primary></indexterm>__getpgid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__lxstat</primary></indexterm>__lxstat(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__xmknod</primary></indexterm>__xmknod(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__xstat</primary></indexterm>__xstat(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>access</primary></indexterm>access(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>acct</primary></indexterm>acct(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>alarm</primary></indexterm>alarm(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>backtrace</primary></indexterm>backtrace(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>backtrace_symbols</primary></indexterm>backtrace_symbols(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>backtrace_symbols_fd</primary></indexterm>backtrace_symbols_fd(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>brk</primary></indexterm>brk(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.4">[SUSv2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>chdir</primary></indexterm>chdir(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>chmod</primary></indexterm>chmod(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>chown</primary></indexterm>chown(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>chroot</primary></indexterm>chroot(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.4">[SUSv2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>clock</primary></indexterm>clock(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>close</primary></indexterm>close(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>closedir</primary></indexterm>closedir(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>creat</primary></indexterm>creat(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>dup</primary></indexterm>dup(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>dup2</primary></indexterm>dup2(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>execl</primary></indexterm>execl(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>execle</primary></indexterm>execle(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>execlp</primary></indexterm>execlp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>execv</primary></indexterm>execv(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>execve</primary></indexterm>execve(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>execvp</primary></indexterm>execvp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>exit</primary></indexterm>exit(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fchdir</primary></indexterm>fchdir(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fchmod</primary></indexterm>fchmod(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fchown</primary></indexterm>fchown(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fcntl</primary></indexterm>fcntl(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>fdatasync</primary></indexterm>fdatasync(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fexecve</primary></indexterm>fexecve(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>flock</primary></indexterm>flock(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fork</primary></indexterm>fork(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fstatfs</primary></indexterm>fstatfs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>fstatvfs</primary></indexterm>fstatvfs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fsync</primary></indexterm>fsync(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ftime</primary></indexterm>ftime(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftruncate</primary></indexterm>ftruncate(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getcontext</primary></indexterm>getcontext(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>getdtablesize</primary></indexterm>getdtablesize(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getegid</primary></indexterm>getegid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>geteuid</primary></indexterm>geteuid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgid</primary></indexterm>getgid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgroups</primary></indexterm>getgroups(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getitimer</primary></indexterm>getitimer(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getloadavg</primary></indexterm>getloadavg(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpagesize</primary></indexterm>getpagesize(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpgid</primary></indexterm>getpgid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getpgrp</primary></indexterm>getpgrp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpid</primary></indexterm>getpid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getppid</primary></indexterm>getppid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpriority</primary></indexterm>getpriority(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getrlimit</primary></indexterm>getrlimit(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getrusage</primary></indexterm>getrusage(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getsid</primary></indexterm>getsid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getuid</primary></indexterm>getuid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getwd</primary></indexterm>getwd(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>initgroups</primary></indexterm>initgroups(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>ioctl</primary></indexterm>ioctl(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>ioperm</primary></indexterm>ioperm(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>iopl</primary></indexterm>iopl(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>kill</primary></indexterm>kill(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>killpg</primary></indexterm>killpg(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>lchown</primary></indexterm>lchown(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>link</primary></indexterm>link(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>lockf</primary></indexterm>lockf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>lseek</primary></indexterm>lseek(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mkdir</primary></indexterm>mkdir(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mkfifo</primary></indexterm>mkfifo(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mlock</primary></indexterm>mlock(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mlockall</primary></indexterm>mlockall(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mmap</primary></indexterm>mmap(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mprotect</primary></indexterm>mprotect(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mremap</primary></indexterm>mremap(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>msync</primary></indexterm>msync(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>munlock</primary></indexterm>munlock(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>munlockall</primary></indexterm>munlockall(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>munmap</primary></indexterm>munmap(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>nanosleep</primary></indexterm>nanosleep(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>nice</primary></indexterm>nice(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>open</primary></indexterm>open(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>opendir</primary></indexterm>opendir(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>pathconf</primary></indexterm>pathconf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>pause</primary></indexterm>pause(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pipe</primary></indexterm>pipe(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>poll</primary></indexterm>poll(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>pread</primary></indexterm>pread(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>pselect</primary></indexterm>pselect(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ptrace</primary></indexterm>ptrace(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>pwrite</primary></indexterm>pwrite(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>read</primary></indexterm>read(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>readdir</primary></indexterm>readdir(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>readdir_r</primary></indexterm>readdir_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>readlink</primary></indexterm>readlink(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>readv</primary></indexterm>readv(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>rename</primary></indexterm>rename(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>rmdir</primary></indexterm>rmdir(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sbrk</primary></indexterm>sbrk(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.4">[SUSv2]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_get_priority_max</primary></indexterm>sched_get_priority_max(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_get_priority_min</primary></indexterm>sched_get_priority_min(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sched_getparam</primary></indexterm>sched_getparam(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_getscheduler</primary></indexterm>sched_getscheduler(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_rr_get_interval</primary></indexterm>sched_rr_get_interval(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_setparam</primary></indexterm>sched_setparam(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sched_setscheduler</primary></indexterm>sched_setscheduler(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>sched_yield</primary></indexterm>sched_yield(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>select</primary></indexterm>select(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setcontext</primary></indexterm>setcontext(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>setegid</primary></indexterm>setegid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>seteuid</primary></indexterm>seteuid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setgid</primary></indexterm>setgid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setitimer</primary></indexterm>setitimer(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>setpgid</primary></indexterm>setpgid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setpgrp</primary></indexterm>setpgrp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setpriority</primary></indexterm>setpriority(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setregid</primary></indexterm>setregid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>setreuid</primary></indexterm>setreuid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setrlimit</primary></indexterm>setrlimit(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>setrlimit64</primary></indexterm>setrlimit64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>setsid</primary></indexterm>setsid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>setuid</primary></indexterm>setuid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sleep</primary></indexterm>sleep(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>statfs</primary></indexterm>statfs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>statvfs</primary></indexterm>statvfs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>stime</primary></indexterm>stime(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>symlink</primary></indexterm>symlink(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sync</primary></indexterm>sync(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sysconf</primary></indexterm>sysconf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sysinfo</primary></indexterm>sysinfo(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>time</primary></indexterm>time(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>times</primary></indexterm>times(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>truncate</primary></indexterm>truncate(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ulimit</primary></indexterm>ulimit(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>umask</primary></indexterm>umask(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>uname</primary></indexterm>uname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>unlink</primary></indexterm>unlink(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>utime</primary></indexterm>utime(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>utimes</primary></indexterm>utimes(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>vfork</primary></indexterm>vfork(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>wait</primary></indexterm>wait(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wait4</primary></indexterm>wait4(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>waitid</primary></indexterm>waitid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>waitpid</primary></indexterm>waitpid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>write</primary></indexterm>write(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>writev</primary></indexterm>writev(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific deprecated functions
for System Calls specified in <XREF linkend="tbl-libc-syste-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libc-syste-depints">
<TITLE>libc - System Calls Deprecated Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>fstatfs</primary></indexterm>fstatfs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getdtablesize</primary></indexterm>getdtablesize(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpagesize</primary></indexterm>getpagesize(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getwd</primary></indexterm>getwd(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>statfs</primary></indexterm>statfs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Standard I/O -->
<SECT2>
<!--libgroup-->
<TITLE>Standard I/O</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Standard I/O</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Standard I/O specified in <XREF linkend="tbl-libc-stand-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-stand-ints">
<TITLE>libc - Standard I/O Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_IO_feof</primary></indexterm>_IO_feof(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_IO_getc</primary></indexterm>_IO_getc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_IO_putc</primary></indexterm>_IO_putc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_IO_puts</primary></indexterm>_IO_puts(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__fprintf_chk</primary></indexterm>__fprintf_chk(GLIBC_2.3.4) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__printf_chk</primary></indexterm>__printf_chk(GLIBC_2.3.4) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__snprintf_chk</primary></indexterm>__snprintf_chk(GLIBC_2.3.4) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__sprintf_chk</primary></indexterm>__sprintf_chk(GLIBC_2.3.4) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__vfprintf_chk</primary></indexterm>__vfprintf_chk(GLIBC_2.3.4) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__vprintf_chk</primary></indexterm>__vprintf_chk(GLIBC_2.3.4) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__vsnprintf_chk</primary></indexterm>__vsnprintf_chk(GLIBC_2.3.4) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__vsprintf_chk</primary></indexterm>__vsprintf_chk(GLIBC_2.3.4) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>asprintf</primary></indexterm>asprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>clearerr</primary></indexterm>clearerr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>clearerr_unlocked</primary></indexterm>clearerr_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctermid</primary></indexterm>ctermid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>dprintf</primary></indexterm>dprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fclose</primary></indexterm>fclose(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fdopen</primary></indexterm>fdopen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>feof</primary></indexterm>feof(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>feof_unlocked</primary></indexterm>feof_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>ferror</primary></indexterm>ferror(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ferror_unlocked</primary></indexterm>ferror_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>fflush</primary></indexterm>fflush(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fflush_unlocked</primary></indexterm>fflush_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgetc</primary></indexterm>fgetc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgetc_unlocked</primary></indexterm>fgetc_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgetpos</primary></indexterm>fgetpos(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgets</primary></indexterm>fgets(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgets_unlocked</primary></indexterm>fgets_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgetwc_unlocked</primary></indexterm>fgetwc_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgetws_unlocked</primary></indexterm>fgetws_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fileno</primary></indexterm>fileno(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fileno_unlocked</primary></indexterm>fileno_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>flockfile</primary></indexterm>flockfile(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fopen</primary></indexterm>fopen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fprintf</primary></indexterm>fprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fputc</primary></indexterm>fputc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fputc_unlocked</primary></indexterm>fputc_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>fputs</primary></indexterm>fputs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fputs_unlocked</primary></indexterm>fputs_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>fputwc_unlocked</primary></indexterm>fputwc_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>fputws_unlocked</primary></indexterm>fputws_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>fread</primary></indexterm>fread(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fread_unlocked</primary></indexterm>fread_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>freopen</primary></indexterm>freopen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fscanf</primary></indexterm>fscanf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>fseek</primary></indexterm>fseek(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fseeko</primary></indexterm>fseeko(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fsetpos</primary></indexterm>fsetpos(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftell</primary></indexterm>ftell(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftello</primary></indexterm>ftello(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fwrite</primary></indexterm>fwrite(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fwrite_unlocked</primary></indexterm>fwrite_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getc</primary></indexterm>getc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getc_unlocked</primary></indexterm>getc_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getchar</primary></indexterm>getchar(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getchar_unlocked</primary></indexterm>getchar_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getdelim</primary></indexterm>getdelim(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getline</primary></indexterm>getline(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getw</primary></indexterm>getw(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.4">[SUSv2]</LINK></ENTRY>
<ENTRY><indexterm><primary>getwc_unlocked</primary></indexterm>getwc_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getwchar_unlocked</primary></indexterm>getwchar_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>pclose</primary></indexterm>pclose(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>popen</primary></indexterm>popen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>printf</primary></indexterm>printf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>putc</primary></indexterm>putc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>putc_unlocked</primary></indexterm>putc_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>putchar</primary></indexterm>putchar(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>putchar_unlocked</primary></indexterm>putchar_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>puts</primary></indexterm>puts(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>putw</primary></indexterm>putw(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.4">[SUSv2]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>putwc_unlocked</primary></indexterm>putwc_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>putwchar_unlocked</primary></indexterm>putwchar_unlocked(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>remove</primary></indexterm>remove(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>rewind</primary></indexterm>rewind(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>rewinddir</primary></indexterm>rewinddir(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>scanf</primary></indexterm>scanf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>seekdir</primary></indexterm>seekdir(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setbuf</primary></indexterm>setbuf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>setbuffer</primary></indexterm>setbuffer(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>setvbuf</primary></indexterm>setvbuf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>snprintf</primary></indexterm>snprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sprintf</primary></indexterm>sprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sscanf</primary></indexterm>sscanf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>telldir</primary></indexterm>telldir(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>tempnam</primary></indexterm>tempnam(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ungetc</primary></indexterm>ungetc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>vasprintf</primary></indexterm>vasprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>vdprintf</primary></indexterm>vdprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>vfprintf</primary></indexterm>vfprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>vprintf</primary></indexterm>vprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>vsnprintf</primary></indexterm>vsnprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>vsprintf</primary></indexterm>vsprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific deprecated functions
for Standard I/O specified in <XREF linkend="tbl-libc-stand-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libc-stand-depints">
<TITLE>libc - Standard I/O Deprecated Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>tempnam</primary></indexterm>tempnam(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific data interfaces
for Standard I/O specified in <XREF linkend="tbl-libc-stand-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-stand-data">
<TITLE>libc - Standard I/O Data Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>stderr</primary></indexterm>stderr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>stdin</primary></indexterm>stdin(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>stdout</primary></indexterm>stdout(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Signal Handling -->
<SECT2>
<!--libgroup-->
<TITLE>Signal Handling</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Signal Handling</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Signal Handling specified in <XREF linkend="tbl-libc-signa-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-signa-ints">
<TITLE>libc - Signal Handling Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__libc_current_sigrtmax</primary></indexterm>__libc_current_sigrtmax(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__libc_current_sigrtmin</primary></indexterm>__libc_current_sigrtmin(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__sigsetjmp</primary></indexterm>__sigsetjmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__sysv_signal</primary></indexterm>__sysv_signal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__xpg_sigpause</primary></indexterm>__xpg_sigpause(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>bsd_signal</primary></indexterm>bsd_signal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>psignal</primary></indexterm>psignal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>raise</primary></indexterm>raise(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sigaction</primary></indexterm>sigaction(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigaddset</primary></indexterm>sigaddset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigaltstack</primary></indexterm>sigaltstack(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigandset</primary></indexterm>sigandset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sigdelset</primary></indexterm>sigdelset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigemptyset</primary></indexterm>sigemptyset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigfillset</primary></indexterm>sigfillset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sighold</primary></indexterm>sighold(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sigignore</primary></indexterm>sigignore(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>siginterrupt</primary></indexterm>siginterrupt(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigisemptyset</primary></indexterm>sigisemptyset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigismember</primary></indexterm>sigismember(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>siglongjmp</primary></indexterm>siglongjmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>signal</primary></indexterm>signal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigorset</primary></indexterm>sigorset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigpause</primary></indexterm>sigpause(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sigpending</primary></indexterm>sigpending(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigprocmask</primary></indexterm>sigprocmask(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigqueue</primary></indexterm>sigqueue(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigrelse</primary></indexterm>sigrelse(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sigreturn</primary></indexterm>sigreturn(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigset</primary></indexterm>sigset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigsuspend</primary></indexterm>sigsuspend(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigtimedwait</primary></indexterm>sigtimedwait(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sigwait</primary></indexterm>sigwait(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sigwaitinfo</primary></indexterm>sigwaitinfo(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific deprecated functions
for Signal Handling specified in <XREF linkend="tbl-libc-signa-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libc-signa-depints">
<TITLE>libc - Signal Handling Deprecated Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>sigpause</primary></indexterm>sigpause(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific data interfaces
for Signal Handling specified in <XREF linkend="tbl-libc-signa-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-signa-data">
<TITLE>libc - Signal Handling Data Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_sys_siglist</primary></indexterm>_sys_siglist(GLIBC_2.3.3) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Localization Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Localization Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Localization Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Localization Functions specified in <XREF linkend="tbl-libc-local-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-local-ints">
<TITLE>libc - Localization Functions Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>bind_textdomain_codeset</primary></indexterm>bind_textdomain_codeset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>bindtextdomain</primary></indexterm>bindtextdomain(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>catclose</primary></indexterm>catclose(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>catgets</primary></indexterm>catgets(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>catopen</primary></indexterm>catopen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>dcgettext</primary></indexterm>dcgettext(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>dcngettext</primary></indexterm>dcngettext(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>dgettext</primary></indexterm>dgettext(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>dngettext</primary></indexterm>dngettext(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gettext</primary></indexterm>gettext(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>iconv</primary></indexterm>iconv(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>iconv_close</primary></indexterm>iconv_close(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>iconv_open</primary></indexterm>iconv_open(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>localeconv</primary></indexterm>localeconv(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ngettext</primary></indexterm>ngettext(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>nl_langinfo</primary></indexterm>nl_langinfo(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>setlocale</primary></indexterm>setlocale(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>textdomain</primary></indexterm>textdomain(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific data interfaces
for Localization Functions specified in <XREF linkend="tbl-libc-local-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-local-data">
<TITLE>libc - Localization Functions Data Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_nl_msg_cat_cntr</primary></indexterm>_nl_msg_cat_cntr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Posix Spawn Option -->
<SECT2>
<!--libgroup-->
<TITLE>Posix Spawn Option</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Posix Spawn Option</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Posix Spawn Option specified in <XREF linkend="tbl-libc-posix-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-posix-ints">
<TITLE>libc - Posix Spawn Option Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>posix_spawn</primary></indexterm>posix_spawn(GLIBC_2.15) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawn_file_actions_addclose</primary></indexterm>posix_spawn_file_actions_addclose(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawn_file_actions_adddup2</primary></indexterm>posix_spawn_file_actions_adddup2(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawn_file_actions_addopen</primary></indexterm>posix_spawn_file_actions_addopen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>posix_spawn_file_actions_destroy</primary></indexterm>posix_spawn_file_actions_destroy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawn_file_actions_init</primary></indexterm>posix_spawn_file_actions_init(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawnattr_destroy</primary></indexterm>posix_spawnattr_destroy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawnattr_getflags</primary></indexterm>posix_spawnattr_getflags(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>posix_spawnattr_getpgroup</primary></indexterm>posix_spawnattr_getpgroup(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawnattr_getschedparam</primary></indexterm>posix_spawnattr_getschedparam(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawnattr_getschedpolicy</primary></indexterm>posix_spawnattr_getschedpolicy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawnattr_getsigdefault</primary></indexterm>posix_spawnattr_getsigdefault(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>posix_spawnattr_getsigmask</primary></indexterm>posix_spawnattr_getsigmask(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawnattr_init</primary></indexterm>posix_spawnattr_init(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawnattr_setflags</primary></indexterm>posix_spawnattr_setflags(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawnattr_setpgroup</primary></indexterm>posix_spawnattr_setpgroup(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>posix_spawnattr_setschedparam</primary></indexterm>posix_spawnattr_setschedparam(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawnattr_setschedpolicy</primary></indexterm>posix_spawnattr_setschedpolicy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawnattr_setsigdefault</primary></indexterm>posix_spawnattr_setsigdefault(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_spawnattr_setsigmask</primary></indexterm>posix_spawnattr_setsigmask(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>posix_spawnp</primary></indexterm>posix_spawnp(GLIBC_2.15) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Posix Advisory Option -->
<SECT2>
<!--libgroup-->
<TITLE>Posix Advisory Option</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Posix Advisory Option</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Posix Advisory Option specified in <XREF linkend="tbl-libc-posiy-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-posiy-ints">
<TITLE>libc - Posix Advisory Option Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>posix_fadvise</primary></indexterm>posix_fadvise(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_fallocate</primary></indexterm>posix_fallocate(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_madvise</primary></indexterm>posix_madvise(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_memalign</primary></indexterm>posix_memalign(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Socket Interface -->
<SECT2>
<!--libgroup-->
<TITLE>Socket Interface</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Socket Interface</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Socket Interface specified in <XREF linkend="tbl-libc-socke-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-socke-ints">
<TITLE>libc - Socket Interface Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__h_errno_location</primary></indexterm>__h_errno_location(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>accept</primary></indexterm>accept(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>bind</primary></indexterm>bind(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>bindresvport</primary></indexterm>bindresvport(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>connect</primary></indexterm>connect(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostid</primary></indexterm>gethostid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostname</primary></indexterm>gethostname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpeername</primary></indexterm>getpeername(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getsockname</primary></indexterm>getsockname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getsockopt</primary></indexterm>getsockopt(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>if_freenameindex</primary></indexterm>if_freenameindex(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>if_indextoname</primary></indexterm>if_indextoname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>if_nameindex</primary></indexterm>if_nameindex(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>if_nametoindex</primary></indexterm>if_nametoindex(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>listen</primary></indexterm>listen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>recv</primary></indexterm>recv(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>recvfrom</primary></indexterm>recvfrom(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>recvmsg</primary></indexterm>recvmsg(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>send</primary></indexterm>send(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sendmsg</primary></indexterm>sendmsg(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>sendto</primary></indexterm>sendto(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setsockopt</primary></indexterm>setsockopt(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>shutdown</primary></indexterm>shutdown(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sockatmark</primary></indexterm>sockatmark(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>socket</primary></indexterm>socket(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>socketpair</primary></indexterm>socketpair(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific data interfaces
for Socket Interface specified in <XREF linkend="tbl-libc-socke-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-socke-data">
<TITLE>libc - Socket Interface Data Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>in6addr_any</primary></indexterm>in6addr_any(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>in6addr_loopback</primary></indexterm>in6addr_loopback(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Wide Characters -->
<SECT2>
<!--libgroup-->
<TITLE>Wide Characters</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Wide Characters</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Wide Characters specified in <XREF linkend="tbl-libc-wide-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-wide-ints">
<TITLE>libc - Wide Characters Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__wcstod_internal</primary></indexterm>__wcstod_internal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__wcstof_internal</primary></indexterm>__wcstof_internal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__wcstol_internal</primary></indexterm>__wcstol_internal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__wcstold_internal</primary></indexterm>__wcstold_internal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__wcstoul_internal</primary></indexterm>__wcstoul_internal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>btowc</primary></indexterm>btowc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgetwc</primary></indexterm>fgetwc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fgetws</primary></indexterm>fgetws(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fputwc</primary></indexterm>fputwc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fputws</primary></indexterm>fputws(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fwide</primary></indexterm>fwide(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fwprintf</primary></indexterm>fwprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fwscanf</primary></indexterm>fwscanf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getwc</primary></indexterm>getwc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getwchar</primary></indexterm>getwchar(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mblen</primary></indexterm>mblen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mbrlen</primary></indexterm>mbrlen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbrtowc</primary></indexterm>mbrtowc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbsinit</primary></indexterm>mbsinit(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbsnrtowcs</primary></indexterm>mbsnrtowcs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mbsrtowcs</primary></indexterm>mbsrtowcs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbstowcs</primary></indexterm>mbstowcs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mbtowc</primary></indexterm>mbtowc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>putwc</primary></indexterm>putwc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>putwchar</primary></indexterm>putwchar(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>swprintf</primary></indexterm>swprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>swscanf</primary></indexterm>swscanf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>towctrans</primary></indexterm>towctrans(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>towlower</primary></indexterm>towlower(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>towupper</primary></indexterm>towupper(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ungetwc</primary></indexterm>ungetwc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>vfwprintf</primary></indexterm>vfwprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>vfwscanf</primary></indexterm>vfwscanf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>vswprintf</primary></indexterm>vswprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>vswscanf</primary></indexterm>vswscanf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>vwprintf</primary></indexterm>vwprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>vwscanf</primary></indexterm>vwscanf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcpcpy</primary></indexterm>wcpcpy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcpncpy</primary></indexterm>wcpncpy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcrtomb</primary></indexterm>wcrtomb(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wcscasecmp</primary></indexterm>wcscasecmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscat</primary></indexterm>wcscat(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcschr</primary></indexterm>wcschr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscmp</primary></indexterm>wcscmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wcscoll</primary></indexterm>wcscoll(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscpy</primary></indexterm>wcscpy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcscspn</primary></indexterm>wcscspn(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsdup</primary></indexterm>wcsdup(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wcsftime</primary></indexterm>wcsftime(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcslen</primary></indexterm>wcslen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsncasecmp</primary></indexterm>wcsncasecmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsncat</primary></indexterm>wcsncat(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wcsncmp</primary></indexterm>wcsncmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsncpy</primary></indexterm>wcsncpy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsnlen</primary></indexterm>wcsnlen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsnrtombs</primary></indexterm>wcsnrtombs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wcspbrk</primary></indexterm>wcspbrk(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsrchr</primary></indexterm>wcsrchr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsrtombs</primary></indexterm>wcsrtombs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcsspn</primary></indexterm>wcsspn(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wcsstr</primary></indexterm>wcsstr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstod</primary></indexterm>wcstod(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstof</primary></indexterm>wcstof(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoimax</primary></indexterm>wcstoimax(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wcstok</primary></indexterm>wcstok(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstol</primary></indexterm>wcstol(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstold</primary></indexterm>wcstold(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoll</primary></indexterm>wcstoll(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wcstombs</primary></indexterm>wcstombs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoq</primary></indexterm>wcstoq(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoul</primary></indexterm>wcstoul(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstoull</primary></indexterm>wcstoull(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wcstoumax</primary></indexterm>wcstoumax(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcstouq</primary></indexterm>wcstouq(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcswcs</primary></indexterm>wcswcs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcswidth</primary></indexterm>wcswidth(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wcsxfrm</primary></indexterm>wcsxfrm(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wctob</primary></indexterm>wctob(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wctomb</primary></indexterm>wctomb(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wctrans</primary></indexterm>wctrans(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wctype</primary></indexterm>wctype(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wcwidth</primary></indexterm>wcwidth(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemchr</primary></indexterm>wmemchr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemcmp</primary></indexterm>wmemcmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wmemcpy</primary></indexterm>wmemcpy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemmove</primary></indexterm>wmemmove(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wmemset</primary></indexterm>wmemset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wprintf</primary></indexterm>wprintf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>wscanf</primary></indexterm>wscanf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name String Functions -->
<SECT2>
<!--libgroup-->
<TITLE>String Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for String Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for String Functions specified in <XREF linkend="tbl-libc-strin-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-strin-ints">
<TITLE>libc - String Functions Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__mempcpy</primary></indexterm>__mempcpy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__rawmemchr</primary></indexterm>__rawmemchr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__stpcpy</primary></indexterm>__stpcpy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__strdup</primary></indexterm>__strdup(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtod_internal</primary></indexterm>__strtod_internal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__strtof_internal</primary></indexterm>__strtof_internal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__strtok_r</primary></indexterm>__strtok_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__strtol_internal</primary></indexterm>__strtol_internal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__strtold_internal</primary></indexterm>__strtold_internal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__strtoll_internal</primary></indexterm>__strtoll_internal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__strtoul_internal</primary></indexterm>__strtoul_internal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__strtoull_internal</primary></indexterm>__strtoull_internal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__xpg_strerror_r</primary></indexterm>__xpg_strerror_r(GLIBC_2.3.4) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>bcmp</primary></indexterm>bcmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>bcopy</primary></indexterm>bcopy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>bzero</primary></indexterm>bzero(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ffs</primary></indexterm>ffs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>index</primary></indexterm>index(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>memccpy</primary></indexterm>memccpy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>memchr</primary></indexterm>memchr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>memcmp</primary></indexterm>memcmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>memcpy</primary></indexterm>memcpy(GLIBC_2.14) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>memmove</primary></indexterm>memmove(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>memrchr</primary></indexterm>memrchr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>memset</primary></indexterm>memset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>rindex</primary></indexterm>rindex(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>stpcpy</primary></indexterm>stpcpy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>stpncpy</primary></indexterm>stpncpy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>strcasecmp</primary></indexterm>strcasecmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcasestr</primary></indexterm>strcasestr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcat</primary></indexterm>strcat(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strchr</primary></indexterm>strchr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>strcmp</primary></indexterm>strcmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcoll</primary></indexterm>strcoll(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcpy</primary></indexterm>strcpy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strcspn</primary></indexterm>strcspn(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>strdup</primary></indexterm>strdup(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strerror</primary></indexterm>strerror(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strerror_r</primary></indexterm>strerror_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>strfmon</primary></indexterm>strfmon(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>strftime</primary></indexterm>strftime(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strlen</primary></indexterm>strlen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strncasecmp</primary></indexterm>strncasecmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strncat</primary></indexterm>strncat(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>strncmp</primary></indexterm>strncmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strncpy</primary></indexterm>strncpy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strndup</primary></indexterm>strndup(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strnlen</primary></indexterm>strnlen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>strpbrk</primary></indexterm>strpbrk(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strptime</primary></indexterm>strptime(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>strrchr</primary></indexterm>strrchr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strsep</primary></indexterm>strsep(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>strsignal</primary></indexterm>strsignal(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strspn</primary></indexterm>strspn(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strstr</primary></indexterm>strstr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtof</primary></indexterm>strtof(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>strtoimax</primary></indexterm>strtoimax(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtok</primary></indexterm>strtok(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtok_r</primary></indexterm>strtok_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtold</primary></indexterm>strtold(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>strtoll</primary></indexterm>strtoll(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoq</primary></indexterm>strtoq(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoull</primary></indexterm>strtoull(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtoumax</primary></indexterm>strtoumax(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>strtouq</primary></indexterm>strtouq(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>strxfrm</primary></indexterm>strxfrm(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>swab</primary></indexterm>swab(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific deprecated functions
for String Functions specified in <XREF linkend="tbl-libc-strin-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libc-strin-depints">
<TITLE>libc - String Functions Deprecated Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>strerror_r</primary></indexterm>strerror_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name IPC Functions -->
<SECT2>
<!--libgroup-->
<TITLE>IPC Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for IPC Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for IPC Functions specified in <XREF linkend="tbl-libc-ipc-f-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-ipc-f-ints">
<TITLE>libc - IPC Functions Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>ftok</primary></indexterm>ftok(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>msgctl</primary></indexterm>msgctl(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>msgget</primary></indexterm>msgget(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>msgrcv</primary></indexterm>msgrcv(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>msgsnd</primary></indexterm>msgsnd(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>semctl</primary></indexterm>semctl(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>semget</primary></indexterm>semget(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>semop</primary></indexterm>semop(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>shmat</primary></indexterm>shmat(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>shmctl</primary></indexterm>shmctl(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>shmdt</primary></indexterm>shmdt(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>shmget</primary></indexterm>shmget(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Regular Expressions -->
<SECT2>
<!--libgroup-->
<TITLE>Regular Expressions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Regular Expressions</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Regular Expressions specified in <XREF linkend="tbl-libc-regul-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-regul-ints">
<TITLE>libc - Regular Expressions Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>regcomp</primary></indexterm>regcomp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>regerror</primary></indexterm>regerror(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>regexec</primary></indexterm>regexec(GLIBC_2.3.4) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>regfree</primary></indexterm>regfree(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Character Type Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Character Type Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Character Type Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Character Type Functions specified in <XREF linkend="tbl-libc-chara-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-chara-ints">
<TITLE>libc - Character Type Functions Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__ctype_get_mb_cur_max</primary></indexterm>__ctype_get_mb_cur_max(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_tolower</primary></indexterm>_tolower(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>_toupper</primary></indexterm>_toupper(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>isalnum</primary></indexterm>isalnum(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>isalpha</primary></indexterm>isalpha(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>isascii</primary></indexterm>isascii(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>iscntrl</primary></indexterm>iscntrl(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>isdigit</primary></indexterm>isdigit(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>isgraph</primary></indexterm>isgraph(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>islower</primary></indexterm>islower(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>isprint</primary></indexterm>isprint(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ispunct</primary></indexterm>ispunct(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>isspace</primary></indexterm>isspace(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>isupper</primary></indexterm>isupper(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswalnum</primary></indexterm>iswalnum(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswalpha</primary></indexterm>iswalpha(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>iswblank</primary></indexterm>iswblank(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswcntrl</primary></indexterm>iswcntrl(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswctype</primary></indexterm>iswctype(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswdigit</primary></indexterm>iswdigit(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>iswgraph</primary></indexterm>iswgraph(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswlower</primary></indexterm>iswlower(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswprint</primary></indexterm>iswprint(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswpunct</primary></indexterm>iswpunct(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>iswspace</primary></indexterm>iswspace(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswupper</primary></indexterm>iswupper(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>iswxdigit</primary></indexterm>iswxdigit(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>isxdigit</primary></indexterm>isxdigit(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>toascii</primary></indexterm>toascii(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>tolower</primary></indexterm>tolower(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>toupper</primary></indexterm>toupper(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Time Manipulation -->
<SECT2>
<!--libgroup-->
<TITLE>Time Manipulation</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Time Manipulation</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Time Manipulation specified in <XREF linkend="tbl-libc-time-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-time-ints">
<TITLE>libc - Time Manipulation Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>adjtime</primary></indexterm>adjtime(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>asctime</primary></indexterm>asctime(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>asctime_r</primary></indexterm>asctime_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ctime</primary></indexterm>ctime(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctime_r</primary></indexterm>ctime_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>difftime</primary></indexterm>difftime(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>gmtime</primary></indexterm>gmtime(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>gmtime_r</primary></indexterm>gmtime_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>localtime</primary></indexterm>localtime(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>localtime_r</primary></indexterm>localtime_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mktime</primary></indexterm>mktime(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>tzset</primary></indexterm>tzset(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ualarm</primary></indexterm>ualarm(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific data interfaces
for Time Manipulation specified in <XREF linkend="tbl-libc-time-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-time-data">
<TITLE>libc - Time Manipulation Data Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__daylight</primary></indexterm>__daylight(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__timezone</primary></indexterm>__timezone(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__tzname</primary></indexterm>__tzname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>daylight</primary></indexterm>daylight(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>timezone</primary></indexterm>timezone(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>tzname</primary></indexterm>tzname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Terminal Interface Functions -->
<SECT2>
<!--libgroup-->
<TITLE>Terminal Interface Functions</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Terminal Interface Functions</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Terminal Interface Functions specified in <XREF linkend="tbl-libc-termi-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-termi-ints">
<TITLE>libc - Terminal Interface Functions Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>cfgetispeed</primary></indexterm>cfgetispeed(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>cfgetospeed</primary></indexterm>cfgetospeed(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>cfmakeraw</primary></indexterm>cfmakeraw(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>cfsetispeed</primary></indexterm>cfsetispeed(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cfsetospeed</primary></indexterm>cfsetospeed(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>cfsetspeed</primary></indexterm>cfsetspeed(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcdrain</primary></indexterm>tcdrain(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcflow</primary></indexterm>tcflow(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>tcflush</primary></indexterm>tcflush(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcgetattr</primary></indexterm>tcgetattr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcgetpgrp</primary></indexterm>tcgetpgrp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcgetsid</primary></indexterm>tcgetsid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>tcsendbreak</primary></indexterm>tcsendbreak(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcsetattr</primary></indexterm>tcsetattr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>tcsetpgrp</primary></indexterm>tcsetpgrp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name System Database Interface -->
<SECT2>
<!--libgroup-->
<TITLE>System Database Interface</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for System Database Interface</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for System Database Interface specified in <XREF linkend="tbl-libc-systf-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-systf-ints">
<TITLE>libc - System Database Interface Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>endgrent</primary></indexterm>endgrent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>endprotoent</primary></indexterm>endprotoent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>endpwent</primary></indexterm>endpwent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>endservent</primary></indexterm>endservent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>endutent</primary></indexterm>endutent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>endutxent</primary></indexterm>endutxent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgrent</primary></indexterm>getgrent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgrent_r</primary></indexterm>getgrent_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getgrgid</primary></indexterm>getgrgid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgrgid_r</primary></indexterm>getgrgid_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgrnam</primary></indexterm>getgrnam(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getgrnam_r</primary></indexterm>getgrnam_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getgrouplist</primary></indexterm>getgrouplist(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyaddr</primary></indexterm>gethostbyaddr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyaddr_r</primary></indexterm>gethostbyaddr_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyname</primary></indexterm>gethostbyname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gethostbyname2</primary></indexterm>gethostbyname2(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyname2_r</primary></indexterm>gethostbyname2_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyname_r</primary></indexterm>gethostbyname_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getprotobyname</primary></indexterm>getprotobyname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getprotobyname_r</primary></indexterm>getprotobyname_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getprotobynumber</primary></indexterm>getprotobynumber(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getprotobynumber_r</primary></indexterm>getprotobynumber_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getprotoent</primary></indexterm>getprotoent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getprotoent_r</primary></indexterm>getprotoent_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwent</primary></indexterm>getpwent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwent_r</primary></indexterm>getpwent_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwnam</primary></indexterm>getpwnam(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getpwnam_r</primary></indexterm>getpwnam_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwuid</primary></indexterm>getpwuid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getpwuid_r</primary></indexterm>getpwuid_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getservbyname</primary></indexterm>getservbyname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getservbyname_r</primary></indexterm>getservbyname_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getservbyport</primary></indexterm>getservbyport(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getservbyport_r</primary></indexterm>getservbyport_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getservent</primary></indexterm>getservent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getservent_r</primary></indexterm>getservent_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutent</primary></indexterm>getutent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutent_r</primary></indexterm>getutent_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutxent</primary></indexterm>getutxent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getutxid</primary></indexterm>getutxid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getutxline</primary></indexterm>getutxline(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>pututxline</primary></indexterm>pututxline(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setgrent</primary></indexterm>setgrent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>setgroups</primary></indexterm>setgroups(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>setprotoent</primary></indexterm>setprotoent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setpwent</primary></indexterm>setpwent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setservent</primary></indexterm>setservent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>setutent</primary></indexterm>setutent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>setutxent</primary></indexterm>setutxent(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>utmpname</primary></indexterm>utmpname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific deprecated functions
for System Database Interface specified in <XREF linkend="tbl-libc-systf-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libc-systf-depints">
<TITLE>libc - System Database Interface Deprecated Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gethostbyaddr</primary></indexterm>gethostbyaddr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyaddr_r</primary></indexterm>gethostbyaddr_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyname</primary></indexterm>gethostbyname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyname2</primary></indexterm>gethostbyname2(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gethostbyname2_r</primary></indexterm>gethostbyname2_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gethostbyname_r</primary></indexterm>gethostbyname_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Language Support -->
<SECT2>
<!--libgroup-->
<TITLE>Language Support</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Language Support</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Language Support specified in <XREF linkend="tbl-libc-langu-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-langu-ints">
<TITLE>libc - Language Support Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__libc_start_main</primary></indexterm>__libc_start_main(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Large File Support -->
<SECT2>
<!--libgroup-->
<TITLE>Large File Support</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Large File Support</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Large File Support specified in <XREF linkend="tbl-libc-large-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-large-ints">
<TITLE>libc - Large File Support Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__fxstat64</primary></indexterm>__fxstat64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__lxstat64</primary></indexterm>__lxstat64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__xstat64</primary></indexterm>__xstat64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>creat64</primary></indexterm>creat64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fgetpos64</primary></indexterm>fgetpos64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>fopen64</primary></indexterm>fopen64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>freopen64</primary></indexterm>freopen64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>fseeko64</primary></indexterm>fseeko64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fsetpos64</primary></indexterm>fsetpos64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>fstatfs64</primary></indexterm>fstatfs64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>fstatvfs64</primary></indexterm>fstatvfs64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftello64</primary></indexterm>ftello64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ftruncate64</primary></indexterm>ftruncate64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftw64</primary></indexterm>ftw64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>getrlimit64</primary></indexterm>getrlimit64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>lockf64</primary></indexterm>lockf64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>lseek64</primary></indexterm>lseek64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>mkstemp64</primary></indexterm>mkstemp64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>mmap64</primary></indexterm>mmap64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>nftw64</primary></indexterm>nftw64(GLIBC_2.3.3) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>open64</primary></indexterm>open64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_fadvise64</primary></indexterm>posix_fadvise64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>posix_fallocate64</primary></indexterm>posix_fallocate64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>pread64</primary></indexterm>pread64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>pwrite64</primary></indexterm>pwrite64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>readdir64</primary></indexterm>readdir64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>readdir64_r</primary></indexterm>readdir64_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>statfs64</primary></indexterm>statfs64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>statvfs64</primary></indexterm>statvfs64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>tmpfile64</primary></indexterm>tmpfile64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY><indexterm><primary>truncate64</primary></indexterm>truncate64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.1">[LFS]</LINK></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific deprecated functions
for Large File Support specified in <XREF linkend="tbl-libc-large-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libc-large-depints">
<TITLE>libc - Large File Support Deprecated Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>fstatfs64</primary></indexterm>fstatfs64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>statfs64</primary></indexterm>statfs64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name Inotify -->
<SECT2>
<!--libgroup-->
<TITLE>Inotify</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Inotify</TITLE>
<PARA>
No external functions are defined for libc - Inotify
in this part of the specification. See also the generic specification.
</PARA>
</SECT3>
</SECT2>
<!-- debug: database interface name Standard Library -->
<SECT2>
<!--libgroup-->
<TITLE>Standard Library</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for Standard Library</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for Standard Library specified in <XREF linkend="tbl-libc-stane-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-stane-ints">
<TITLE>libc - Standard Library Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>_Exit</primary></indexterm>_Exit(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>__assert_fail</primary></indexterm>__assert_fail(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__cxa_atexit</primary></indexterm>__cxa_atexit(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__cxa_finalize</primary></indexterm>__cxa_finalize(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__errno_location</primary></indexterm>__errno_location(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__fpending</primary></indexterm>__fpending(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__getpagesize</primary></indexterm>__getpagesize(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__isinf</primary></indexterm>__isinf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isinff</primary></indexterm>__isinff(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__isinfl</primary></indexterm>__isinfl(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__isnan</primary></indexterm>__isnan(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__isnanf</primary></indexterm>__isnanf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>__isnanl</primary></indexterm>__isnanl(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__sysconf</primary></indexterm>__sysconf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>__xpg_basename</primary></indexterm>__xpg_basename(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_exit</primary></indexterm>_exit(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>_longjmp</primary></indexterm>_longjmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>_setjmp</primary></indexterm>_setjmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>a64l</primary></indexterm>a64l(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>abort</primary></indexterm>abort(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>abs</primary></indexterm>abs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>alphasort</primary></indexterm>alphasort(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>alphasort64</primary></indexterm>alphasort64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>argz_add</primary></indexterm>argz_add(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>argz_add_sep</primary></indexterm>argz_add_sep(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>argz_append</primary></indexterm>argz_append(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>argz_count</primary></indexterm>argz_count(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>argz_create</primary></indexterm>argz_create(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>argz_create_sep</primary></indexterm>argz_create_sep(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>argz_delete</primary></indexterm>argz_delete(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>argz_extract</primary></indexterm>argz_extract(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>argz_insert</primary></indexterm>argz_insert(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>argz_next</primary></indexterm>argz_next(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>argz_replace</primary></indexterm>argz_replace(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>argz_stringify</primary></indexterm>argz_stringify(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>atof</primary></indexterm>atof(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>atoi</primary></indexterm>atoi(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>atol</primary></indexterm>atol(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>atoll</primary></indexterm>atoll(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>basename</primary></indexterm>basename(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bsearch</primary></indexterm>bsearch(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>calloc</primary></indexterm>calloc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>closelog</primary></indexterm>closelog(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>confstr</primary></indexterm>confstr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>cuserid</primary></indexterm>cuserid(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.4">[SUSv2]</LINK></ENTRY>
<ENTRY><indexterm><primary>daemon</primary></indexterm>daemon(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>dirfd</primary></indexterm>dirfd(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>dirname</primary></indexterm>dirname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>div</primary></indexterm>div(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>dl_iterate_phdr</primary></indexterm>dl_iterate_phdr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>drand48</primary></indexterm>drand48(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>drand48_r</primary></indexterm>drand48_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ecvt</primary></indexterm>ecvt(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>envz_add</primary></indexterm>envz_add(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>envz_entry</primary></indexterm>envz_entry(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>envz_get</primary></indexterm>envz_get(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>envz_merge</primary></indexterm>envz_merge(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>envz_remove</primary></indexterm>envz_remove(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>envz_strip</primary></indexterm>envz_strip(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>erand48</primary></indexterm>erand48(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>erand48_r</primary></indexterm>erand48_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>err</primary></indexterm>err(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>error</primary></indexterm>error(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>errx</primary></indexterm>errx(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fcvt</primary></indexterm>fcvt(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmemopen</primary></indexterm>fmemopen(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fmtmsg</primary></indexterm>fmtmsg(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>fnmatch</primary></indexterm>fnmatch(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>fpathconf</primary></indexterm>fpathconf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>free</primary></indexterm>free(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>freeaddrinfo</primary></indexterm>freeaddrinfo(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ftrylockfile</primary></indexterm>ftrylockfile(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ftw</primary></indexterm>ftw(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>funlockfile</primary></indexterm>funlockfile(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>gai_strerror</primary></indexterm>gai_strerror(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>gcvt</primary></indexterm>gcvt(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getaddrinfo</primary></indexterm>getaddrinfo(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getcwd</primary></indexterm>getcwd(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getdate</primary></indexterm>getdate(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getdomainname</primary></indexterm>getdomainname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getenv</primary></indexterm>getenv(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getlogin</primary></indexterm>getlogin(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getlogin_r</primary></indexterm>getlogin_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>getnameinfo</primary></indexterm>getnameinfo(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getopt</primary></indexterm>getopt(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getopt_long</primary></indexterm>getopt_long(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getopt_long_only</primary></indexterm>getopt_long_only(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getsubopt</primary></indexterm>getsubopt(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>gettimeofday</primary></indexterm>gettimeofday(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>glob</primary></indexterm>glob(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>glob64</primary></indexterm>glob64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>globfree</primary></indexterm>globfree(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>globfree64</primary></indexterm>globfree64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>grantpt</primary></indexterm>grantpt(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>hcreate</primary></indexterm>hcreate(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>hcreate_r</primary></indexterm>hcreate_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>hdestroy</primary></indexterm>hdestroy(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>hdestroy_r</primary></indexterm>hdestroy_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>hsearch</primary></indexterm>hsearch(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>hsearch_r</primary></indexterm>hsearch_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>htonl</primary></indexterm>htonl(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>htons</primary></indexterm>htons(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>imaxabs</primary></indexterm>imaxabs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>imaxdiv</primary></indexterm>imaxdiv(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>inet_addr</primary></indexterm>inet_addr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>inet_aton</primary></indexterm>inet_aton(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>inet_ntoa</primary></indexterm>inet_ntoa(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>inet_ntop</primary></indexterm>inet_ntop(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>inet_pton</primary></indexterm>inet_pton(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>initstate</primary></indexterm>initstate(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>initstate_r</primary></indexterm>initstate_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>insque</primary></indexterm>insque(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>isatty</primary></indexterm>isatty(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>isblank</primary></indexterm>isblank(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>jrand48</primary></indexterm>jrand48(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>jrand48_r</primary></indexterm>jrand48_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>l64a</primary></indexterm>l64a(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>labs</primary></indexterm>labs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>lcong48</primary></indexterm>lcong48(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>lcong48_r</primary></indexterm>lcong48_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ldiv</primary></indexterm>ldiv(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>lfind</primary></indexterm>lfind(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>llabs</primary></indexterm>llabs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>lldiv</primary></indexterm>lldiv(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>longjmp</primary></indexterm>longjmp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>lrand48</primary></indexterm>lrand48(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>lrand48_r</primary></indexterm>lrand48_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>lsearch</primary></indexterm>lsearch(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>makecontext</primary></indexterm>makecontext(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>malloc</primary></indexterm>malloc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>memmem</primary></indexterm>memmem(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>mkdtemp</primary></indexterm>mkdtemp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>mkstemp</primary></indexterm>mkstemp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mktemp</primary></indexterm>mktemp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>mrand48</primary></indexterm>mrand48(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>mrand48_r</primary></indexterm>mrand48_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>nftw</primary></indexterm>nftw(GLIBC_2.3.3) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>nrand48</primary></indexterm>nrand48(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>nrand48_r</primary></indexterm>nrand48_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>ntohl</primary></indexterm>ntohl(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ntohs</primary></indexterm>ntohs(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>open_memstream</primary></indexterm>open_memstream(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>openlog</primary></indexterm>openlog(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>perror</primary></indexterm>perror(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>posix_openpt</primary></indexterm>posix_openpt(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ptsname</primary></indexterm>ptsname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>putenv</primary></indexterm>putenv(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>qsort</primary></indexterm>qsort(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>rand</primary></indexterm>rand(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>rand_r</primary></indexterm>rand_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>random</primary></indexterm>random(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>random_r</primary></indexterm>random_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>realloc</primary></indexterm>realloc(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>realpath</primary></indexterm>realpath(GLIBC_2.3) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>remque</primary></indexterm>remque(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>scandir</primary></indexterm>scandir(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>scandir64</primary></indexterm>scandir64(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>seed48</primary></indexterm>seed48(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>seed48_r</primary></indexterm>seed48_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>sendfile</primary></indexterm>sendfile(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>setenv</primary></indexterm>setenv(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>sethostname</primary></indexterm>sethostname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>setlogmask</primary></indexterm>setlogmask(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>setstate</primary></indexterm>setstate(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>setstate_r</primary></indexterm>setstate_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>srand</primary></indexterm>srand(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>srand48</primary></indexterm>srand48(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>srand48_r</primary></indexterm>srand48_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>srandom</primary></indexterm>srandom(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>srandom_r</primary></indexterm>srandom_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtod</primary></indexterm>strtod(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>strtol</primary></indexterm>strtol(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>strtoul</primary></indexterm>strtoul(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>swapcontext</primary></indexterm>swapcontext(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>syslog</primary></indexterm>syslog(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>system</primary></indexterm>system(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>tdelete</primary></indexterm>tdelete(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>tfind</primary></indexterm>tfind(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>tmpfile</primary></indexterm>tmpfile(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>tmpnam</primary></indexterm>tmpnam(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>tsearch</primary></indexterm>tsearch(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ttyname</primary></indexterm>ttyname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>ttyname_r</primary></indexterm>ttyname_r(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>twalk</primary></indexterm>twalk(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>unlockpt</primary></indexterm>unlockpt(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>unsetenv</primary></indexterm>unsetenv(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>usleep</primary></indexterm>usleep(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.5">[SUSv3]</LINK></ENTRY>
<ENTRY><indexterm><primary>verrx</primary></indexterm>verrx(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>vfscanf</primary></indexterm>vfscanf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>vscanf</primary></indexterm>vscanf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>vsscanf</primary></indexterm>vsscanf(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>vsyslog</primary></indexterm>vsyslog(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>warn</primary></indexterm>warn(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>warnx</primary></indexterm>warnx(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>wordexp</primary></indexterm>wordexp(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>wordfree</primary></indexterm>wordfree(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific deprecated functions
for Standard Library specified in <XREF linkend="tbl-libc-stane-depints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<NOTE><PARA>These interfaces are deprecated, and applications
should avoid using them.
These interfaces may be withdrawn
in future releases of this specification.
</PARA></NOTE>
<!--libgroupdepints-->
<TABLE id="tbl-libc-stane-depints">
<TITLE>libc - Standard Library Deprecated Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>basename</primary></indexterm>basename(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>getdomainname</primary></indexterm>getdomainname(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>inet_aton</primary></indexterm>inet_aton(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>tmpnam</primary></indexterm>tmpnam(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific data interfaces
for Standard Library specified in <XREF linkend="tbl-libc-stane-data">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupdata-->
<TABLE id="tbl-libc-stane-data">
<TITLE>libc - Standard Library Data Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>__environ</primary></indexterm>__environ(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_environ</primary></indexterm>_environ(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>_sys_errlist</primary></indexterm>_sys_errlist(GLIBC_2.12) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>environ</primary></indexterm>environ(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>getdate_err</primary></indexterm>getdate_err(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>optarg</primary></indexterm>optarg(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>opterr</primary></indexterm>opterr(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY><indexterm><primary>optind</primary></indexterm>optind(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>optopt</primary></indexterm>optopt(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.6">[SUSv4]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
<!-- debug: database interface name GNU Extensions for libc -->
<SECT2>
<!--libgroup-->
<TITLE>GNU Extensions for libc</TITLE>
<PARA>
</PARA>


<SECT3>
<TITLE>Interfaces for GNU Extensions for libc</TITLE>
<PARA>
An LSB conforming implementation shall provide the architecture specific functions
for GNU Extensions for libc specified in <XREF linkend="tbl-libc-gnu-e-ints">,
with the full mandatory functionality as described in the referenced
underlying specification.
</PARA>
<!--libgroupints-->
<TABLE id="tbl-libc-gnu-e-ints">
<TITLE>libc - GNU Extensions for libc Function Interfaces</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>gnu_get_libc_release</primary></indexterm>gnu_get_libc_release(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY><indexterm><primary>gnu_get_libc_version</primary></indexterm>gnu_get_libc_version(GLIBC_2.2.5) <LINK LINKEND="REFSTD.libc.2">[LSB]</LINK></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libc-ddefs>
<TITLE>Data Definitions for libc</TITLE>
<PARA>
This section defines global identifiers and their values that are associated
with interfaces contained in libc.
These definitions are organized into groups that
correspond to system headers. This convention is used as a
convenience for the reader, and does not imply the existence
of these headers, or their content.
Where an interface is defined as requiring a particular system header file
all of the data definitions for that system header file presented here shall be in effect.
</PARA>
<PARA>
This section gives data definitions to promote binary application
portability, not to repeat source interface definitions available
elsewhere. System providers and application developers should use this ABI
to supplement - not to replace - source interface definition specifications.
</PARA>
<PARA>
This specification uses the <XREF LINKEND='std.ISOC99'> C Language as the reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>argz.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<!-- empty header file x86-64/arpa/inet.h -->
<SECT2>
<TITLE>assert.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>cpio.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ctype.h</TITLE>
<PARA>
</PARA>
<SCREEN>

enum {
    _ISupper = 256,
    _ISlower = 512,
    _ISalpha = 1024,
    _ISdigit = 2048,
    _ISxdigit = 4096,
    _ISspace = 8192,
    _ISprint = 16384,
    _ISgraph = 32768,
    _ISblank = 1,
    _IScntrl = 2,
    _ISpunct = 4,
    _ISalnum = 8
};
</SCREEN>
</SECT2>
<SECT2>
<TITLE>dirent.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>elf.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>endian.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define __BYTE_ORDER	__LITTLE_ENDIAN
</SCREEN>
</SECT2>
<!-- empty header file x86-64/envz.h -->
<!-- empty header file x86-64/err.h -->
<SECT2>
<TITLE>errno.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define EDEADLOCK	EDEADLK
</SCREEN>
</SECT2>
<!-- empty header file x86-64/error.h -->
<!-- empty header file x86-64/execinfo.h -->
<SECT2>
<TITLE>fcntl.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define O_LARGEFILE	0
#define O_DIRECTORY	0200000
#define O_NOFOLLOW	0400000
#define POSIX_FADV_DONTNEED	4
#define POSIX_FADV_NOREUSE	5

#define F_GETLK64	5
#define F_SETLK64	6
#define F_SETLKW64	7
</SCREEN>
</SECT2>
<SECT2>
<TITLE>fmtmsg.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>fnmatch.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ftw.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>getopt.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glob.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<!-- empty header file x86-64/gnu/libc-version.h -->
<!-- empty header file x86-64/grp.h -->
<SECT2>
<TITLE>iconv.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ifaddrs.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>inttypes.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define __PRI64_PREFIX	"l"
#define __PRIPTR_PREFIX	"l"

typedef ldiv_t imaxdiv_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>langinfo.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<!-- empty header file x86-64/libgen.h -->
<!-- empty header file x86-64/libintl.h -->
<SECT2>
<TITLE>limits.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define LONG_MAX	0x7FFFFFFFFFFFFFFFL
#define ULONG_MAX	0xFFFFFFFFFFFFFFFFUL
#define LONG_BIT	64

#define CHAR_MAX	127
#define CHAR_MIN	SCHAR_MIN

#define PTHREAD_STACK_MIN	16384
</SCREEN>
</SECT2>
<SECT2>
<TITLE>link.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct dl_phdr_info {
    Elf64_Addr dlpi_addr;
    const char *dlpi_name;
    const Elf64_Phdr *dlpi_phdr;
    Elf64_Half dlpi_phnum;
    unsigned long long int dlpi_adds;
    unsigned long long int dlpi_subs;
    size_t dlpi_tls_modid;
    void *dlpi_tls_data;
};
</SCREEN>
</SECT2>
<SECT2>
<TITLE>locale.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>lsb/time.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>lsb/types.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef int64_t ssize_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>lsb/wchar.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<!-- empty header file x86-64/malloc.h -->
<!-- empty header file x86-64/monetary.h -->
<SECT2>
<TITLE>net/if.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netdb.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/icmp6.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ND_NA_FLAG_OVERRIDE	0x00000020
#define ND_NA_FLAG_SOLICITED	0x00000040
#define ND_NA_FLAG_ROUTER	0x00000080
#define ICMP6_RR_RESULT_FLAGS_FORBIDDEN	0x0010
#define ICMP6_RR_RESULT_FLAGS_OOB	0x0020
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/igmp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/in.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/in_systm.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/ip.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct timestamp {
    u_int8_t len;
    u_int8_t ptr;
    unsigned int flags:4;
    unsigned int overflow:4;
    u_int32_t data[9];
};
struct iphdr {
    unsigned int ihl:4;
    unsigned int version:4;
    u_int8_t tos;
    u_int16_t tot_len;
    u_int16_t id;
    u_int16_t frag_off;
    u_int8_t ttl;
    u_int8_t protocol;
    u_int16_t check;
    u_int32_t saddr;
    u_int32_t daddr;
};
struct ip {
    unsigned int ip_hl:4;
    unsigned int ip_v:4;
    u_int8_t ip_tos;
    u_short ip_len;
    u_short ip_id;
    u_short ip_off;
    u_int8_t ip_ttl;
    u_int8_t ip_p;
    u_short ip_sum;
    struct in_addr ip_src;
    struct in_addr ip_dst;
};
struct ip_timestamp {
    u_int8_t ipt_code;
    u_int8_t ipt_len;
    u_int8_t ipt_ptr;
    unsigned int ipt_flg:4;
    unsigned int ipt_oflw:4;
    u_int32_t data[9];
};
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/ip6.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define IP6_ALERT_MLD	0x0000
#define IP6F_MORE_FRAG	0x0100
#define IP6_ALERT_RSVP	0x0100
#define IP6_ALERT_AN	0x0200
#define IP6F_RESERVED_MASK	0x0600
#define IP6F_OFF_MASK	0xf8ff
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/ip_icmp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/tcp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct tcphdr {
    uint16_t source;
    uint16_t dest;
    uint32_t seq;
    uint32_t ack_seq;
    uint16_t res1:4;
    uint16_t doff:4;
    uint16_t fin:1;
    uint16_t syn:1;
    uint16_t rst:1;
    uint16_t psh:1;
    uint16_t ack:1;
    uint16_t urg:1;
    uint16_t res2:2;
    uint16_t window;
    uint16_t check;
    uint16_t urg_ptr;
};
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/udp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>nl_types.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<!-- empty header file x86-64/poll.h -->
<SECT2>
<TITLE>pwd.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>regex.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<!-- empty header file x86-64/regexp.h -->
<SECT2>
<TITLE>rpc/auth.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<!-- empty header file x86-64/rpc/auth_des.h -->
<!-- empty header file x86-64/rpc/auth_unix.h -->
<SECT2>
<TITLE>rpc/clnt.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<!-- empty header file x86-64/rpc/pmap_clnt.h -->
<!-- empty header file x86-64/rpc/rpc.h -->
<SECT2>
<TITLE>rpc/rpc_msg.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>rpc/svc.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>rpc/types.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>rpc/xdr.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sched.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>search.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>setjmp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef long int __jmp_buf[8];
</SCREEN>
</SECT2>
<SECT2>
<TITLE>signal.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SIGEV_PAD_SIZE	((SIGEV_MAX_SIZE/sizeof(int))-4)

#define SI_PAD_SIZE	((SI_MAX_SIZE/sizeof(int))-4)

struct sigaction {
    union {
	sighandler_t _sa_handler;
	void (*_sa_sigaction) (int, siginfo_t *, void *);
    } __sigaction_handler;
    sigset_t sa_mask;
    int sa_flags;
    void (*sa_restorer) (void);
};

#define MINSIGSTKSZ	2048	/* Minimum stack size for a signal handler. */
#define SIGSTKSZ	8192	/* System default stack size. */

struct _fpxreg {
    unsigned short significand[4];
    unsigned short exponent;
    unsigned short padding[3];
};
struct _xmmreg {
    uint32_t element[4];
};

struct _fpstate {
    uint16_t cwd;
    uint16_t swd;
    uint16_t ftw;
    uint16_t fop;
    uint64_t rip;
    uint64_t rdp;
    uint32_t mxcsr;
    uint32_t mxcr_mask;
    struct _fpxreg _st[8];
    struct _xmmreg _xmm[16];
    uint32_t padding[24];
};

struct sigcontext {
    unsigned long int r8;
    unsigned long int r9;
    unsigned long int r10;
    unsigned long int r11;
    unsigned long int r12;
    unsigned long int r13;
    unsigned long int r14;
    unsigned long int r15;
    unsigned long int rdi;
    unsigned long int rsi;
    unsigned long int rbp;
    unsigned long int rbx;
    unsigned long int rdx;
    unsigned long int rax;
    unsigned long int rcx;
    unsigned long int rsp;
    unsigned long int rip;
    unsigned long int eflags;
    unsigned short cs;
    unsigned short gs;
    unsigned short fs;
    unsigned short __pad0;
    unsigned long int err;
    unsigned long int trapno;
    unsigned long int oldmask;
    unsigned long int cr2;
    struct _fpstate *fpstate;
    unsigned long int __reserved1[8];
};
</SCREEN>
</SECT2>
<SECT2>
<TITLE>spawn.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stddef.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef int wchar_t;
typedef unsigned long int size_t;
typedef long int ptrdiff_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stdint.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define INT64_C(c)	c ## L
#define INTMAX_C(c)	c ## L
#define __INT64_C(c)	c ## L
#define UINT64_C(c)	c ## UL
#define UINTMAX_C(c)	c ## UL
#define __UINT64_C(c)	c ## UL

#define INTPTR_MIN	(-9223372036854775807L-1)
#define INT_FAST16_MIN	(-9223372036854775807L-1)
#define INT_FAST32_MIN	(-9223372036854775807L-1)
#define PTRDIFF_MIN	(-9223372036854775807L-1)
#define SIZE_MAX	(18446744073709551615UL)
#define UINTPTR_MAX	(18446744073709551615UL)
#define UINT_FAST16_MAX	(18446744073709551615UL)
#define UINT_FAST32_MAX	(18446744073709551615UL)
#define INTPTR_MAX	(9223372036854775807L)
#define INT_FAST16_MAX	(9223372036854775807L)
#define INT_FAST32_MAX	(9223372036854775807L)
#define PTRDIFF_MAX	(9223372036854775807L)

typedef long int int64_t;
typedef long int intmax_t;
typedef unsigned long int uintmax_t;
typedef long int intptr_t;
typedef unsigned long int uintptr_t;
typedef unsigned long int uint64_t;
typedef long int int_least64_t;
typedef unsigned long int uint_least64_t;
typedef long int int_fast16_t;
typedef long int int_fast32_t;
typedef long int int_fast64_t;
typedef unsigned long int uint_fast16_t;
typedef unsigned long int uint_fast32_t;
typedef unsigned long int uint_fast64_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stdio.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define __IO_FILE_SIZE	216
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stdlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>string.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<!-- empty header file x86-64/strings.h -->
<SECT2>
<TITLE>sys/epoll.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/file.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/inotify.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/io.h</TITLE>
<PARA>
</PARA>
<SCREEN>

extern int ioperm(unsigned long int from, unsigned long int num,
		  int turn_on);
extern int iopl(int level);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/ioctl.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define TIOCGWINSZ	0x5413
#define TIOCSWINSZ	0x5414
#define FIONREAD	0x541B
#define TIOCNOTTY	21538
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/ipc.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct ipc_perm {
    key_t __key;
    uid_t uid;
    gid_t gid;
    uid_t cuid;
    uid_t cgid;
    unsigned short mode;
    unsigned short __pad1;
    unsigned short __seq;
    unsigned short __pad2;
    unsigned long int __unused1;
    unsigned long int __unused2;
};
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/mman.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define MCL_CURRENT	1
#define MCL_FUTURE	2
</SCREEN>
</SECT2>
<!-- empty header file x86-64/sys/mmap.h -->
<SECT2>
<TITLE>sys/msg.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef unsigned long int msgqnum_t;
typedef unsigned long int msglen_t;

struct msqid_ds {
    struct ipc_perm msg_perm;	/* structure describing operation permission */
    time_t msg_stime;		/* time of last msgsnd command */
    time_t msg_rtime;		/*  time of last msgrcv command */
    time_t msg_ctime;		/* time of last change */
    unsigned long int __msg_cbytes;	/* current number of bytes on queue */
    msgqnum_t msg_qnum;		/* number of messages currently on queue */
    msglen_t msg_qbytes;	/* max number of bytes allowed on queue */
    pid_t msg_lspid;		/* pid of last msgsnd() */
    pid_t msg_lrpid;		/* pid of last msgrcv() */
    unsigned long int __unused4;
    unsigned long int __unused5;
};
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/param.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/poll.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/ptrace.h</TITLE>
<PARA>
</PARA>
<SCREEN>

enum __ptrace_request {
    PTRACE_TRACEME = 0,
    PTRACE_PEEKTEXT = 1,
    PTRACE_PEEKDATA = 2,
    PTRACE_PEEKUSER = 3,
    PTRACE_POKETEXT = 4,
    PTRACE_POKEDATA = 5,
    PTRACE_POKEUSER = 6,
    PTRACE_CONT = 7,
    PTRACE_KILL = 8,
    PTRACE_SINGLESTEP = 9,
    PTRACE_GETREGS = 12,
    PTRACE_SETREGS = 13,
    PTRACE_GETFPREGS = 14,
    PTRACE_SETFPREGS = 15,
    PTRACE_ATTACH = 16,
    PTRACE_DETACH = 17,
    PTRACE_GETFPXREGS = 18,
    PTRACE_SETFPXREGS = 19,
    PTRACE_SYSCALL = 24,
    PTRACE_SETOPTIONS = 0x4200,
    PTRACE_GETEVENTMSG = 0x4201,
    PTRACE_GETSIGINFO = 0x4202,
    PTRACE_SETSIGINFO = 0x4203
};
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/resource.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/select.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/sem.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct semid_ds {
    struct ipc_perm sem_perm;
    time_t sem_otime;
    unsigned long int __unused1;
    time_t sem_ctime;
    unsigned long int __unused2;
    unsigned long int sem_nsems;
    unsigned long int __unused3;
    unsigned long int __unused4;
};
</SCREEN>
</SECT2>
<!-- empty header file x86-64/sys/sendfile.h -->
<SECT2>
<TITLE>sys/shm.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SHMLBA	(__getpagesize())

typedef unsigned long int shmatt_t;

struct shmid_ds {
    struct ipc_perm shm_perm;	/* operation permission struct */
    size_t shm_segsz;		/* size of segment in bytes */
    time_t shm_atime;		/* time of last shmat() */
    time_t shm_dtime;		/* time of last shmdt() */
    time_t shm_ctime;		/* time of last change by shmctl() */
    pid_t shm_cpid;		/* pid of creator */
    pid_t shm_lpid;		/* pid of last shmop */
    shmatt_t shm_nattch;	/* number of current attaches */
    unsigned long int __unused4;
    unsigned long int __unused5;
};
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/socket.h</TITLE>
<PARA>
</PARA>
<SCREEN>

typedef uint64_t __ss_aligntype;

#define SO_RCVLOWAT	18
#define SO_SNDLOWAT	19
#define SO_RCVTIMEO	20
#define SO_SNDTIMEO	21
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/stat.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define _MKNOD_VER	0
#define _STAT_VER	1

struct stat {
    dev_t st_dev;
    ino_t st_ino;
    nlink_t st_nlink;
    mode_t st_mode;
    uid_t st_uid;
    gid_t st_gid;
    int pad0;
    dev_t st_rdev;
    off_t st_size;
    blksize_t st_blksize;
    blkcnt_t st_blocks;
    struct timespec st_atim;
    struct timespec st_mtim;
    struct timespec st_ctim;
    unsigned long int __unused[3];
};
struct stat64 {
    dev_t st_dev;
    ino64_t st_ino;
    nlink_t st_nlink;
    mode_t st_mode;
    uid_t st_uid;
    gid_t st_gid;
    int pad0;
    dev_t st_rdev;
    off_t st_size;
    blksize_t st_blksize;
    blkcnt64_t st_blocks;
    struct timespec st_atim;
    struct timespec st_mtim;
    struct timespec st_ctim;
    unsigned long int __unused[3];
};
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/statfs.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct statfs {
    long int f_type;		/* type of filesystem */
    long int f_bsize;		/* optimal transfer block size */
    fsblkcnt_t f_blocks;	/* total data blocks in file system */
    fsblkcnt_t f_bfree;		/* free blocks in fs */
    fsblkcnt_t f_bavail;	/* free blocks avail to non-superuser */
    fsfilcnt_t f_files;		/* total file nodes in file system */
    fsfilcnt_t f_ffree;		/* free file nodes in file system */
    fsid_t f_fsid;		/* file system id */
    long int f_namelen;		/* maximum length of filenames */
    long int f_frsize;		/* fragment size */
    long int f_spare[5];	/* spare for later */
};
struct statfs64 {
    long int f_type;		/* type of filesystem */
    long int f_bsize;		/* optimal transfer block size */
    fsblkcnt64_t f_blocks;	/* total data blocks in file system */
    fsblkcnt64_t f_bfree;	/* free blocks in fs */
    fsblkcnt64_t f_bavail;	/* free blocks avail to non-superuser */
    fsfilcnt64_t f_files;	/* total file nodes in file system */
    fsfilcnt64_t f_ffree;	/* free file nodes in file system */
    fsid_t f_fsid;		/* file system id */
    long int f_namelen;		/* maximum length of filenames */
    long int f_frsize;		/* fragment size */
    long int f_spare[5];	/* spare for later */
};
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/statvfs.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct statvfs {
    unsigned long int f_bsize;
    unsigned long int f_frsize;
    fsblkcnt_t f_blocks;
    fsblkcnt_t f_bfree;
    fsblkcnt_t f_bavail;
    fsfilcnt_t f_files;
    fsfilcnt_t f_ffree;
    fsfilcnt_t f_favail;
    unsigned long int f_fsid;
    unsigned long int f_flag;
    unsigned long int f_namemax;
    int __f_spare[6];
};
struct statvfs64 {
    unsigned long int f_bsize;
    unsigned long int f_frsize;
    fsblkcnt64_t f_blocks;
    fsblkcnt64_t f_bfree;
    fsblkcnt64_t f_bavail;
    fsfilcnt64_t f_files;
    fsfilcnt64_t f_ffree;
    fsfilcnt64_t f_favail;
    unsigned long int f_fsid;
    unsigned long int f_flag;
    unsigned long int f_namemax;
    int __f_spare[6];
};
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/sysinfo.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/time.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/timeb.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/times.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<!-- empty header file x86-64/sys/timex.h -->
<!-- empty header file x86-64/sys/types.h -->
<!-- empty header file x86-64/sys/uio.h -->
<SECT2>
<TITLE>sys/un.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/utsname.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<!-- empty header file x86-64/sys/vfs.h -->
<SECT2>
<TITLE>sys/wait.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sysexits.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>syslog.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>tar.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>termios.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define OLCUC	0000002
#define ONLCR	0000004
#define XCASE	0000004
#define NLDLY	0000400
#define CR1	0001000
#define IUCLC	0001000
#define CR2	0002000
#define CR3	0003000
#define CRDLY	0003000
#define TAB1	0004000
#define TAB2	0010000
#define TAB3	0014000
#define TABDLY	0014000
#define BS1	0020000
#define BSDLY	0020000
#define VT1	0040000
#define VTDLY	0040000
#define FF1	0100000
#define FFDLY	0100000

#define VSUSP	10
#define VEOL	11
#define VREPRINT	12
#define VDISCARD	13
#define VWERASE	14
#define VEOL2	16
#define VMIN	6
#define VSWTC	7
#define VSTART	8
#define VSTOP	9

#define IXON	0002000
#define IXOFF	0010000

#define CS6	0000020
#define CS7	0000040
#define CS8	0000060
#define CSIZE	0000060
#define CSTOPB	0000100
#define CREAD	0000200
#define PARENB	0000400
#define PARODD	0001000
#define HUPCL	0002000
#define CLOCAL	0004000
#define VTIME	5

#define ISIG	0000001
#define ICANON	0000002
#define ECHOE	0000020
#define ECHOK	0000040
#define ECHONL	0000100
#define NOFLSH	0000200
#define TOSTOP	0000400
#define ECHOCTL	0001000
#define ECHOPRT	0002000
#define ECHOKE	0004000
#define FLUSHO	0010000
#define PENDIN	0040000
#define IEXTEN	0100000
</SCREEN>
</SECT2>
<SECT2>
<TITLE>time.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ucontext.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct _libc_fpxreg {
    unsigned short significand[4];
    unsigned short exponent;
    unsigned short padding[3];
};
struct _libc_xmmreg {
    uint32_t element[4];
};
enum {
    REG_R8 = 0,
    REG_R9 = 1,
    REG_R10 = 2,
    REG_R11 = 3,
    REG_R12 = 4,
    REG_R13 = 5,
    REG_R14 = 6,
    REG_R15 = 7,
    REG_RDI = 8,
    REG_RSI = 9,
    REG_RBP = 10,
    REG_RBX = 11,
    REG_RDX = 12,
    REG_RAX = 13,
    REG_RCX = 14,
    REG_RSP = 15,
    REG_RIP = 16,
    REG_EFL = 17,
    REG_CSGSFS = 18,
    REG_ERR = 19,
    REG_TRAPNO = 20,
    REG_OLDMASK = 21,
    REG_CR2 = 22
};

typedef long int greg_t;

#define NGREG	23

typedef greg_t gregset_t[23];

struct _libc_fpstate {
    uint16_t cwd;
    uint16_t swd;
    uint16_t ftw;
    uint16_t fop;
    uint64_t rip;
    uint64_t rdp;
    uint32_t mxcsr;
    uint32_t mxcr_mask;
    struct _libc_fpxreg _st[8];
    struct _libc_xmmreg _xmm[16];
    uint32_t padding[24];
};
typedef struct _libc_fpstate *fpregset_t;

typedef struct {
    gregset_t gregs;
    fpregset_t fpregs;
    unsigned long int __reserved1[8];
} mcontext_t;

typedef struct ucontext {
    unsigned long int uc_flags;
    struct ucontext *uc_link;
    stack_t uc_stack;
    mcontext_t uc_mcontext;
    sigset_t uc_sigmask;
    struct _libc_fpstate __fpregs_mem;
} ucontext_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ulimit.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>unistd.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>utime.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
<SECT2>
<TITLE>utmp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct lastlog {
    int32_t ll_time;
    char ll_line[UT_LINESIZE];
    char ll_host[UT_HOSTSIZE];
};

struct utmp {
    short ut_type;		/* Type of login. */
    pid_t ut_pid;		/* Process ID of login process. */
    char ut_line[UT_LINESIZE];	/* Devicename. */
    char ut_id[4];		/* Inittab ID. */
    char ut_user[UT_NAMESIZE];	/* Username. */
    char ut_host[UT_HOSTSIZE];	/* Hostname for remote login. */
    struct exit_status ut_exit;	/* Exit status of a process marked as DEAD_PROCESS. */
    int ut_session;		/* Session ID, used for windowing. */
    struct {
	int32_t tv_sec;
	int32_t tv_usec;
    } ut_tv;			/* Time entry was made. */
    int32_t ut_addr_v6[4];	/* Internet address of remote host. */
    char __unused[20];		/* Reserved for future use. */
};
</SCREEN>
</SECT2>
<SECT2>
<TITLE>utmpx.h</TITLE>
<PARA>
</PARA>
<SCREEN>

struct utmpx {
    short ut_type;		/* Type of login. */
    pid_t ut_pid;		/* Process ID of login process. */
    char ut_line[UT_LINESIZE];	/* Devicename. */
    char ut_id[4];		/* Inittab ID. */
    char ut_user[UT_NAMESIZE];	/* Username. */
    char ut_host[UT_HOSTSIZE];	/* Hostname for remote login. */
    struct exit_status ut_exit;	/* Exit status of a process marked as DEAD_PROCESS. */
    int32_t ut_session;		/* Session ID, used for windowing. */
    struct {
	int32_t tv_sec;		/* Seconds. */
	int32_t tv_usec;	/* Microseconds. */
    } ut_tv;			/* Time entry was made. */
    int32_t ut_addr_v6[4];	/* Internet address of remote host. */
    char __unused[20];		/* Reserved for future use. */
};
</SCREEN>
</SECT2>
<!-- empty header file x86-64/wchar.h -->
<!-- empty header file x86-64/wctype.h -->
<SECT2>
<TITLE>wordexp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

/*
 * This header is architecture neutral
 * Please refer to the generic specification for details
 */
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libcman>
<TITLE>Interface Definitions for libc</TITLE>
<PARA>
The interfaces defined on the following pages are included in libc and are defined
by this specification.
Unless otherwise noted, these interfaces shall be included
in the source standard.
</PARA>
<PARA>
Other interfaces listed in <XREF LINKEND=libc> shall behave as described
in the referenced base document. For interfaces referencing LSB and not listed below, please see the generic part of the specification.
</PARA>
m4_sinclude(m4_ifdef('ioperm','',../../generic/baselib/ioperm.sgml))
m4_define('ioperm','1')
m4_sinclude(m4_ifdef('iopl','',../../generic/baselib/iopl.sgml))
m4_define('iopl','1')
</SECT1>
<!-- End of text generated from database -->
