<PART ID="tocdynlnk">
<TITLE>Dynamic Linking</TITLE>

<CHAPTER ID=dynlnk>
<TITLE>Program Loading and Dynamic Linking</TITLE>

<PARA>
LSB-conforming implementations shall support the object file information and
system actions that create running programs as specified in the System V
Application Binary Interface, Edition 4.1 and the System V Application Binary
Interface - DRAFT - April 29, 1998 and as supplemented by this document and
an architecture-specific LSB specification.
</PARA>

<PARA>
Any shared object that is loaded must contain sufficient DT_NEEDED records to
satisfy the symbols on the shared library.
</PARA>
</CHAPTER>

<CHAPTER ID=DynamicSection>
<TITLE>Dynamic Entries</TITLE>
<PARA>
</PARA>
<SECT1 ID=dynsectent>
<TITLE>ELF Dynamic Entries</TITLE>
<PARA>
The following dynamic entries are defined in the System V 
Application Binary Interface, Edition 4.1.
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mkdyntagtable,v 1.4 2001/12/24 16:25:54 anderson Exp 0 -->
<!--    at Mon Apr 22 16:47:13 2002 -->
<VARIABLELIST>
<VARLISTENTRY><TERM>DT_BIND_NOW</TERM><LISTITEM><PARA>Process relocations of object</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_DEBUG</TERM><LISTITEM><PARA>For debugging; unspecified</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_FINI</TERM><LISTITEM><PARA>Address of termination function</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_HASH</TERM><LISTITEM><PARA>Address of symbol hash table</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_HIPROC</TERM><LISTITEM><PARA>End of processor-specific</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_INIT</TERM><LISTITEM><PARA>Address of init function</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_JMPREL</TERM><LISTITEM><PARA>Address of PLT relocs</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_LOPROC</TERM><LISTITEM><PARA>Start of processor-specific</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_NEEDED</TERM><LISTITEM><PARA>Name of needed library</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_NULL</TERM><LISTITEM><PARA>Marks end of dynamic section</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_PLTREL</TERM><LISTITEM><PARA>Type of reloc in PLT</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_PLTRELSZ</TERM><LISTITEM><PARA>Size in bytes of PLT relocs</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_REL</TERM><LISTITEM><PARA>Address of Rel relocs</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_RELA</TERM><LISTITEM><PARA>Address of Rela relocs</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_RELAENT</TERM><LISTITEM><PARA>Size of one Rela reloc</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_RELASZ</TERM><LISTITEM><PARA>Total size of Rela relocs</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_RELENT</TERM><LISTITEM><PARA>Size of one Rel reloc</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_RELSZ</TERM><LISTITEM><PARA>Total size of Rel relocs</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_RPATH</TERM><LISTITEM><PARA>Library search path</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_SONAME</TERM><LISTITEM><PARA>Name of shared object</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_STRSZ</TERM><LISTITEM><PARA>Size of string table</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_STRTAB</TERM><LISTITEM><PARA>Address of string table</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_SYMBOLIC</TERM><LISTITEM><PARA>Start symbol search here</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_SYMENT</TERM><LISTITEM><PARA>Size of one symbol table entry</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_SYMTAB</TERM><LISTITEM><PARA>Address of symbol table</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_TEXTREL</TERM><LISTITEM><PARA>Reloc might modify .text</PARA></LISTITEM></VARLISTENTRY></VARIABLELIST>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mkdyntagtable,v 1.4 2001/12/24 16:25:54 anderson Exp 0 -->

</PARA>
</SECT1>
<SECT1 ID=lindynsectent>
<TITLE>Linux Dynamic Entries</TITLE>
<PARA>
The following dynamic entries are defined here.
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mkdyntagtable,v 1.4 2001/12/24 16:25:54 anderson Exp 0 -->
<!--    at Mon Apr 22 16:47:13 2002 -->
<VARIABLELIST>
<VARLISTENTRY><TERM>DT_ADDRRNGLO</TERM><LISTITEM><PARA></PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_AUXILIARY</TERM><LISTITEM><PARA>Shared object to load before self</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_FILTER</TERM><LISTITEM><PARA>Shared object to get values from</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_FINI_ARRAY</TERM><LISTITEM><PARA>Array with addresses of fini fct</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_FINI_ARRAYSZ</TERM><LISTITEM><PARA>Size in bytes of DT_FINI_ARRAY</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_FLAGS_1</TERM><LISTITEM><PARA>State flags, see DF_1_* below</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_HIOS</TERM><LISTITEM><PARA>End of OS-specific</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_INIT_ARRAY</TERM><LISTITEM><PARA>Array with addresses of init fct</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_INIT_ARRAYSZ</TERM><LISTITEM><PARA>Size in bytes of DT_INIT_ARRAY</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_LOOS</TERM><LISTITEM><PARA>Start of OS-specific</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_NUM</TERM><LISTITEM><PARA>Number used</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_POSFLAG_1</TERM><LISTITEM><PARA>Flags for DT_* entries, effecting the following DT_* entry</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_RELCOUNT</TERM><LISTITEM><PARA>All Elf32_Rel R_*_RELATIVE relocations have been placed into a single block and this entry specifies the number of entries in that block. This permits ld.so.1 to streamline the processing of RELATIVE relocations.</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_SYMINENT</TERM><LISTITEM><PARA>Entry size of syminfo</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_SYMINFO</TERM><LISTITEM><PARA>syminfo table</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_SYMINSZ</TERM><LISTITEM><PARA>Size of syminfo table (in bytes)</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_VALRNGHI</TERM><LISTITEM><PARA></PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_VALRNGLO</TERM><LISTITEM><PARA></PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_VERDEF</TERM><LISTITEM><PARA>Address of version definition table</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_VERDEFNUM</TERM><LISTITEM><PARA>Number of version definitions</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_VERNEED</TERM><LISTITEM><PARA>Address of table with needed versions</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_VERNEEDNUM</TERM><LISTITEM><PARA>Number of needed versions</PARA></LISTITEM></VARLISTENTRY><VARLISTENTRY><TERM>DT_VERSYM</TERM><LISTITEM><PARA>GNU Symbol versioning</PARA></LISTITEM></VARLISTENTRY></VARIABLELIST>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mkdyntagtable,v 1.4 2001/12/24 16:25:54 anderson Exp 0 -->

</PARA>
</SECT1>
</CHAPTER>

<CHAPTER ID=ProgramInterpreter>
<TITLE>
Program Interpreter
</TITLE>
<PARA>
</PARA>
<SECT1 ID=proginterp>
<TITLE>
</TITLE>
<PARA>
The Program Interpreter is specified in the appropriate
architecture-specific LSB specification.
</PARA>
</SECT1>
</CHAPTER>

</PART>
