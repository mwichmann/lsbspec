<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->
<!--    at Thu Dec 11 13:01:09 2003 -->
<SECT1 ID=libz>
<TITLE>Interfaces for libz</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libz Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libz</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libz.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<para><footnote><para>
The reference to the zlib 1.1.3 manual, of course, is to
the specification found in the manual, not to the implementation.  The
zlib 1.1.4 manual, for example, is identical (except for the version
number, which we do not specify).  The only reason not to just say
"zlib 1.1.x" is that it is hard to know whether a hypothetical future
release would be compatible.
</para></footnote></para>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
zlib 1.1.3 Manual<FOOTNOTE ID="std-127-24">
<PARA>
zlib 1.1.3 Manual</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<!--libgroup-->
<TITLE>Compression Library</TITLE>
<PARA>
</PARA>
<SECT3>
<TITLE>Interfaces for Compression Library</TITLE>
<PARA>
</PARA>
<!--libgroupints-->
<TABLE>
<TITLE>libz - Compression Library Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>adler32</primary></indexterm>adler32<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>deflateInit_</primary></indexterm>deflateInit_<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzerror</primary></indexterm>gzerror<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzread</primary></indexterm>gzread<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>inflateInit2_</primary></indexterm>inflateInit2_<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>compress</primary></indexterm>compress<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>deflateParams</primary></indexterm>deflateParams<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzflush</primary></indexterm>gzflush<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzrewind</primary></indexterm>gzrewind<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>inflateInit_</primary></indexterm>inflateInit_<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>compress2</primary></indexterm>compress2<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>deflateReset</primary></indexterm>deflateReset<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzgetc</primary></indexterm>gzgetc<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzseek</primary></indexterm>gzseek<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>inflateReset</primary></indexterm>inflateReset<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>crc32</primary></indexterm>crc32<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>deflateSetDictionary</primary></indexterm>deflateSetDictionary<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzgets</primary></indexterm>gzgets<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzsetparams</primary></indexterm>gzsetparams<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>inflateSetDictionary</primary></indexterm>inflateSetDictionary<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>deflate</primary></indexterm>deflate<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>get_crc_table</primary></indexterm>get_crc_table<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzopen</primary></indexterm>gzopen<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gztell</primary></indexterm>gztell<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>inflateSync</primary></indexterm>inflateSync<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>deflateCopy</primary></indexterm>deflateCopy<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzclose</primary></indexterm>gzclose<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzprintf</primary></indexterm>gzprintf<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzwrite</primary></indexterm>gzwrite<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>inflateSyncPoint</primary></indexterm>inflateSyncPoint<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>deflateEnd</primary></indexterm>deflateEnd<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzdopen</primary></indexterm>gzdopen<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzputc</primary></indexterm>gzputc<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>inflate</primary></indexterm>inflate<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>uncompress</primary></indexterm>uncompress<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>deflateInit2_</primary></indexterm>deflateInit2_<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzeof</primary></indexterm>gzeof<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>gzputs</primary></indexterm>gzputs<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>inflateEnd</primary></indexterm>inflateEnd<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
<ENTRY><indexterm><primary>zError</primary></indexterm>zError<FOOTNOTEREF LINKEND="std-127-24"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT3>
</SECT2>
</SECT1>
<SECT1 ID=libz-ddefs>
<TITLE>Data Definitions for libz</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO C serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>zlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define Z_NULL	0
#define MAX_WBITS	15
#define MAX_MEM_LEVEL	9
#define deflateInit2(strm,level, method, windowBits, memLevel, stratgey)	deflateInit2_((strm),(level),(method),(windowBits),(memLevel),(strategy),           ZLIB_VERSION, sizeof(z_stream))
#define deflateInit(strm,level)	deflateInit_((strm), (level),       ZLIB_VERSION, sizeof(z_stream))
#define inflateInit2(strm,windowBits)	inflateInit2_((strm), (windowBits), ZLIB_VERSION, sizeof(z_stream))
#define inflateInit(strm)	inflateInit_((strm),                ZLIB_VERSION, sizeof(z_stream))


typedef int intf;


typedef void *voidpf;
typedef unsigned int uInt;
typedef unsigned long uLong;
typedef uLong uLongf;
typedef void *voidp;
typedef unsigned char Byte;
typedef off_t z_off_t;


typedef voidpf (*alloc_func) (voidpf opaque, uInt items, uInt size);
typedef void (*free_func) (voidpf opaque, voidpf address);
struct internal_state
{
  int dummy;
}
 ;
typedef Byte Bytef;
typedef uInt uIntf;


typedef struct z_stream_s
{
  Bytef *next_in;
  uInt avail_in;
  uLong total_in;
  Bytef *next_out;
  uInt avail_out;
  uLong total_out;
  char *msg;
  struct internal_state *state;
  alloc_func zalloc;
  free_func zfree;
  voidpf opaque;
  int data_type;
  uLong adler;
  uLong reserved;
}
z_stream;


typedef z_stream *z_streamp;
typedef voidp gzFile;
#define Z_NO_FLUSH	0
#define Z_PARTIAL_FLUSH	1
#define Z_SYNC_FLUSH	2
#define Z_FULL_FLUSH	3
#define Z_FINISH	4



#define Z_ERRNO	(-1)
#define Z_STREAM_ERROR	(-2)
#define Z_DATA_ERROR	(-3)
#define Z_MEM_ERROR	(-4)
#define Z_BUF_ERROR	(-5)
#define Z_OK	0
#define Z_STREAM_END	1
#define Z_NEED_DICT	2



#define Z_DEFAULT_COMPRESSION	(-1)
#define Z_NO_COMPRESSION	0
#define Z_BEST_SPEED	1
#define Z_BEST_COMPRESSION	9



#define Z_DEFAULT_STRATEGY	0
#define Z_FILTERED	1
#define Z_HUFFMAN_ONLY	2



#define Z_BINARY	0
#define Z_ASCII	1
#define Z_UNKNOWN	2



#define Z_DEFLATED	8
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mklibspec,v 1.53 2003/06/03 20:38:14 anderson Exp 0 -->
