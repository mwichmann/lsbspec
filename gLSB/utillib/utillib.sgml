<PART ID="tocutillib">
<TITLE>Utility Libraries</TITLE>

<CHAPTER id=utillib>
<TITLE>Libraries</TITLE>

<PARA>
An LSB-conforming implementation may also support some utility libraries which
are built on top of the interfaces provided by the base libraries. These
libraries implement common functionality, and hide additional system dependent
information such as file formats and device names.
</PARA>

<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->
<!--    at Mon Apr 15 19:51:25 2002 -->
<SECT1 ID=libz>
<TITLE>Interfaces for libz</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libz Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libz</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libz.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
zlib 1.1.3 Manual<FOOTNOTE ID="std-127-24">
<PARA>
zlib 1.1.3 Manual</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>Compression Library</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libz - Compression Library Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>adler32<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>deflateInit_<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzerror<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzread<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>inflateInit2_<FOOTNOTEREF LINKEND="std-127-24"></ENTRY></ROW>
<ROW><ENTRY>compress<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>deflateParams<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzflush<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzrewind<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>inflateInit_<FOOTNOTEREF LINKEND="std-127-24"></ENTRY></ROW>
<ROW><ENTRY>compress2<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>deflateReset<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzgetc<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzseek<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>inflateReset<FOOTNOTEREF LINKEND="std-127-24"></ENTRY></ROW>
<ROW><ENTRY>crc32<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>deflateSetDictionary<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzgets<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzsetparams<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>inflateSetDictionary<FOOTNOTEREF LINKEND="std-127-24"></ENTRY></ROW>
<ROW><ENTRY>deflate<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>get_crc_table<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzopen<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gztell<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>inflateSync<FOOTNOTEREF LINKEND="std-127-24"></ENTRY></ROW>
<ROW><ENTRY>deflateCopy<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzclose<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzprintf<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzwrite<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>inflateSyncPoint<FOOTNOTEREF LINKEND="std-127-24"></ENTRY></ROW>
<ROW><ENTRY>deflateEnd<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzdopen<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzputc<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>inflate<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>uncompress<FOOTNOTEREF LINKEND="std-127-24"></ENTRY></ROW>
<ROW><ENTRY>deflateInit2_<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzeof<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>gzputs<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>inflateEnd<FOOTNOTEREF LINKEND="std-127-24"></ENTRY><ENTRY>zError<FOOTNOTEREF LINKEND="std-127-24"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libz-ddefs>
<TITLE>Data Definitions for libz</TITLE>
<PARA>
</PARA>
<SECT2>
<TITLE>zlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>



typedef z_stream *z_streamp;
typedef voidp gzFile;
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->
<!--    at Mon Apr 15 19:51:27 2002 -->
<SECT1 ID=libncurses>
<TITLE>Interfaces for libncurses</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libncurses Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libncurses</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libncurses.so.5</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
CAE Specification, May 1996, X/Open Curses, Issue 4, Version 2 (ISBN:  1-85912-171-3, C610), plus Corrigendum U018<FOOTNOTE ID="std-128-28">
<PARA>
CAE Specification, May 1996, X/Open Curses, Issue 4, Version 2 (ISBN:  1-85912-171-3, C610), plus Corrigendum U018</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>Curses</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libncurses - Curses Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>addch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>has_ic<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwaddch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>scr_dump<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>waddchstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>addchnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>has_il<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwaddchnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>scr_init<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>waddnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>addchstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>hline<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwaddchstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>scr_restore<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>waddstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>addnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>idcok<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwaddnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>scr_set<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wattr_get<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>addstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>idlok<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwaddstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>scrl<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wattr_off<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>attr_get<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>immedok<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwchgat<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>scroll<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wattr_on<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>attr_off<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>inch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwdelch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>scrollok<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wattr_set<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>attr_on<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>inchnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwgetch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>set_term<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wattroff<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>attr_set<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>inchstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwgetnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>setscrreg<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wattron<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>attroff<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>init_color<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwgetstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>slk_attr_set<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wattrset<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>attron<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>init_pair<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwhline<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>slk_attroff<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wbkgd<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>attrset<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>initscr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>slk_attron<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wbkgdset<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>baudrate<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>innstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwinch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>slk_attrset<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wborder<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>beep<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>insch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwinchnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>slk_clear<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wchgat<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>bkgd<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>insdelln<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwinchstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>slk_color<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wclear<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>bkgdset<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>insertln<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwinnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>slk_init<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wclrtobot<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>border<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>insnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwinsch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>slk_label<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wclrtoeol<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>box<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>insstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwinsnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>slk_noutrefresh<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wcolor_set<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>can_change_color<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>instr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwinsstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>slk_refresh<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wcursyncup<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>cbreak<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>intrflush<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwinstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>slk_restore<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wdelch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>chgat<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>is_linetouched<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwprintw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>slk_set<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wdeleteln<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>clear<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>is_wintouched<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwscanw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>slk_touch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wechochar<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>clearok<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>isendwin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvwvline<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>standend<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>werase<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>clrtobot<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>keyname<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>napms<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>standout<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wgetch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>clrtoeol<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>keypad<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>newpad<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>start_color<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wgetnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>color_content<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>killchar<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>newterm<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>subpad<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wgetstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>color_set<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>leaveok<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>newwin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>subwin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>whline<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>copywin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>longname<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>nl<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>syncok<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>curs_set<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>meta<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>nocbreak<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>termattrs<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winchnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>def_prog_mode<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>move<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>nodelay<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>termname<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winchstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>def_shell_mode<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvaddch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>noecho<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>tgetent<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>delay_output<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvaddchnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>nonl<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>tgetflag<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winsch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>delch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvaddchstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>noqiflush<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>tgetnum<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winsdelln<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>deleteln<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvaddnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>noraw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>tgetstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winsertln<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>delscreen<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvaddstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>notimeout<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>tgoto<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winsnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>delwin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvchgat<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>overlay<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>tigetflag<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winsstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>derwin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvcur<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>overwrite<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>tigetnum<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>winstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>doupdate<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvdelch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>pair_content<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>tigetstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wmove<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>dupwin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvderwin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>pechochar<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>timeout<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wnoutrefresh<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>echo<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvgetch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>pnoutrefresh<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>tparm<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wprintw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>echochar<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvgetnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>prefresh<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>tputs<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wredrawln<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>endwin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvgetstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>printw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>typeahead<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wrefresh<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>erase<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvhline<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>putp<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>ungetch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wscanw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>erasechar<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvinch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>putwin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>untouchwin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wscrl<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>filter<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvinchnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>qiflush<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>use_env<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wsetscrreg<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>flash<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvinchstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>raw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>vidattr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wstandend<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>flushinp<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvinnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>redrawwin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>vidputs<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wstandout<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>getbkgd<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvinsch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>refresh<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>vline<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wsyncdown<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>getch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvinsnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>reset_prog_mode<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>vw_printw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wsyncup<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>getnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvinsstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>reset_shell_mode<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>vw_scanw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wtimeout<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>getstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvinstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>resetty<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>vwprintw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wtouchln<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>getwin<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvprintw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>ripoffline<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>vwscanw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>wvline<FOOTNOTEREF LINKEND="std-128-28"></ENTRY></ROW>
<ROW><ENTRY>halfdelay<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvscanw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>savetty<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>waddch<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>has_colors<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>mvvline<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>scanw<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>waddchnstr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libncurses - Curses Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>COLS<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>LINES<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>curscr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY>stdscr<FOOTNOTEREF LINKEND="std-128-28"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libncurses-ddefs>
<TITLE>Data Definitions for libncurses</TITLE>
<PARA>
</PARA>
<SECT2>
<TITLE>curses.h</TITLE>
<PARA>
</PARA>
<SCREEN>




#define WA_ALTCHARSET	A_ALTCHARSET
#define WA_ATTRIBUTES	A_ATTRIBUTES
#define WA_BLINK	A_BLINK
#define WA_BOLD	A_BOLD
#define WA_DIM	A_DIM
#define WA_HORIZONTAL	A_HORIZONTAL
#define WA_INVIS	A_INVIS
#define WA_LEFT	A_LEFT
#define WA_LOW	A_LOW
#define WA_NORMAL	A_NORMAL
#define WA_PROTECT	A_PROTECT
#define WA_REVERSE	A_REVERSE
#define WA_RIGHT	A_RIGHT
#define WA_STANDOUT	A_STANDOUT
#define WA_TOP	A_TOP
#define WA_UNDERLINE	A_UNDERLINE
#define WA_VERTICAL	A_VERTICAL



#define COLOR_BLACK	0
#define COLOR_RED	1
#define COLOR_GREEN	2
#define COLOR_YELLOW	3
#define COLOR_BLUE	4
#define COLOR_MAGENTA	5
#define COLOR_CYAN	6
#define COLOR_WHITE	7



#define _SUBWIN	0x01
#define _ENDLINE	0x02
#define _FULLWIN	0x04
#define _ISPAD	0x10
#define _HASMOVED	0x20
#define TRACE_MAXIMUM	0xffff





typedef unsigned long chtype;
typedef char bool;
typedef struct screen SCREEN;
typedef struct _win_st
{
  short _cury;
  short _curx;
  short _maxy;
  short _maxx;
  short _begy;
  short _begx;
  short _flags;
  attr_t _attrs;
  chtype _bkgd;
  bool _notimeout;
  bool _clear;
  bool _leaveok;
  bool _scroll;
  bool _idlok;
  bool _idcok;
  bool _immed;
  bool _sync;
  bool _use_keypad;
  int _delay;
  struct ldat *_line;
  short _regtop;
  short _regbottom;
  int _parx;
  int _pary;
  WINDOW *_parent;
  struct pdat _pad;
  short _yoffset;
}
WINDOW;
typedef chtype attr_t;
#define KEY_CODE_YES	0400
#define KEY_BREAK	0401
#define KEY_MIN	0401
#define KEY_DOWN	0402
#define KEY_UP	0403
#define KEY_LEFT	0404
#define KEY_RIGHT	0405
#define KEY_HOME	0406
#define KEY_BACKSPACE	0407
#define KEY_F0	0410
#define KEY_DL	0510
#define KEY_IL	0511
#define KEY_DC	0512
#define KEY_IC	0513
#define KEY_EIC	0514
#define KEY_CLEAR	0515
#define KEY_EOS	0516
#define KEY_EOL	0517
#define KEY_SF	0520
#define KEY_SR	0521
#define KEY_NPAGE	0522
#define KEY_PPAGE	0523
#define KEY_STAB	0524
#define KEY_CTAB	0525
#define KEY_CATAB	0526
#define KEY_ENTER	0527
#define KEY_SRESET	0530
#define KEY_RESET	0531
#define KEY_PRINT	0532
#define KEY_LL	0533
#define KEY_A1	0534
#define KEY_A3	0535
#define KEY_B2	0536
#define KEY_C1	0537
#define KEY_C3	0540
#define KEY_BTAB	0541
#define KEY_BEG	0542
#define KEY_CANCEL	0543
#define KEY_CLOSE	0544
#define KEY_COMMAND	0545
#define KEY_COPY	0546
#define KEY_CREATE	0547
#define KEY_END	0550
#define KEY_EXIT	0551
#define KEY_FIND	0552
#define KEY_HELP	0553
#define KEY_MARK	0554
#define KEY_MESSAGE	0555
#define KEY_MOVE	0556
#define KEY_NEXT	0557
#define KEY_OPEN	0560
#define KEY_OPTIONS	0561
#define KEY_PREVIOUS	0562
#define KEY_REDO	0563
#define KEY_REFERENCE	0564
#define KEY_REFRESH	0565
#define KEY_REPLACE	0566
#define KEY_RESTART	0567
#define KEY_RESUME	0570
#define KEY_SAVE	0571
#define KEY_SBEG	0572
#define KEY_SCANCEL	0573
#define KEY_SCOMMAND	0574
#define KEY_SCOPY	0575
#define KEY_SCREATE	0576
#define KEY_SDC	0577
#define KEY_SDL	0600
#define KEY_SELECT	0601
#define KEY_SEND	0602
#define KEY_SEOL	0603
#define KEY_SEXIT	0604
#define KEY_SFIND	0605
#define KEY_SHELP	0606
#define KEY_SHOME	0607
#define KEY_SIC	0610
#define KEY_SLEFT	0611
#define KEY_SMESSAGE	0612
#define KEY_SMOVE	0613
#define KEY_SNEXT	0614
#define KEY_SOPTIONS	0615
#define KEY_SPREVIOUS	0616
#define KEY_SPRINT	0617
#define KEY_SREDO	0620
#define KEY_SREPLACE	0621
#define KEY_SRIGHT	0622
#define KEY_SRSUME	0623
#define KEY_SSAVE	0624
#define KEY_SSUSPEND	0625
#define KEY_SUNDO	0626
#define KEY_SUSPEND	0627
#define KEY_UNDO	0630
#define KEY_MOUSE	0631
#define KEY_RESIZE	0632
#define KEY_MAX	0777
</SCREEN>
</SECT2>
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->


<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->
<!--    at Mon Apr 15 19:51:28 2002 -->
<SECT1 ID=libutil>
<TITLE>Interfaces for libutil</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libutil Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libutil</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libutil.so.1</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-130-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>Utility Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libutil - Utility Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>forkpty(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-130-10"></ENTRY><ENTRY>login_tty(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-130-10"></ENTRY><ENTRY>logwtmp(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-130-10"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>login(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-130-10"></ENTRY><ENTRY>logout(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-130-10"></ENTRY><ENTRY>openpty(GLIBC_2.0)<FOOTNOTEREF LINKEND="std-130-10"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libutilman>
<TITLE>Interfaces Definitions for libutil</TITLE>
<PARA>
</PARA>
<REFENTRY ID="libutil-forkpty-3"> <REFMETA>
<REFENTRYTITLE>forkpty</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>forkpty
</REFNAME>
<REFPURPOSE>find and open an available pseudo-tty
</REFPURPOSE>
<INDEXTERM ID="ix-libutil-forkpty-3"><PRIMARY>forkpty</PRIMARY></INDEXTERM>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>08 February 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
int forkpty(int *<replaceable class="parameter" >amaster</replaceable>, 
	char *<replaceable class="parameter" >name</replaceable>,
	struct termios *<replaceable class="parameter" >termp</replaceable>,
	struct winsize *<replaceable class="parameter" >winp</replaceable>);
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>08 February 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The forkpty() function joins openpty(), fork(), and login_tty() to create a new process operating on a pseudo-tty. The file descriptor of the master side of the pseudo-tty is returned in amaster, and null or the filename of the slave in name. If non-null, the termp and winp parameters will determine the terminal attributes and window size of the slave side of the pseudo-tty.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success of the child process, zero is returned. When the parent process receives the PID of its child process, pid is returned. On error, -1 is returned, and errno is set appropriately.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="libutil-login-3"> <REFMETA>
<REFENTRYTITLE>login</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>login
</REFNAME>
<REFPURPOSE>login utility function
</REFPURPOSE>
<INDEXTERM ID="ix-libutil-login-3"><PRIMARY>login</PRIMARY></INDEXTERM>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>08 February 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
void login(struct utmp *<replaceable class="parameter" >ut</replaceable>);
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>08 February 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The login() function updates the /var/run/utmp and /var/log/wtmp files with user information contained in ut.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="libutil-login-tty-3"> <REFMETA>
<REFENTRYTITLE>login_tty</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>login_tty
</REFNAME>
<REFPURPOSE>find and open an available pseudo-tty
</REFPURPOSE>
<INDEXTERM ID="ix-libutil-login-tty-3"><PRIMARY>login_tty</PRIMARY></INDEXTERM>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>08 February 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
int login_tty(int <replaceable class="parameter" >fdr</replaceable>);
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>08 February 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
login_tty() sets up for a login on the tty referenced by the file 
descriptor fdr. This function creates a new session, makes the tty 
for the current process the controlling terminal, sets the standard 
input, output, and error streams of the current process, and closes fdr.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, zero is returned. On error, -1 is returned, and errno is set appropriately.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="libutil-logout-3"> <REFMETA>
<REFENTRYTITLE>logout</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>logout
</REFNAME>
<REFPURPOSE>logout utility function
</REFPURPOSE>
<INDEXTERM ID="ix-libutil-logout-3"><PRIMARY>logout</PRIMARY></INDEXTERM>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>08 February 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
int logout(const char *<replaceable class="parameter" >line</replaceable>);
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>08 February 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
Given the device line, the logout() function removes the entry from the corresponding /var/run/utmp system file.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
Zero is returned if there was no entry to remove. A non-zero return value indicates success.
</PARA>
</REFSECT1>
</REFENTRY>

<REFENTRY ID="baselib-logwtmp-3"> <REFMETA>
<REFENTRYTITLE>logwtmp</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>logwtmp
</REFNAME>
<REFPURPOSE>
append an entry to the wtmp file
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;utmp.h>

void logwtmp(const char *line, const char *name, const char *host);
</SYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
logwtmp() constructs an utmp structure using line, name, host, current time and current process id. Then it calls updwtmp() to append the structure to the utmp file.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>Availability
</TITLE>
<PARA>
Both functions are available under glibc2, but not under libc5. However, logwtmp occurs in the old libbsd.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>
Files
</TITLE>
<PARA>
/var/log/wtmp database of past user logins
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>

<REFENTRY ID="libutil-openpty-3"> <REFMETA>
<REFENTRYTITLE>openpty</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>openpty
</REFNAME>
<REFPURPOSE>find and open an available pseudo-tty
</REFPURPOSE>
<INDEXTERM ID="ix-libutil-openpty-3"><PRIMARY>openpty</PRIMARY></INDEXTERM>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>08 February 2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
int openpty(int *<replaceable class="parameter" >amaster</replaceable>, 
	int *<replaceable class="parameter" >aslave</replaceable>, 
	char *<replaceable class="parameter" >name</replaceable>,
	struct termios *<replaceable class="parameter" >termp</replaceable>,
	struct winsize *<replaceable class="parameter" >winp</replaceable>);
</SYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>08 February 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The openpty() function finds an available pseudo-tty and returns file descriptors for the amaster and aslave. The filename of the slave is returned in name, otherwise a null. The terminal parameters of the slave will be set to the values in termp, otherwise a null. The window size of the slave will be set to the values in winp, otherwise a null.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
On success, zero is returned. On error, -1 is returned, and errno is set appropriately.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Errors
</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
ENOENT
</TERM>
<LISTITEM>
<PARA>
There are no available ttys.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>
</REFENTRY>

</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.34 2002/04/12 20:12:28 anderson Exp 0 -->


</CHAPTER>

</PART>
