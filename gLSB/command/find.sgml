<REFENTRY id="find">
<REFMETA><REFENTRYTITLE>
find
</REFENTRYTITLE></REFMETA>
<REFNAMEDIV>
<REFNAME>find</REFNAME>
<REFPURPOSE>
search for files in a directory hierarchy
</REFPURPOSE>
</REFNAMEDIV>

<REFSECT1>
<TITLE>Description</TITLE>
<PARA>
<COMMAND>find</COMMAND> is as specified in the Single UNIX
Specification but with
additional options as specified below.
</PARA>

</REFSECT1>

<REFSECT1>
<title>LSB Deprecated Differences</title>

<para>The behaviors specified in this section are expected to
disappear from a future version of the LSB; applications should only
use the non-LSB-deprecated behaviors.</para>

<VARIABLELIST>

<VARLISTENTRY>
<TERM>-daystart</TERM>
<LISTITEM>
<PARA>
measures times (for -amin, -atime, -cmin, -ctime, -mmin, and -mtime)
from the beginning of today rather than from 24 hours ago.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-follow</TERM>
<LISTITEM>
<PARA>
dereferences symbolic links.  Implies -noleaf.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-maxdepth levels</TERM>
<LISTITEM>
<PARA>
descends at most levels (a non-negative integer) levels of directories
below the command line arguments.  `-maxdepth 0' means only apply the
tests and actions to the command line arguments.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-mindepth levels</TERM>
<LISTITEM>
<PARA>
applies no tests or actions at levels less than levels 
(a non-negative integer). `-mindepth 1' means process 
all files except the command line arguments.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-mount</TERM>
<LISTITEM>
<PARA>
is equivalent to -xdev as specified in the Single UNIX Specification.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-noleaf</TERM>
<LISTITEM>
<PARA>
does not optimize by assuming that directories contain 2 fewer
subdirectories than their hard link count.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-version</TERM>
<LISTITEM>
<PARA>
prints the find version number and exits.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-amin n</TERM>
<LISTITEM>
<PARA>
displays files last accessed n minutes ago.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-anewer file</TERM>
<LISTITEM>
<PARA>
displays files last accessed more recently than file was modified.  -anewer
is affected by -follow only if -follow comes before -anewer on the
command line.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-cmin n</TERM>
<LISTITEM>
<PARA>
displays files with status last changed n minutes ago.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-cnewer file</TERM>
<LISTITEM>
<PARA>
displays files with status last changed more recently than file was modified.
-cnewer is affected by -follow only if -follow comes before -cnewer on
the command line.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-empty</TERM>
<LISTITEM>
<PARA>
displays files that are empty and are either regular or directory files.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-false</TERM>
<LISTITEM>
<PARA>
is always false.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-fstype type</TERM>
<LISTITEM>
<PARA>
displays files on a filesystem of type type.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-gid n</TERM>
<LISTITEM>
<PARA>
displays files with numeric group ID of n.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-ilname pattern</TERM>
<LISTITEM>
<PARA>
is like -lname, but the match is case-insensitive.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-iname pattern</TERM>
<LISTITEM>
<PARA>
is like -name, but the match is case-insensitive.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-inum n</TERM>
<LISTITEM>
<PARA>
displays files with inode number of n.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-ipath path</TERM>
<LISTITEM>
<PARA>
is like -path, but the match is case-insensitive.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-iregex pattern</TERM>
<LISTITEM>
<PARA>
is like -regex, but the match is case-insensitive.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-lname</TERM>
<LISTITEM>
<PARA>
displays files that are symbolic links whose contents match shell 
pattern pattern. The metacharacters do not treat `/' or `.' specially.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-mmin n</TERM>
<LISTITEM>
<PARA>
displays files with data last modified n minutes ago.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-nouser</TERM>
<LISTITEM>
<PARA>
displays files with numeric user ID corresponding to no user.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-nogroup</TERM>
<LISTITEM>
<PARA>
displays files with numeric group ID corresponding to no group.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-path pattern</TERM>
<LISTITEM>
<PARA>
displays files with name matching shell pattern pattern.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-perm +mode</TERM>
<LISTITEM>
<PARA>
displays files with any of the permission bits mode set.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-regex</TERM>
<LISTITEM>
<PARA>
displays files with names matching regular expression pattern. 
This is a match on the whole path, not a search.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-true</TERM>
<LISTITEM>
<PARA>
is always true.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-type c</TERM>
<LISTITEM>
<PARA>
supplements types as specified in the Single UNIX Specification with
the letters
l and s (symbolic links and sockets, respectively).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-uid n</TERM>
<LISTITEM>
<PARA>
displays files with numeric user ID of n.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-used</TERM>
<LISTITEM>
<PARA>
displays files last accessed n days after status was last changed.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-xtype c</TERM>
<LISTITEM>
<PARA>
is equivalent to -type unless the file is a symbolic link.  For symbolic
links: if -follow has not been given, true if the file is a link to a
file of type c; if -follow has been given, true if c is `l'.  In other
words, for symbolic links, -xtype checks the type of the file that
-type does not check.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-fls file</TERM>
<LISTITEM>
<PARA>
is true. Is like -ls but write to file like -fprint.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-fprint file</TERM>
<LISTITEM>
<PARA>
is true. Prints the full file name into file file.  If file does not exist
when find is run, it is created; if it does exist, it is truncated.
The file names ``/dev/stdout'' and ``/dev/stderr'' are handled
specially; they refer to the standard output and standard error
output, respectively.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-fprint0 file</TERM>
<LISTITEM>
<PARA>
is true. Is like -print0 but write to file like -fprint.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-fprintf file format</TERM>
<LISTITEM>
<PARA>
is true. Like -printf but write to file like -fprint.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-print0</TERM>
<LISTITEM>
<PARA>
is true. Prints the full file name on the standard output, followed by a
null character.  This allows file names that contain newlines to be
correctly interpreted by programs that process the find output.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-printf format</TERM>
<LISTITEM>
<PARA>
is true. Prints format on the standard output, interpreting `\' 
escapes and `%' directives. Field widths and precisions can be 
specified as with the `printf' C function. Unlike -print, -printf 
does not add a newline at the end of the string. The escapes and 
directives are:

<VARIABLELIST>

<VARLISTENTRY>
<TERM>\a</TERM>
<LISTITEM>
<PARA>
alarm bell.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>\b</TERM>
<LISTITEM>
<PARA>
backspace.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>\c</TERM>
<LISTITEM>
<PARA>
stops printing from this format immediately and flushes the output.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>\f</TERM>
<LISTITEM>
<PARA>
form feed.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>\n</TERM>
<LISTITEM>
<PARA>
newline.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>\r</TERM>
<LISTITEM>
<PARA>
carriage return.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>\t</TERM>
<LISTITEM>
<PARA>
horizontal tab.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>\v</TERM>
<LISTITEM>
<PARA>
vertical tab.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>\\</TERM>
<LISTITEM>
<PARA>
literal backslash (`\').
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%%</TERM>
<LISTITEM>
<PARA>
literal percent sign.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%a</TERM>
<LISTITEM>
<PARA>
last file access time in the format returned by the C `ctime'
function.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%Ak</TERM>
<LISTITEM>
<PARA>
last file access time in the format specified by k, which is either
`@' or a directive for the C `strftime' function.  The possible values
for k are listed below; some of them might not be available on all
systems, due to differences in `strftime' between systems.


<VARIABLELIST>

<VARLISTENTRY>
<TERM>@</TERM>
<LISTITEM>
<PARA>
seconds since Jan.  1, 1970, 00:00 GMT.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>H</TERM>
<LISTITEM>
<PARA>
hour (00..23).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>I</TERM>
<LISTITEM>
<PARA>
hour (01..12).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>k</TERM>
<LISTITEM>
<PARA>
hour ( 0..23).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>l</TERM>
<LISTITEM>
<PARA>
hour ( 1..12).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>M</TERM>
<LISTITEM>
<PARA>
minute (00..59).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>p</TERM>
<LISTITEM>
<PARA>
locale's AM or PM.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>r</TERM>
<LISTITEM>
<PARA>
time, 12-hour (hh:mm:ss [AP]M).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>S</TERM>
<LISTITEM>
<PARA>
second (00..61).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>T</TERM>
<LISTITEM>
<PARA>
time, 24-hour (hh:mm:ss).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>X</TERM>
<LISTITEM>
<PARA>
locale's time representation (H:M:S).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>Z</TERM>
<LISTITEM>
<PARA>
time zone (e.g., EDT), or nothing if no time zone is determinable.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>a</TERM>
<LISTITEM>
<PARA>
locale's abbreviated weekday name (Sun..Sat).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>A</TERM>
<LISTITEM>
<PARA>
locale's full weekday name, variable length (Sunday..Saturday).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>b</TERM>
<LISTITEM>
<PARA>
locale's abbreviated month name (Jan..Dec).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>B</TERM>
<LISTITEM>
<PARA>
locale's full month name, variable.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>c</TERM>
<LISTITEM>
<PARA>
locale's date and time (Sat Nov 04 12:02:33 EST 1989).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>d</TERM>
<LISTITEM>
<PARA>
day of month (01..31).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>D</TERM>
<LISTITEM>
<PARA>
date (mm/dd/yy).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>h</TERM>
<LISTITEM>
<PARA>
same as b.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>j</TERM>
<LISTITEM>
<PARA>
day of year (001.366).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>m</TERM>
<LISTITEM>
<PARA>
month (01..12).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>U</TERM>
<LISTITEM>
<PARA>
week number of year with Sunday as first day of week (00..53).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>w</TERM>
<LISTITEM>
<PARA>
day of week (0..6).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>W</TERM>
<LISTITEM>
<PARA>
week number of year with Monday as first day of week (00..53).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>x</TERM>
<LISTITEM>
<PARA>
locale's date representation (mm/dd/yy).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>y</TERM>
<LISTITEM>
<PARA>
last two digits of year (00..99).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>Y</TERM>
<LISTITEM>
<PARA>
year (1970...).
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%b</TERM>
<LISTITEM>
<PARA>
file's size in 512-byte blocks (rounded up).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%c</TERM>
<LISTITEM>
<PARA>
last file status change time in the format returned by the C `ctime'
function.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%Ck</TERM>
<LISTITEM>
<PARA>
last file status change time in the format specified by k, which is
the same as for %A.
</PARA>
</LISTITEM>
</VARLISTENTRY>


<VARLISTENTRY>
<TERM>%d</TERM>
<LISTITEM>
<PARA>
file's depth in the directory tree; 0 means the file is a command line
argument.
</PARA>
</LISTITEM>
</VARLISTENTRY>


<VARLISTENTRY>
<TERM>%f</TERM>
<LISTITEM>
<PARA>
file's name with any leading directories removed (only the last
element).
</PARA>
</LISTITEM>
</VARLISTENTRY>


<VARLISTENTRY>
<TERM>%F</TERM>
<LISTITEM>
<PARA>
type of the filesystem the file is on; this value can be used for
-fstype.
</PARA>
</LISTITEM>
</VARLISTENTRY>


<VARLISTENTRY>
<TERM>%g</TERM>
<LISTITEM>
<PARA>
file's group name, or numeric group ID if the group has no name.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%G</TERM>
<LISTITEM>
<PARA>
file's numeric group ID.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%h</TERM>
<LISTITEM>
<PARA>
leading directories of file's name (all but the last element).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%H</TERM>
<LISTITEM>
<PARA>
mommand line argument under which file was found.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%i</TERM>
<LISTITEM>
<PARA>
file's inode number (in decimal).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%k</TERM>
<LISTITEM>
<PARA>
file's size in 1K blocks (rounded up).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%l</TERM>
<LISTITEM>
<PARA>
object of symbolic link (empty string if file is not a symbolic link).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%m</TERM>
<LISTITEM>
<PARA>
file's permission bits (in octal).
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%n</TERM>
<LISTITEM>
<PARA>
number of hard links to file.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%p</TERM>
<LISTITEM>
<PARA>
file's name.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%P</TERM>
<LISTITEM>
<PARA>
file's name with the name of the command line argument under which it
was found removed.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%s</TERM>
<LISTITEM>
<PARA>
file's size in bytes.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%t</TERM>
<LISTITEM>
<PARA>
file's last modification time in the format returned by the C `ctime'
function.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%Tk</TERM>
<LISTITEM>
<PARA>
file's last modification time in the format specified by k, which is
the same as for %A.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%u</TERM>
<LISTITEM>
<PARA>
file's user name, or numeric user ID if the user has no name.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>%U</TERM>
<LISTITEM>
<PARA>
file's numeric user ID.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-ls</TERM>
<LISTITEM>
<PARA>
is true. Lists current file in `ls -dils' format on standard output.  The
block counts are of 1K blocks, unless the environment variable
POSIXLY_CORRECT is set, in which case 512-byte blocks are used.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>Extra Operators</TERM>
<LISTITEM>
<PARA>
The following operators are supported in order of decreasing
precedence and override what is specified in the Single UNIX Specification.

<VARIABLELIST>

<VARLISTENTRY>
<TERM>( expr )</TERM>
<LISTITEM>
<PARA>
force precedence.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>! expr</TERM>
<LISTITEM>
<PARA>
true if expr is false
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>-not expr</TERM>
<LISTITEM>
<PARA>
same as ! expr.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>expr1 expr2</TERM>
<LISTITEM>
<PARA>
and (implied); expr2 is not evaluated if expr1 is false.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>expr1 -a expr2</TERM>
<LISTITEM>
<PARA>
same as expr1 expr2.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>expr1 -and expr2</TERM>
<LISTITEM>
<PARA>
same as expr1 expr2.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>expr1 -o expr2</TERM>
<LISTITEM>
<PARA>
or; expr2 is not evaluated if expr1 is true.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>expr1 -or expr2</TERM>
<LISTITEM>
<PARA>
same as expr1 -o expr2.
</PARA>
</LISTITEM>
</VARLISTENTRY>

<VARLISTENTRY>
<TERM>expr1, expr2</TERM>
<LISTITEM>
<PARA>
list; both expr1 and expr2 are always evaluated.  The value of expr1
is discarded; the value of the list is the value of expr2.
</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>

</PARA>
</LISTITEM>
</VARLISTENTRY>

</VARIABLELIST>
</REFSECT1>

</REFENTRY>
