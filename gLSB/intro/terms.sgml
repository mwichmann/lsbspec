<SECT1 ID="terms">
<TITLE>Terminology</TITLE>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
can
</TERM>
<LISTITEM>
<PARA>
Describes a permissible optional feature or behavior available to
the user or application. The feature or behavior is mandatory for an
implementation that conforms to this document. An application can rely
on the existence of the feature or behavior.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
implementation-defined
</TERM>
<LISTITEM>
<PARA>
Describes a value or
behavior that is not defined by this document but is selected by an
implementor. The value or behavior may vary among implementations
that conform to this document. An application should not rely on the
existence of the value or behavior. An application that relies on such
a value or behavior cannot be assured to be portable across conforming
implementations.  The implementor shall document such a value or behavior
so that it can be used correctly by an application.
</PARA>
<PARA>
Same as implementation-dependent.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
may
</TERM>
<LISTITEM>
<PARA>
Describes a feature or behavior that is optional for an implementation
that conforms to this document. An application should not rely on the
existence of the feature or behavior. An application that relies on such
a feature or behavior cannot be assured to be portable across conforming
implementations.
</PARA>
<PARA>
To avoid ambiguity, the opposite of may is expressed
as need not, instead of may not.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
must
</TERM>
<LISTITEM>
<PARA>
Describes a feature or behavior that is mandatory for an application
or user. An implementation that conforms to this document shall support
this feature or behavior.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
shall
</TERM>
<LISTITEM>
<PARA>
Describes a feature or behavior that is mandatory for an implementation
that conforms to this document. An application can rely on the existence
of the feature or behavior.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
should
</TERM>
<LISTITEM>
<PARA>
For an implementation that conforms to this document, describes a feature
or behavior that is recommended but not mandatory. An application should
not rely on the existence of the feature or behavior. An application that
relies on such a feature or behavior cannot be assured to be portable
across conforming implementations.
</PARA>
<PARA>
For an application, describes a feature or behavior that is recommended
programming practice for optimum portability.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
undefined
</TERM>
<LISTITEM>
<PARA>
Describes the nature of a value or behavior not defined by this document
which results from use of an invalid program construct or invalid
data input.  The value or behavior may vary among implementations that
conform to this document. An application should not rely on the existence
or validity of the value or behavior. An application that relies on any
particular value or behavior cannot be assured to be portable across
conforming implementations.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
unspecified
</TERM>
<LISTITEM>
<PARA>
Describes the nature of a value or behavior not specified by this document
which results from use of a valid program construct or valid data input.
The value or behavior may vary among implementations that conform to this
document. An application should not rely on the existence or validity
of the value or behavior. An application that relies on any particular
value or behavior cannot be assured to be portable across conforming
implementations.
</PARA>
</LISTITEM>
</VARLISTENTRY>
<VARLISTENTRY>
<TERM>
will
</TERM>
<LISTITEM>
<PARA>
Same meaning as shall; shall is the preferred term.
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</SECT1>
