<REFENTRY ID="baselib-sigreturn-2"> <REFMETA>
<REFENTRYTITLE>sigreturn</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>sigreturn
</REFNAME>
<REFPURPOSE>
return from signal handler and cleanup stack frame
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>2 April 2001</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>int 
  <FUNCTION>sigreturn</FUNCTION></FUNCDEF>
 <PARAMDEF>unsigned long 
  <PARAMETER><REPLACEABLE>__unused</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>2 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
When the Linux kernel creates the stack frame for a signal 
handler, a call to <FUNCTION>sigreturn</FUNCTION> is inserted 
into the stack frame so that the the signal handler will call 
<FUNCTION>sigreturn</FUNCTION> upon return. This inserted call 
to <FUNCTION>sigreturn</FUNCTION> cleans up the stack so that 
the process can restart from where it was interrupted by the signal.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>sigreturn</FUNCTION> never returns.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Warning
</TITLE>
<PARA>
<FUNCTION>sigreturn</FUNCTION> is used by the kernel to implement 
signal handlers. It should never be called directly. Better yet, 
the specific use of <PARAMETER>__unused</PARAMETER> varies depending 
on the architecture.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Files
</TITLE>
<PARA>
<FILENAME>/usr/src/linux/arch/i386/kernel/signal.c</FILENAME>
</PARA>
<PARA>
<FILENAME>/usr/src/linux/arch/alpha/kernel/entry.s</FILENAME>
</PARA>
</REFSECT1>

<!-- LDP GENERAL PUBLIC LICENSE  -->
<!-- Version 1a, November 1998   -->

</REFENTRY>
