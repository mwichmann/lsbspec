<REFENTRY ID="baselib-getservent-3"> <REFMETA>
<REFENTRYTITLE>getservent</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>getservent
</REFNAME>
<REFPURPOSE>
get service entry
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>13 April  2001</DATE>
</REFSYNOPSISDIVINFO>
<SYNOPSIS>
#include &lt;netdb.h>

struct servent *getservent(void);
</SYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>13 April 2001</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
The getservent() function reads the next line from the file /etc/services and returns a structure servent containing the broken out fields from the line. The /etc/services file is opened if necessary.
</PARA><PARA>
The servent structure is defined in &lt;netdb.h> as follows:
</PARA>
<VARIABLELIST>
<VARLISTENTRY>
<TERM>
              struct servent {
</TERM>
<LISTITEM>
<PARA>
                      char    *s_name;        /* official service name */
</PARA><PARA>
                      char    **s_aliases;    /* alias list */
</PARA><PARA>
                      int     s_port;         /* port number */
</PARA><PARA>
                      char    *s_proto;       /* protocol to use */
</PARA><PARA>
              }
</PARA>
</LISTITEM>
</VARLISTENTRY>
</VARIABLELIST>
</REFSECT1>

<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
getservent() returns the servent structure, or a NULL pointer if an error occurs or the end of the file is reached.
</PARA>
</REFSECT1>

<REFSECT1>
<TITLE>
Files
</TITLE>
<PARA>
/etc/services services database file
</PARA>
</REFSECT1>
<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->
</REFENTRY>
