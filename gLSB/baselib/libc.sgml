<SECT1 ID=libc>
<TITLE>libc</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libc</ENTRY>
</ROW>
<ROW>
<ENTRY>Runtime Path:</ENTRY>
<ENTRY>libc.so.6</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behaviour of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
BSD 4.4 Lite version 2<FOOTNOTE ID="std-131-7">
<PARA>
BSD 4.4 Lite version 2</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
ISO/IEC 9899: 1999, Programming Languages --C<FOOTNOTE ID="std-131-25">
<PARA>
ISO/IEC 9899: 1999, Programming Languages --C</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
GNU/Linux defacto standard<FOOTNOTE ID="std-131-20">
<PARA>
GNU/Linux defacto standard</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-131-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
IEEE Std POSIX.1-1996 [ISO/IEC 9945-1:1996]<FOOTNOTE ID="std-131-3">
<PARA>
IEEE Std POSIX.1-1996 [ISO/IEC 9945-1:1996]</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
RFC 1831 & 1832<FOOTNOTE ID="std-131-8">
<PARA>
RFC 1831 & 1832</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
CAE Specification, February 1997, Networking Services (XNS), Issue 5
(ISBN: 1-85912-165-9, C523)<FOOTNOTE ID="std-131-15">
<PARA>
CAE Specification, February 1997, Networking Services (XNS), Issue 5
(ISBN: 1-85912-165-9, C523)</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)<FOOTNOTE ID="std-131-5">
<PARA>
CAE Specification, January 1997, System Interfaces and Headers (XSH),
Issue 5 (ISBN: 1-85912-181-0, C606)</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>System Calls</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__fxstat<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>fchmod<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>initgroups</ENTRY><ENTRY>pread<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setreuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__getpgid</ENTRY><ENTRY>fchown<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ioctl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putmsg<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setrlimit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__lxstat<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>fcntl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>kill<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>pwrite<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setsid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__xmknod</ENTRY><ENTRY>fdatasync<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>killpg<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>read<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__xstat<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>fdetach<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>lchown<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>readdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sleep<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>access<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>flock</ENTRY><ENTRY>link<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>readlink<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>statfs</ENTRY></ROW>
<ROW><ENTRY>acct</ENTRY><ENTRY>fork<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>lockf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>readv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>statvfs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>alarm<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fstatfs</ENTRY><ENTRY>lockf64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>rename<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>symlink<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>brk<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fsync<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>lseek<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>rmdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sync<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>chdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ftime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mkdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sbrk<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sysconf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>chmod<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ftruncate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mkfifo<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_get_priority_max<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>time<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>chown<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getegid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mlock<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_get_priority_min<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>times<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>chroot<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>geteuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mlockall<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_getparam<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>truncate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>clock<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mmap<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_getscheduler<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ulimit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>close<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getgroups<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mprotect<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_rr_get_interval<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>umask<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>closedir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getitimer<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>msync<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_setparam<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>uname<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>creat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getmsg<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>munlock<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_setscheduler<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>unlink<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>dup<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getpgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>munlockall<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sched_yield<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>utime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>dup2<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getpgrp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>munmap<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>select<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>vfork<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>execl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getpid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>nanosleep<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setegid</ENTRY><ENTRY>wait<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>execle<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getppid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>nice<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>seteuid</ENTRY><ENTRY>wait3<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>execlp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getpriority<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>open<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wait4</ENTRY></ROW>
<ROW><ENTRY>execv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getrlimit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>opendir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setitimer<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>waitid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>execve<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getrusage<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>pathconf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setpgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>waitpid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>execvp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getsid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>pause<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setpgrp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>write<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>exit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>pipe<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setpriority<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>writev<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fchdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getwd<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>poll<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setregid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>errno<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Standard I/O</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>_IO_feof</ENTRY><ENTRY>fgetc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ftell<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putchar<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sscanf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>_IO_getc</ENTRY><ENTRY>fgetpos<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ftello<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putchar_unlocked<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>telldir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>_IO_putc</ENTRY><ENTRY>fgets<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fwrite<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>puts<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tempnam<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>_IO_puts</ENTRY><ENTRY>fileno<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putw<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ungetc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>asprintf<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>fopen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getc_unlocked<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>remove<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vasprintf<FOOTNOTEREF LINKEND="std-131-10"></ENTRY></ROW>
<ROW><ENTRY>clearerr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getchar<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>rewind<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vdprintf<FOOTNOTEREF LINKEND="std-131-10"></ENTRY></ROW>
<ROW><ENTRY>ctermid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fputc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getchar_unlocked<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>rewinddir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vfprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>dprintf<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>fputs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>gets<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>scanf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fclose(2)<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fread<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getw<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>seekdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vsnprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fdopen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>freopen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>pclose<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setbuf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vsprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>feof<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fscanf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>popen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setbuffer<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>ferror<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fseek<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>printf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setvbuf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>fflush<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fseeko<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>snprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>fflush_unlocked<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fsetpos<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>putc_unlocked<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>_IO_2_1_stderr_</ENTRY><ENTRY>_IO_2_1_stdout_</ENTRY><ENTRY>stdin</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>_IO_2_1_stdin_</ENTRY><ENTRY>stderr</ENTRY><ENTRY>stdout</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Signal Handling</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__libc_current_sigrtmax<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigaction<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>siggetmask</ENTRY><ENTRY>sigorset</ENTRY><ENTRY>sigsetmask</ENTRY></ROW>
<ROW><ENTRY>__libc_current_sigrtmin<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigaddset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sighold<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigpause<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigstack<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__sigpause<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigaltstack</ENTRY><ENTRY>sigignore<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigpending<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigsuspend<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__sigsetjmp<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigandset</ENTRY><ENTRY>siginterrupt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigprocmask<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigtimedwait<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__sysv_signal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>sigblock</ENTRY><ENTRY>sigisemptyset</ENTRY><ENTRY>sigqueue<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigvec</ENTRY></ROW>
<ROW><ENTRY>bsd_signal<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigdelset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigismember<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigrelse<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigwait<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>psignal<FOOTNOTEREF LINKEND="std-131-7"></ENTRY><ENTRY>sigemptyset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>siglongjmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigreturn</ENTRY><ENTRY>sigwaitinfo</ENTRY></ROW>
<ROW><ENTRY>raise<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigfillset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>signal<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>sigset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Standard Library</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>_Exit<FOOTNOTEREF LINKEND="std-131-25"></ENTRY><ENTRY>drand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>globfree64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>llabs<FOOTNOTEREF LINKEND="std-131-25"></ENTRY><ENTRY>realpath<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__assert_fail<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>ecvt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>grantpt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>lldiv<FOOTNOTEREF LINKEND="std-131-25"></ENTRY><ENTRY>remque<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__bzero<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>erand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>hcreate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>longjmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>seed48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__errno_location</ENTRY><ENTRY>error<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>hdestroy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>lrand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setstate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__secure_getenv<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>fcvt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>hsearch<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>lsearch<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>srand<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>_exit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fnmatch<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>htonl<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>makecontext<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>srand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>_longjmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>fpathconf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>htons<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>malloc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>srandom<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>_setjmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>free<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>inet_addr<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>memmem<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtod<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>a64l<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ftrylockfile<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>inet_aton<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>mkstemp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtol<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>abort<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ftw<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>inet_ntoa<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>mktemp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtoul<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>abs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>funlockfile<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>initstate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mrand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>swapcontext<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>atexit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>gcvt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>insque<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>nftw<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>syslog<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>atof<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getcwd<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isatty<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>nrand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>system<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>atoi<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getdate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isblank</ENTRY><ENTRY>ntohl<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>textdomain</ENTRY></ROW>
<ROW><ENTRY>atol<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getenv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isinf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY><ENTRY>ntohs<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>tmpfile<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>basename<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getlogin<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isinfl<FOOTNOTEREF LINKEND="std-131-25"></ENTRY><ENTRY>openlog<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tmpfile64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY></ROW>
<ROW><ENTRY>bindtextdomain</ENTRY><ENTRY>getopt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isnan<FOOTNOTEREF LINKEND="std-131-25"></ENTRY><ENTRY>perror<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tmpnam<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>bsearch<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getopt_long<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>isnanf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY><ENTRY>ptsname<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ttyname<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>calloc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getsubopt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isnanl<FOOTNOTEREF LINKEND="std-131-25"></ENTRY><ENTRY>putenv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ttyname_r<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>closelog<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>gettimeofday<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>jrand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>qsort<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>unlockpt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>cuserid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>glob<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>l64a<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>rand<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>usleep<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>dirname<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>glob64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>labs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>random<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wordexp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>div<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>globfree<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ldiv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>realloc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wordfree<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__environ<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>_sys_errlist</ENTRY><ENTRY>optarg</ENTRY><ENTRY>optind</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>_environ<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>environ</ENTRY><ENTRY>opterr</ENTRY><ENTRY>optopt</ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Localization Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__dcgettext<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>catgets<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>gettext</ENTRY><ENTRY>localeconv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setlocale<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>catclose<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>catopen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iconv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>nl_langinfo<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>_nl_msg_cat_cntr</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Socket Interface</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>_h_errno<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>gethostid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>listen<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>sendmsg<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>shutdown<FOOTNOTEREF LINKEND="std-131-15"></ENTRY></ROW>
<ROW><ENTRY>accept<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>gethostname<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>recv<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>sendto<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>socket<FOOTNOTEREF LINKEND="std-131-15"></ENTRY></ROW>
<ROW><ENTRY>bind<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getpeername<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>recvfrom<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>sethostid</ENTRY><ENTRY>socketpair<FOOTNOTEREF LINKEND="std-131-15"></ENTRY></ROW>
<ROW><ENTRY>bindresvport<FOOTNOTEREF LINKEND="std-131-7"></ENTRY><ENTRY>getsockname<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>recvmsg<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>sethostname</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>connect<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getsockopt<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>send<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>setsockopt<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>RPC Interfaces</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>authdes_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>pmap_set<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcudp_enablecache<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_int<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_sizeof<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>authdes_getucred<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>pmap_unset<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcunix_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_int16_t<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_string<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>authdes_pk_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>registerrpc</ENTRY><ENTRY>svcunixfd_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_int32_t<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_u_char<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>authnone_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_exit<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_accepted_reply<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_int8_t<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_u_int<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>authunix_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_getreq<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_array<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_key_netstarg<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_u_long<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>authunix_create_default<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_getreqset<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_authdes_cred<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_key_netstres<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_u_short<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_broadcast<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_register<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_authdes_verf<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_keybuf<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_uint16_t<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_run<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_authunix_parms<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_keystatus<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_uint32_t<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_pcreateerror<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_sendreply<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_bool<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_long<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_uint8_t<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_perrno<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_unregister<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_bytes<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_netnamestr<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_union<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_perror<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_auth<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_callhdr<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_netobj<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_unixcred<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_spcreateerror<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_decode<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_callmsg<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_opaque<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_vector<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_sperrno<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_noproc<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_char<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_opaque_auth<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_void<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnt_sperror<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_noprog<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_cryptkeyarg<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_pmap<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_wrapstring<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clntraw_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_progvers<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_cryptkeyarg2<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_pmaplist<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdrmem_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clnttcp_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_systemerr<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_cryptkeyres<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_pointer<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdrrec_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clntudp_bufcreate<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcerr_weakauth<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_des_block<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_reference<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdrrec_endofrecord<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clntudp_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcfd_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_double<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_rejected_reply<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdrrec_eof<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>clntunix_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcraw_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_enum<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_replymsg<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdrrec_skiprecord<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>pmap_getmaps<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svctcp_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_float<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_rmtcall_args<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdrstdio_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY></ROW>
<ROW><ENTRY>pmap_getport<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcudp_bufcreate<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_free<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_rmtcallres<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>pmap_rmtcall<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svcudp_create<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_getcredres<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>xdr_short<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>rpc_createerr<FOOTNOTEREF LINKEND="std-131-8"></ENTRY><ENTRY>svc_fdset</ENTRY><ENTRY>svcauthdes_stats</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Wide Characters</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__mbrlen<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>mbrtowc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vwscanf</ENTRY><ENTRY>wcsncpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstoul<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__wcstod_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>mbsinit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcpcpy</ENTRY><ENTRY>wcsnlen</ENTRY><ENTRY>wcstoull</ENTRY></ROW>
<ROW><ENTRY>__wcstof_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>mbsnrtowcs</ENTRY><ENTRY>wcpncpy</ENTRY><ENTRY>wcsnrtombs</ENTRY><ENTRY>wcstoumax</ENTRY></ROW>
<ROW><ENTRY>__wcstol_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>mbsrtowcs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcrtomb<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcspbrk</ENTRY><ENTRY>wcstouq</ENTRY></ROW>
<ROW><ENTRY>__wcstold_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>mbstowcs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcscasecmp</ENTRY><ENTRY>wcsrchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcswcs</ENTRY></ROW>
<ROW><ENTRY>__wcstoll_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>mbtowc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcscat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcsrtombs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcswidth<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__wcstoul_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>putwc</ENTRY><ENTRY>wcschr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcsspn<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcsxfrm<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__wcstoull_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>putwchar</ENTRY><ENTRY>wcscmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcsstr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wctob<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>btowc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>swprintf</ENTRY><ENTRY>wcscoll<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstod<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wctomb<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fgetws</ENTRY><ENTRY>swscanf</ENTRY><ENTRY>wcscpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstof</ENTRY><ENTRY>wctrans<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fputwc</ENTRY><ENTRY>towctrans<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcscspn<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstoimax</ENTRY><ENTRY>wctype<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fputws</ENTRY><ENTRY>towlower</ENTRY><ENTRY>wcsdup</ENTRY><ENTRY>wcstok<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcwidth<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fwide</ENTRY><ENTRY>towupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcsftime</ENTRY><ENTRY>wcstol<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wmemchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fwprintf</ENTRY><ENTRY>ungetwc</ENTRY><ENTRY>wcslen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstold</ENTRY><ENTRY>wmemcmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>fwscanf</ENTRY><ENTRY>vfwprintf</ENTRY><ENTRY>wcsncasecmp</ENTRY><ENTRY>wcstoll</ENTRY><ENTRY>wmemcpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>mblen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vswscanf</ENTRY><ENTRY>wcsncat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstombs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wmemmove<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>mbrlen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>vwprintf</ENTRY><ENTRY>wcsncmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>wcstoq</ENTRY><ENTRY>wmemset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>String Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__stpcpy<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>ffs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strncasecmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtof</ENTRY></ROW>
<ROW><ENTRY>__strdup<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>index<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strncat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtoimax</ENTRY></ROW>
<ROW><ENTRY>__strtod_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>memccpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strncmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtok<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>__strtof_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>memchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcoll<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strncpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtok_r</ENTRY></ROW>
<ROW><ENTRY>__strtok_r<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>memcmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strndup</ENTRY><ENTRY>strtold</ENTRY></ROW>
<ROW><ENTRY>__strtol_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>memcpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcspn<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strnlen</ENTRY><ENTRY>strtoll</ENTRY></ROW>
<ROW><ENTRY>__strtold_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>memmove<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strdup<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strpbrk<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtoq</ENTRY></ROW>
<ROW><ENTRY>__strtoll_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>memset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strerror<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strptime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtoull</ENTRY></ROW>
<ROW><ENTRY>__strtoul_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>rindex<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strerror_r</ENTRY><ENTRY>strrchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strtoumax</ENTRY></ROW>
<ROW><ENTRY>__strtoull_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>stpcpy</ENTRY><ENTRY>strfmon<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strsep</ENTRY><ENTRY>strtouq</ENTRY></ROW>
<ROW><ENTRY>bcmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>stpncpy</ENTRY><ENTRY>strfry</ENTRY><ENTRY>strsignal</ENTRY><ENTRY>strverscmp</ENTRY></ROW>
<ROW><ENTRY>bcopy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcasecmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strftime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strspn<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strxfrm<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>bzero<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strcasestr</ENTRY><ENTRY>strlen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>strstr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>swab<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>IPC Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>ftok<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>msgrcv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>semget<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>shmctl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>msgctl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>msgsnd<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>semop<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>shmdt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>msgget<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>semctl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>shmat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>shmget<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Regular Expressions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>re_comp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>re_match</ENTRY><ENTRY>re_set_registers</ENTRY><ENTRY>regexec<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>re_compile_fastmap</ENTRY><ENTRY>re_match_2</ENTRY><ENTRY>re_set_syntax</ENTRY><ENTRY>regfree<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>re_compile_pattern</ENTRY><ENTRY>re_search</ENTRY><ENTRY>regcomp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>res_init</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>re_exec<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>re_search_2</ENTRY><ENTRY>regerror<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>rexec</ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>loc1<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>locs</ENTRY><ENTRY>re_syntax_options</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>loc2</ENTRY><ENTRY>re_max_failures</ENTRY><ENTRY>rexecoptions</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Character Type Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__ctype_get_mb_cur_max<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>isdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswalnum<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswlower<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>toascii<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>_tolower<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isgraph<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswalpha<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswprint<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tolower<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>_toupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>islower<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswblank</ENTRY><ENTRY>iswpunct<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>toupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>isalnum<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isprint<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswcntrl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswspace<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>isalpha<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>ispunct<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswctype</ENTRY><ENTRY>iswupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>isascii<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isspace<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswxdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>iscntrl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>iswgraph<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>isxdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Data Symbols</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__ctype_tolower<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>__ctype_toupper</ENTRY><ENTRY></ENTRY><ENTRY></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Time Function</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>asctime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>difftime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>mktime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tzname<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>ctime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>gmtime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>stime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tzset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>daylight<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>localtime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>timezone</ENTRY><ENTRY>ualarm<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Terminal Interface Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>cfgetispeed<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>cfsetospeed<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcflow<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcgetpgrp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcsetattr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>cfgetospeed<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>cfsetspeed</ENTRY><ENTRY>tcflush<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcgetsid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcsetpgrp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>cfsetispeed<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcdrain<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcgetattr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>tcsendbreak<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>System Database Interface</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>endaliasent</ENTRY><ENTRY>ether_hostton</ENTRY><ENTRY>gethostbyaddr<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getrpcbynumber</ENTRY><ENTRY>setmntent</ENTRY></ROW>
<ROW><ENTRY>endfsent</ENTRY><ENTRY>ether_line</ENTRY><ENTRY>gethostbyname</ENTRY><ENTRY>getrpcent</ENTRY><ENTRY>setnetent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY></ROW>
<ROW><ENTRY>endhostent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>ether_ntoa</ENTRY><ENTRY>gethostent</ENTRY><ENTRY>getrpcport</ENTRY><ENTRY>setnetgrent</ENTRY></ROW>
<ROW><ENTRY>endmntent</ENTRY><ENTRY>ether_ntoa_r</ENTRY><ENTRY>getmntent</ENTRY><ENTRY>getservbyname</ENTRY><ENTRY>setprotoent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY></ROW>
<ROW><ENTRY>endnetent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>ether_ntohost</ENTRY><ENTRY>getnetbyaddr<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getservbyport<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>setrpcent</ENTRY></ROW>
<ROW><ENTRY>endnetgrent</ENTRY><ENTRY>fgetgrent</ENTRY><ENTRY>getnetbyname</ENTRY><ENTRY>getservent</ENTRY><ENTRY>setservent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY></ROW>
<ROW><ENTRY>endprotoent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>fgetspent</ENTRY><ENTRY>getnetent</ENTRY><ENTRY>getspent</ENTRY><ENTRY>setspent</ENTRY></ROW>
<ROW><ENTRY>endrpcent</ENTRY><ENTRY>getaliasbyname</ENTRY><ENTRY>getnetgrent</ENTRY><ENTRY>getspnam</ENTRY><ENTRY>setttyent</ENTRY></ROW>
<ROW><ENTRY>endservent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getaliasent</ENTRY><ENTRY>getprotobyname</ENTRY><ENTRY>getttyent</ENTRY><ENTRY>setutent</ENTRY></ROW>
<ROW><ENTRY>endspent</ENTRY><ENTRY>getfsent</ENTRY><ENTRY>getprotobynumber<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY>getutent</ENTRY><ENTRY>setutxent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY></ROW>
<ROW><ENTRY>endttyent</ENTRY><ENTRY>getgrgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getprotoent</ENTRY><ENTRY>getutxent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>endutent</ENTRY><ENTRY>getgrgid_r</ENTRY><ENTRY>getpwnam_r</ENTRY><ENTRY>setaliasent</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>endutxent</ENTRY><ENTRY>getgrnam</ENTRY><ENTRY>getpwuid_r</ENTRY><ENTRY>setfsent</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>ether_aton</ENTRY><ENTRY>getgrnam_r</ENTRY><ENTRY>getrpcbyname</ENTRY><ENTRY>sethostent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>User/Group Management</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>endgrent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getgrent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getpwnam</ENTRY><ENTRY>setgrent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>endpwent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getpwent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>getpwuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY>setpwent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>ELF Magic</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__divdi3</ENTRY><ENTRY>__mempcpy<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>_obstack_begin<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>_obstack_newchunk<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Large File Support</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE></TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW><ENTRY>__fxstat64</ENTRY><ENTRY>__xstat64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>fopen64</ENTRY><ENTRY>lseek64</ENTRY><ENTRY>open64</ENTRY></ROW>
<ROW><ENTRY>__lxstat64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY><ENTRY>creat64</ENTRY><ENTRY>ftruncate64</ENTRY><ENTRY>mmap64</ENTRY><ENTRY>readdir64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libc-ddefs>
<TITLE> Data Definitions for libc</TITLE>
<PARA>
</PARA>
<SECT2>
<TITLE>assert.h</TITLE>
<PARA>
</PARA>
<SCREEN>

void __assert_fail (char, char, unsigned int, char);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ctype.h</TITLE>
<PARA>
</PARA>
<SCREEN>

unsigned short __ctype_b;
__int32_t __ctype_tolower;
__int32_t __ctype_toupper;
int _tolower (int);
int _toupper (int);
int isalnum (int);
int isalpha (int);
int isascii (int);
int iscntrl (int);
int isdigit (int);
int isgraph (int);
int islower (int);
int isprint (int);
int ispunct (int);
int isspace (int);
int isupper (int);
int isxdigit (int);
int toascii (int);
int tolower (int);
int toupper (int);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>dirent.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef Unknown Type:"" unknown DIR;


void rewinddir (DIR);
void seekdir (DIR, long);
long telldir (DIR);
int closedir (DIR);
DIR opendir (char);
dirent readdir (DIR);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>fcntl.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int creat (char, __mode_t);
int fcntl (int, int, ...);
int open (char, int, ...);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>fnmatch.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int fnmatch (char, char, int);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ftw.h</TITLE>
<PARA>
</PARA>
<SCREEN>
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glob.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef struct
{

  __size_t gl_pathc;
  char gl_pathv;
  __size_t gl_offs;
  int gl_flags;
  Unknown Type:"" unknown gl_closedir;
  Unknown Type:"" unknown gl_readdir;
  Unknown Type:"" unknown gl_opendir;
  Unknown Type:"" unknown gl_lstat;
  Unknown Type:"" unknown gl_stat;
}
glob_t;


int glob (char, int, int (, glob_t); void globfree (glob_t);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>grp.h</TITLE>
<PARA>
</PARA>
<SCREEN>
struct group
{

  char gr_name;
  char gr_passwd;
  Unknown Type:"" unknown gr_gid;
  char gr_mem;
}


void endgrent (void);
group fgetgrent ();
group getgrent (void);
group getgrgid (__gid_t);
group getgrnam (char);
int initgroups (char, __gid_t);
void setgrent (void);
int getgrgid_r (__gid_t, struct group, char, struct group);
int getgrnam_r (char, struct group, char, struct group);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>iconv.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef void iconv_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>inttypes.h</TITLE>
<PARA>
</PARA>
<SCREEN>

intmax_t strtoimax (char, char, int);
uintmax_t strtoumax (char, char, int);
intmax_t wcstoimax (int);
uintmax_t wcstoumax (int);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>langinfo.h</TITLE>
<PARA>
</PARA>
<SCREEN>

char nl_langinfo ();
</SCREEN>
</SECT2>
<SECT2>
<TITLE>locale.h</TITLE>
<PARA>
</PARA>
<SCREEN>
struct lconv
{

  char decimal_point;
  char thousands_sep;
  char grouping;
  char int_curr_symbol;
  char currency_symbol;
  char mon_decimal_point;
  char mon_thousands_sep;
  char mon_grouping;
  char positive_sign;
  char negative_sign;
  char int_frac_digits;
  char frac_digits;
  char p_cs_precedes;
  char p_sep_by_space;
  char n_cs_precedes;
  char n_sep_by_space;
  char p_sign_posn;
  char n_sign_posn;
}


lconv localeconv (void);
char setlocale (int, char);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>monetary.h</TITLE>
<PARA>
</PARA>
<SCREEN>
</SCREEN>
</SECT2>
<SECT2>
<TITLE>nl_types.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef void nl_catd;


int catclose (nl_catd);
char catgets (nl_catd, int, int, char);
nl_catd catopen (char, int);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>pwd.h</TITLE>
<PARA>
</PARA>
<SCREEN>
struct passwd
{

  char pw_name;
  char pw_passwd;
  Unknown Type:"" unknown pw_uid;
  Unknown Type:"" unknown pw_gid;
  char pw_gecos;
  char pw_dir;
  char pw_shell;
}


void endpwent (void);
passwd getpwent (void);
passwd getpwnam (char);
passwd getpwuid (__uid_t);
void setpwent (void);
int getpwnam_r (char, struct passwd, char, struct passwd);
int getpwuid_r (__uid_t, struct passwd, char, struct passwd);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>regex.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef unsigned long reg_syntax_t;

typedef int regoff_t;

typedef struct re_pattern_buffer
{

  unsigned char buffer;
  unsigned long allocated;
  unsigned long used;
  reg_syntax_t syntax;
  char fastmap;
  char translate;
  size_t re_nsub;
  unsigned int can_be_null;
  unsigned int regs_allocated;
  unsigned int fastmap_accurate;
  unsigned int no_sub;
  unsigned int not_bol;
  unsigned int not_eol;
  unsigned int newline_anchor;
}
regex_t;

typedef struct
{

  regoff_t rm_so;
  regoff_t rm_eo;
}
regmatch_t;


reg_syntax_t re_syntax_options;
int regcomp (regex_t, char, int);
size_t regerror (int, regex_t, char, size_t);
int regexec (regex_t, char, size_t, regmatch_t, int);
void regfree (regex_t);
int re_compile_fastmap (struct re_pattern_buffer);
char re_compile_pattern (char, size_t, struct re_pattern_buffer);
int re_match (struct re_pattern_buffer, char, int, int, struct re_registers);
int re_match_2 (struct re_pattern_buffer, char, int, char, int, int,
		struct re_registers, int);
int re_search (struct re_pattern_buffer, char, int, int, int,
	       struct re_registers);
int re_search_2 (struct re_pattern_buffer, char, int, char, int, int, int,
		 struct re_registers, int);
void re_set_registers (struct re_pattern_buffer, struct re_registers,
		       unsigned int, regoff_t, regoff_t);
reg_syntax_t re_set_syntax (reg_syntax_t);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>regexp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

char loc1;
char loc2;
char locs;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sched.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int sched_get_priority_max (int);
int sched_get_priority_min (int);
int sched_getparam (__pid_t, struct sched_param);
int sched_getscheduler (__pid_t);
int sched_rr_get_interval (__pid_t, struct timespec);
int sched_setparam (__pid_t, struct sched_param);
int sched_setscheduler (__pid_t, int, struct sched_param);
int sched_yield (void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>search.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef Unknown Type:"" unknown ACTION;

typedef struct entry
{

  char key;
  void data;
}
ENTRY;


int hcreate ();
ENTRY hsearch (ENTRY, ACTION);
void insque (void, void);
void lsearch (void, void, __compar_fn_t);
void remque (void);
void hdestroy (void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>setjmp.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef struct __jmp_buf_tag
{

  Unknown Type:"" unknown __jmpbuf;
  int __mask_was_saved;
  Unknown Type:"" unknown __saved_mask;
}
jmp_buf;

typedef typedef struct __jmp_buf_tag
{

  Unknown Type:"" unknown __jmpbuf;
  int __mask_was_saved;
  Unknown Type:"" unknown __saved_mask;
}
jmp_buf;
sigjmp_buf;


int __sigsetjmp (jmp_buf, int);
void longjmp (jmp_buf, int);
void siglongjmp (sigjmp_buf, int);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>signal.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef Unknown Type:"" unknown sigset_t;

typedef Unknown Type:"" unknown __sighandler_t;


int __libc_current_sigrtmax (void);
int __libc_current_sigrtmin (void);
int __sigpause (int, int);
__sighandler_t __sysv_signal (int, __sighandler_t);
int killpg (__pid_t, int);
void psignal (int, char);
int raise (int);
int sigaddset (sigset_t, int);
int sigdelset (sigset_t, int);
int sigemptyset (sigset_t);
int sigfillset (sigset_t);
int siggetmask (void);
int siginterrupt (int, int);
int sigismember (sigset_t, int);
int sigpending (sigset_t);
int sigstack (struct sigstack, struct sigstack);
int sigaction (int, struct sigaction, struct sigaction);
int sigwait (sigset_t, int);
int kill (__pid_t, int);
int sigaltstack (struct sigaltstack, struct sigaltstack);
int sigblock (int);
__sighandler_t signal (int, __sighandler_t);
int sigpause (int);
int sigprocmask (int, sigset_t, sigset_t);
int sigreturn (struct sigcontext);
int sigsetmask (int);
int sigsuspend (sigset_t);
int sigvec (int, struct sigvec, struct sigvec);
int sigqueue (__pid_t, int,, enum sigval);
int sigwaitinfo (sigset_t, siginfo_t);
int sigtimedwait (sigset_t, siginfo_t, struct timespec);
__sighandler_t ssignal (int, __sighandler_t);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stdio.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef Unknown Type:"" unknown FILE;

typedef Unknown Type:"" unknown fpos_t;


void clearerr (FILE);
char ctermid (char);
int fclose (FILE);
FILE fdopen (int, char);
int fflush_unlocked (FILE);
int fileno (FILE);
FILE fopen (char, char);
int fprintf (FILE, char, ...);
int fputc (int, FILE);
FILE freopen (char, char, FILE);
int fscanf (FILE, char, ...);
int fseek (FILE, long, int);
int getchar (void);
int getw (FILE);
int pclose (FILE);
void perror (char);
FILE popen (char, char);
int printf (char, ...);
int putc_unlocked (int, FILE);
int putchar (int);
int putchar_unlocked (int);
int putw (int, FILE);
int remove (char);
int rename (char, char);
void rewind (FILE);
int scanf (char, ...);
void setbuf (FILE, char);
int sprintf (char, char, ...);
int sscanf (char, char, ...);
FILE stderr;
FILE stdin;
FILE stdout;
char tempnam (char, char);
FILE tmpfile (void);
char tmpnam (char);
char tmpnam_r (char);
int vfprintf (FILE, char, __gnuc_va_list);
int vprintf (char, __gnuc_va_list);
int feof (FILE);
int ferror (FILE);
int fflush (FILE);
int fgetc (FILE);
int fgetpos (FILE, fpos_t);
char fgets (char, int, FILE);
int fputs (char, FILE);
int fsetpos (FILE, fpos_t);
long ftell (FILE);
int getc (FILE);
char gets (char);
int putc (int, FILE);
int puts (char);
int setvbuf (FILE, char, int);
int snprintf (char, char, ...);
int ungetc (int, FILE);
int vsnprintf (char, char, __gnuc_va_list);
int vsprintf (char, char, __gnuc_va_list);
int ftrylockfile (FILE);
void funlockfile (FILE);
void setbuffer (FILE, char);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stdlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef Unknown Type:"" unknown __compar_fn_t;

typedef struct
{

  int quot;
  int rem;
}
div_t;

typedef struct
{

  long quot;
  long rem;
}
ldiv_t;


char __secure_getenv (char);
double __strtod_internal (char, char, int);
float __strtof_internal (char, char, int);
long __strtol_internal (char, char, int, int);
long double __strtold_internal (char, char, int);
long long __strtoll_internal (char, char, int, int);
unsigned long __strtoul_internal (char, char, int, int);
unsigned long long __strtoull_internal (char, char, int, int);
long a64l (char);
void abort (void);
int abs (int);
int atexit (void ();
	    double atof (char);
	    int atoi (char);
	    long atol (char);
	    void bsearch (void, void, __compar_fn_t);
	    div_t div (int, int);
	    double drand48 (void);
	    char ecvt (double, int, int, int);
	    double erand48 (unsigned short);
	    void exit (int);
	    char fcvt (double, int, int, int);
	    char gcvt (double, int, char);
	    char getenv (char);
	    long jrand48 (unsigned short);
	    char l64a (long);
	    long labs (long);
	    ldiv_t ldiv (long, long);
	    long lrand48 (void);
	    int mblen (char);
	    int mbtowc (char);
	    int mkstemp (char);
	    char mktemp (char);
	    long mrand48 (void);
	    long nrand48 (unsigned short);
	    int putenv (char);
	    void qsort (void, __compar_fn_t);
	    int rand (void);
	    unsigned short seed48 (unsigned short);
	    void srand48 (long);
	    int wctomb (char);
	    int system (char);
	    void calloc ();
	    void free (void);
	    void initstate (unsigned int, void);
	    void malloc ();
	    void realloc (void);
	    void setstate (void);
	    void srand (unsigned int);
	    void srandom (unsigned int);
	    double strtod (char, char);
	    long strtol (char, char, int);
	    long long strtoll (char, char, int);
	    long long strtoq (char, char, int);
	    unsigned long strtoul (char, char, int);
	    unsigned long long strtoull (char, char, int);
	    unsigned long long strtouq (char, char, int);
	    char realpath (char, char);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>string.h</TITLE>
<PARA>
</PARA>
<SCREEN>

void __bzero (void);
char __strdup (char);
char __strtok_r (char, char, char);
void bcopy (void, void);
void memchr (void, int);
int memcmp (void, void);
void memcpy (void, void);
void memmove (void, void);
void memset (void, int);
char strcat (char, char);
char strchr (char, int);
int strcmp (char, char);
int strcoll (char, char);
char strcpy (char, char);
char strerror (int);
char strncat (char, char);
int strncmp (char, char);
char strncpy (char, char);
char strpbrk (char, char);
char strrchr (char, int);
char strstr (char, char);
char strtok (char, char);
int bcmp (void, void);
void bzero (void);
int ffs (int);
char -1;
void memccpy (void, void, int);
char rindex (char, int);
int strcasecmp (char, char);
char strdup (char);
int strncasecmp (char, char);
char strsep (char, char);
char strerror_r (int, char);
char strtok_r (char, char, char);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/ipc.h</TITLE>
<PARA>
</PARA>
<SCREEN>
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/mman.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int madvise (void, int);
int msync (void, int);
int mlock (void);
int mlockall (int);
void mmap (void, int, int, int, __off_t);
int mprotect (void, int);
int munlock (void);
int munlockall (void);
int munmap (void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/msg.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int msgctl (int, int, struct msqid_ds);
int msgget (int);
int msgrcv (int, void, long, int);
int msgsnd (int, void, int);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/resource.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int getpriority (enum, enum __priority_which, int);
int setpriority (enum, enum __priority_which, int, int);
int setrlimit (enum, enum __rlimit_resource, struct rlimit);
int getrlimit (enum, enum __rlimit_resource, struct rlimit);
int getrusage (enum, enum __rusage_who, struct rusage);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/sem.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int semctl (int, int, int, ...);
int semget (int, int);
int semop (int, struct sembuf, unsigned int);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/shm.h</TITLE>
<PARA>
</PARA>
<SCREEN>

void shmat (int, void, int);
int shmctl (int, int, struct shmid_ds);
int shmdt (void);
int shmget (int);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/socket.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef union
{

  Unknown Type:"" unknown __sockaddr__;
  Unknown Type:"" unknown __sockaddr_at__;
  Unknown Type:"" unknown __sockaddr_ax25__;
  Unknown Type:"" unknown __sockaddr_dl__;
  Unknown Type:"" unknown __sockaddr_eon__;
  Unknown Type:"" unknown __sockaddr_in__;
  struct sockaddr_in6 __sockaddr_in6__;
  Unknown Type:"" unknown __sockaddr_inarp__;
  Unknown Type:"" unknown __sockaddr_ipx__;
  Unknown Type:"" unknown __sockaddr_iso__;
  Unknown Type:"" unknown __sockaddr_ns__;
  Unknown Type:"" unknown __sockaddr_un__;
  struct sockaddr_x25 __sockaddr_x25__;
}
__SOCKADDR_ARG;

typedef union
{

  Unknown Type:"" unknown __sockaddr__;
  Unknown Type:"" unknown __sockaddr_at__;
  Unknown Type:"" unknown __sockaddr_ax25__;
  Unknown Type:"" unknown __sockaddr_dl__;
  Unknown Type:"" unknown __sockaddr_eon__;
  Unknown Type:"" unknown __sockaddr_in__;
  struct sockaddr_in6 __sockaddr_in6__;
  Unknown Type:"" unknown __sockaddr_inarp__;
  Unknown Type:"" unknown __sockaddr_ipx__;
  Unknown Type:"" unknown __sockaddr_iso__;
  Unknown Type:"" unknown __sockaddr_ns__;
  Unknown Type:"" unknown __sockaddr_un__;
  struct sockaddr_x25 __sockaddr_x25__;
}
__CONST_SOCKADDR_ARG;


int bind (int, __CONST_SOCKADDR_ARG, socklen_t);
int getsockname (int, __SOCKADDR_ARG, socklen_t);
int listen (int, unsigned int);
int setsockopt (int, int, int, void, socklen_t);
int accept (int, __SOCKADDR_ARG, socklen_t);
int connect (int, __CONST_SOCKADDR_ARG, socklen_t);
int recv (int, void, int);
int recvfrom (int, void, int, __SOCKADDR_ARG, socklen_t);
int recvmsg (int, struct msghdr, int);
int send (int, void, int);
int sendmsg (int, struct msghdr, int);
int sendto (int, void, int, __CONST_SOCKADDR_ARG, socklen_t);
int getpeername (int, __SOCKADDR_ARG, socklen_t);
int getsockopt (int, int, int, void, socklen_t);
int shutdown (int, int);
int socket (int, int, int);
int socketpair (int, int, int, int);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/stat.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int __fxstat (int, int, struct stat);
int __lxstat (int, char, struct stat);
int __xmknod (int, char, __mode_t, __dev_t);
int __xstat (int, char, struct stat);
int mkfifo (char, __mode_t);
int chmod (char, __mode_t);
int fchmod (int, __mode_t);
int mkdir (char, __mode_t);
__mode_t umask (__mode_t);
int fstat (int, struct stat);
int mknod (char, __mode_t, __dev_t);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/times.h</TITLE>
<PARA>
</PARA>
<SCREEN>
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/utsname.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int uname (struct utsname);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/wait.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef union
{

  Unknown Type:"" unknown __uptr;
  int __iptr;
}
__WAIT_STATUS;

typedef Unknown Type:"" unknown idtype_t;


int waitid (idtype_t, __id_t, siginfo_t, int);
__pid_t wait (__WAIT_STATUS);
__pid_t waitpid (__pid_t, int, int);
__pid_t wait3 (__WAIT_STATUS, int, struct rusage);
__pid_t wait4 (__pid_t, __WAIT_STATUS, int, struct rusage);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>termios.h</TITLE>
<PARA>
</PARA>
<SCREEN>

speed_t cfgetispeed (struct termios);
speed_t cfgetospeed (struct termios);
int cfsetispeed (struct termios, speed_t);
int cfsetospeed (struct termios, speed_t);
int cfsetspeed (struct termios, speed_t);
int tcflow (int, int);
int tcflush (int, int);
int tcsendbreak (int, int);
int tcsetattr (int, int, struct termios);
int tcdrain (int);
int tcgetattr (int, struct termios);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>time.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef Unknown Type:"" unknown clock_t;

typedef Unknown Type:"" unknown time_t;

struct tm
{

  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
  long tm_gmtoff;
  char tm_zone;
}


char asctime (struct tm);
clock_t clock (void);
char ctime (time_t);
double difftime (time_t, time_t);
tm gmtime (time_t);
tm localtime (time_t);
time_t mktime (struct tm);
int stime (time_t);
time_t time (time_t);
int nanosleep (struct timespec, struct timespec);
int daylight ();
long timezone ();
char tzname ();
void tzset (void);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ulimit.h</TITLE>
<PARA>
</PARA>
<SCREEN>

long ulimit (int, ...);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>unistd.h</TITLE>
<PARA>
</PARA>
<SCREEN>

char __environ;
__pid_t __getpgid (__pid_t);
void _exit (int);
int acct (char);
unsigned int alarm (unsigned int);
int chown (char, __uid_t, __gid_t);
int chroot (char);
int execl (char, char, ...);
int execle (char, char, ...);
int execlp (char, char, ...);
int execv (char, char);
int execvp (char, char);
int fdatasync (int);
long gethostid (void);
__pid_t getpgrp (void);
char getwd (char);
int lockf (int, int, __off_t);
int nice (int);
int setegid (__gid_t);
int seteuid (__uid_t);
int sethostid (long);
int sethostname (char);
int setpgrp (void);
int sync (void);
__pid_t tcgetpgrp (int);
int tcsetpgrp (int, __pid_t);
int truncate (char, __off_t);
char ttyname (int);
unsigned int ualarm (unsigned int, unsigned int);
void usleep (unsigned int);
int close (int);
int fsync (int);
__off_t lseek (int, __off_t, int);
int pause (void);
int access (char, int);
int brk (void);
int chdir (char);
int dup (int);
int dup2 (int, int);
int execve (char, char, char);
int fchdir (int);
int fchown (int, __uid_t, __gid_t);
__pid_t fork (void);
__gid_t getegid (void);
__uid_t geteuid (void);
__gid_t getgid (void);
int getgroups (int, __gid_t);
int gethostname (char);
__pid_t getpid (void);
__uid_t getuid (void);
int lchown (char, __uid_t, __gid_t);
int link (char, char);
long pathconf (char, int);
int pipe (int);
int readlink (char, char);
int rmdir (char);
void sbrk ();
int setgid (__gid_t);
int setpgid (__pid_t, __pid_t);
int setregid (__gid_t, __gid_t);
int setreuid (__uid_t, __uid_t);
__pid_t setsid (void);
int setuid (__uid_t);
unsigned int sleep (unsigned int);
int symlink (char, char);
int unlink (char);
__pid_t vfork (void);
long fpathconf (int, int);
int ftruncate (int, __off_t);
char getcwd (char);
__pid_t getppid (void);
int isatty (int);
int ttyname_r (int, char);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>utime.h</TITLE>
<PARA>
</PARA>
<SCREEN>

int utime (char, struct utimbuf);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>wchar.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef struct
{

  int count;
  Unknown Type:"" unknown value;
}
mbstate_t;


double __wcstod_internal (int);
float __wcstof_internal (int);
long __wcstol_internal (int, int);
long double __wcstold_internal (int);
long long __wcstoll_internal (int, int);
unsigned long __wcstoul_internal (int, int);
unsigned long long __wcstoull_internal (int, int);
int wcscmp ();
int wcscoll ();
int wcsncmp ();
int wctob ();
int wmemcmp ();
int mbsinit (mbstate_t);
double wcstod ();
long wcstol (int);
unsigned long wcstoul (int);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>wctype.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef unsigned long wctype_t;

typedef Unknown Type:"" unknown wctrans_t;


wctrans_t wctrans (char);
int iswalnum ();
int iswalpha ();
int iswcntrl ();
int iswctype (wctype_t);
int iswdigit ();
int iswgraph ();
int iswlower ();
int iswprint ();
int iswpunct ();
int iswspace ();
int iswupper ();
int iswxdigit ();
wctype_t wctype (char);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>wordexp.h</TITLE>
<PARA>
</PARA>
<SCREEN>
typedef struct
{

  int we_wordc;
  char we_wordv;
  int we_offs;
}
wordexp_t;


int wordexp (char, wordexp_t, int);
void wordfree (wordexp_t);
</SCREEN>
</SECT2>
</SECT1>
