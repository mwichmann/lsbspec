<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.49 2002/09/30 19:50:36 anderson Exp 0 -->
<!--    at Sat Oct 12 18:16:00 2002 -->
<SECT1 ID=libc>
<TITLE>Interfaces for libc</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libc</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>See archLSB.</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
ISO/IEC 9899: 1999, Programming Languages --C<FOOTNOTE ID="std-131-25">
<PARA>
ISO/IEC 9899: 1999, Programming Languages --C</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
Large File Support<FOOTNOTE ID="std-131-35">
<PARA>
Large File Support</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-131-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
IEEE Std POSIX.1-1996 [ISO/IEC 9945-1:1996]<FOOTNOTE ID="std-131-3">
<PARA>
IEEE Std POSIX.1-1996 [ISO/IEC 9945-1:1996]</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
CAE Specification, February 1997, Networking Services (XNS), Issue 5(ISBN: 1-85912-165-9, C523)<FOOTNOTE ID="std-131-15">
<PARA>
CAE Specification, February 1997, Networking Services (XNS), Issue 5(ISBN: 1-85912-165-9, C523)</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)<FOOTNOTE ID="std-131-5">
<PARA>
CAE Specification, January 1997, System Interfaces and Headers (XSH),Issue 5 (ISBN: 1-85912-181-0, C606)</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
The Single UNIX® Specification(SUS) Version 3<FOOTNOTE ID="std-131-67">
<PARA>
The Single UNIX® Specification(SUS) Version 3</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
System V Interface Definition, Issue 3 (ISBN 0201566524)<FOOTNOTE ID="std-131-21">
<PARA>
System V Interface Definition, Issue 3 (ISBN 0201566524)</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
System V Interface Definition,Fourth Edition<FOOTNOTE ID="std-131-46">
<PARA>
System V Interface Definition,Fourth Edition</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<!--libgroup-->
<TITLE>RPC</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - RPC Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>authnone_create<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY>setdomainname<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>xdr_array<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_int<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_u_char<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY>clnt_create<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY>svc_getreqset<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_bool<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_long<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_u_long<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY>clnt_pcreateerror<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY>svcerr_auth<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_bytes<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_opaque<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_u_short<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY>clnt_perrno<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY>svcerr_decode<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_callhdr<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_opaque_auth<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_union<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY>clnt_perror<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY>svcerr_noproc<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_callmsg<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_pointer<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_vector<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY>clnt_spcreateerror<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY>svcerr_noprog<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_char<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_reference<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_void<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY>clnt_sperrno<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY>svcerr_progvers<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_double<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_rejected_reply<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_wrapstring<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY>clnt_sperror<FOOTNOTEREF LINKEND="std-131-46"></ENTRY>
<ENTRY>svcerr_systemerr<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_enum<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_replymsg<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdrmem_create<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY>getdomainname<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>svcerr_weakauth<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_float<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_short<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdrrec_create<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
<ROW>
<ENTRY>key_decryptsession<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_accepted_reply<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_free<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdr_string<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
<ENTRY>xdrrec_eof<FOOTNOTEREF LINKEND="std-131-21"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>System Calls</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - System Calls Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>__fxstat<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fchown<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>initgroups<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>read<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setrlimit64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
</ROW>
<ROW>
<ENTRY>__getpgid<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fcntl<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>ioctl<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>readdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setsid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__lxstat<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fdatasync<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>kill<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>readdir_r<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__xmknod<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>flock<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>killpg<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>readlink<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sleep<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__xstat<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fork<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>lchown<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>readv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>statfs<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>access<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>fstatfs<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>link<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>rename<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>statvfs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>acct<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fstatvfs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>lockf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>rmdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>stime<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>alarm<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>fsync<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>lseek<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sbrk<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>symlink<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>brk<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ftime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>mkdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sched_get_priority_max<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sync<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>chdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ftruncate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>mkfifo<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sched_get_priority_min<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sysconf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>chmod<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getcontext<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>mlock<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sched_getparam<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>time<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>chown<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getegid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>mlockall<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sched_getscheduler<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>times<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>chroot<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>geteuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>mmap<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sched_rr_get_interval<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>truncate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>clock<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>mprotect<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sched_setparam<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ulimit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>close<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getgroups<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>msync<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sched_setscheduler<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>umask<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>closedir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getitimer<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>munlock<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sched_yield<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>uname<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>creat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getloadavg<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>munlockall<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>select<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>unlink<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>dup<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getpagesize<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>munmap<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setcontext<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>utime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>dup2<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getpgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>nanosleep<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setegid<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>utimes<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>execl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getpgrp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>nice<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>seteuid<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>vfork<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>execle<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getpid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>open<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wait<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>execlp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getppid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>opendir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setitimer<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wait3<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>execv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getpriority<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>pathconf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setpgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wait4<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>execve<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getrlimit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>pause<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setpgrp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>waitid<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>execvp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getrusage<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>pipe<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setpriority<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>waitpid<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>exit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getsid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>poll<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setregid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>write<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>fchdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>pread<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setreuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>writev<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>fchmod<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getwd<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>pwrite<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setrlimit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libc - System Calls Deprecated Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>fstatfs<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>statfs<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>waitid<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Standard I/O</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Standard I/O Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>_IO_feof<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fgetc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>fseeko<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>putc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>snprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>_IO_getc<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fgetpos<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>fsetpos<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>putc_unlocked<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>_IO_putc<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fgets<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ftell<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>putchar<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sscanf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>_IO_puts<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fgetwc_unlocked<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ftello<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>putchar_unlocked<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>telldir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>alphasort<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fileno<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>fwrite<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>puts<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tempnam<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>asprintf<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>flockfile<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>putw<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ungetc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>clearerr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>fopen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getc_unlocked<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>remove<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>vasprintf<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>ctermid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>fprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getchar<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>rewind<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>vdprintf<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>fclose<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>fputc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getchar_unlocked<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>rewinddir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>vfprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>fdopen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>fputs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>gets<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>scanf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>vprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>feof<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>fread<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getw<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>seekdir<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>vsnprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>ferror<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>freopen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>pclose<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setbuf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>vsprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>fflush<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>fscanf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>popen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setbuffer<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>fflush_unlocked<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>fseek<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>printf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setvbuf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libc - Standard I/O Deprecated Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>alphasort<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>gets<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libc - Standard I/O Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>stderr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>stdin<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>stdout<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Signal Handling</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Signal Handling Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>__libc_current_sigrtmax<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>sigaddset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sighold<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigpause<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigsuspend<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__libc_current_sigrtmin<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>sigaltstack<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigignore<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigpending<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigtimedwait<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__sigsetjmp<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>sigandset<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>siginterrupt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigprocmask<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigwait<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__sysv_signal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>sigblock<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>sigisemptyset<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>sigqueue<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigwaitinfo<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>bsd_signal<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigdelset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigismember<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigrelse<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>psignal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>sigemptyset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>siglongjmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigreturn<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>raise<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigfillset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>signal<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sigset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>sigaction<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>siggetmask<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>sigorset<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>sigstack<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libc - Signal Handling Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>_sys_siglist<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Localization Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Localization Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>__dcgettext<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>catgets<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>dgettext<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>iconv_close<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>nl_langinfo<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>bind_textdomain_codeset<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>catopen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>dngettext<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>iconv_open<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setlocale<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>bindtextdomain<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>dcgettext<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>gettext<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>localeconv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>textdomain<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>catclose<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>dcngettext<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>iconv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ngettext<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libc - Localization Functions Deprecated Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>__dcgettext<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libc - Localization Functions Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>_nl_msg_cat_cntr<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Socket Interface</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Socket Interface Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>__h_errno_location<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>gethostbyname_r<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>getsockopt<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>send<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>socket<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
</ROW>
<ROW>
<ENTRY>accept<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>gethostid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>listen<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>sendmsg<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>socketpair<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
</ROW>
<ROW>
<ENTRY>bind<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>gethostname<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>recv<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>sendto<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>bindresvport<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>getpeername<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>recvfrom<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>setsockopt<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>connect<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>getsockname<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>recvmsg<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>shutdown<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Wide Characters</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Wide Characters Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>__wcstod_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>mbsinit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>vwscanf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcsnlen<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>wcstoumax<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
</ROW>
<ROW>
<ENTRY>__wcstof_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>mbsnrtowcs<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>wcpcpy<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>wcsnrtombs<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>wcstouq<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>__wcstol_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>mbsrtowcs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcpncpy<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>wcspbrk<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcswcs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__wcstold_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>mbstowcs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcrtomb<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcsrchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcswidth<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__wcstoul_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>mbtowc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcscasecmp<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>wcsrtombs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcsxfrm<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>btowc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>putwc<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcscat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcsspn<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wctob<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>fgetwc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>putwchar<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcschr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcsstr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wctomb<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>fgetws<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>swprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcscmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcstod<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wctrans<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>fputwc<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>swscanf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcscoll<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcstof<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wctype<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>fputws<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>towctrans<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcscpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcstoimax<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcwidth<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>fwide<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>towlower<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcscspn<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcstok<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wmemchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>fwprintf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>towupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcsdup<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>wcstol<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wmemcmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>fwscanf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>ungetwc<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcsftime<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcstold<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wmemcpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>getwc<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>vfwprintf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcslen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcstoll<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wmemmove<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>getwchar<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>vfwscanf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcsncasecmp<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>wcstombs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wmemset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>mblen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>vswprintf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcsncat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcstoq<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>wprintf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
</ROW>
<ROW>
<ENTRY>mbrlen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>vswscanf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcsncmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcstoul<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wscanf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
</ROW>
<ROW>
<ENTRY>mbrtowc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>vwprintf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>wcsncpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wcstoull<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>String Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - String Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>__mempcpy<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>bzero<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strcasestr<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>strncasecmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strtoimax<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
</ROW>
<ROW>
<ENTRY>__rawmemchr<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>ffs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strcat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strncat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strtok<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__stpcpy<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>index<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strncmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strtok_r<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>__strdup<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>memccpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strcmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strncpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strtold<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
</ROW>
<ROW>
<ENTRY>__strtod_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>memchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strcoll<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strndup<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>strtoll<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
</ROW>
<ROW>
<ENTRY>__strtof_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>memcmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strcpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strnlen<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>strtoq<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>__strtok_r<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>memcpy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strcspn<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strpbrk<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strtoull<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
</ROW>
<ROW>
<ENTRY>__strtol_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>memmove<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strdup<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strptime<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>strtoumax<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
</ROW>
<ROW>
<ENTRY>__strtold_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>memrchr<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>strerror<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strrchr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strtouq<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>__strtoll_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>memset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strerror_r<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>strsep<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>strverscmp<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>__strtoul_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>rindex<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strfmon<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strsignal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>strxfrm<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__strtoull_internal<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>stpcpy<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>strfry<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>strspn<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>swab<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>bcmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>stpncpy<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>strftime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strstr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>bcopy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strcasecmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strlen<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strtof<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>IPC Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - IPC Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>ftok<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>msgrcv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>semget<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>shmctl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>msgctl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>msgsnd<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>semop<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>shmdt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>msgget<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>semctl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>shmat<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>shmget<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Regular Expressions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Regular Expressions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>advance<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>re_exec<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>regerror<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>regfree<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>re_comp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>regcomp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>regexec<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>step<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libc - Regular Expressions Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>loc1<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>loc2<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>locs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Character Type Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Character Type Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>__ctype_get_mb_cur_max<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>isdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>iswalnum<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>iswlower<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>toascii<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>_tolower<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>isgraph<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>iswalpha<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>iswprint<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tolower<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>_toupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>islower<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>iswblank<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>iswpunct<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>toupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>isalnum<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>isprint<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>iswcntrl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>iswspace<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>isalpha<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ispunct<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>iswctype<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>iswupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>isascii<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>isspace<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>iswdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>iswxdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>iscntrl<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>isupper<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>iswgraph<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>isxdigit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libc - Character Type Functions Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>__ctype_b<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>__ctype_tolower<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>__ctype_toupper<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Time Manipulation</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Time Manipulation Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>adjtime<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>asctime_r<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>difftime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>localtime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tzset<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>adjtimex<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>ctime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>gmtime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>localtime_r<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ualarm<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>asctime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ctime_r<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>gmtime_r<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>mktime<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libc - Time Manipulation Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>__daylight<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>__tzname<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>timezone<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>__timezone<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>daylight<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tzname<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Terminal Interface Functions</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Terminal Interface Functions Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>cfgetispeed<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>cfsetispeed<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tcdrain<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tcgetattr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tcsendbreak<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>cfgetospeed<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>cfsetospeed<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tcflow<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tcgetpgrp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tcsetattr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>cfmakeraw<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>cfsetspeed<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>tcflush<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tcgetsid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tcsetpgrp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>System Database Interface</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - System Database Interface Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>endgrent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getgrgid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getprotoent<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>getutent<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>setmntent<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>endhostent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>getgrgid_r<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getpwent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getutent_r<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>setnetent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
</ROW>
<ROW>
<ENTRY>endnetent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>getgrnam<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getpwnam<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getutxent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setprotoent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
</ROW>
<ROW>
<ENTRY>endprotoent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>getgrnam_r<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getpwnam_r<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>getutxid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setpwent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>endpwent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>gethostbyaddr<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>getpwuid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getutxline<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setservent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
</ROW>
<ROW>
<ENTRY>endservent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>gethostbyname<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>getpwuid_r<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>pututxline<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setutent<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>endutent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getnetbyaddr<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>getservbyname<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>setgrent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setutxent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>endutxent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getprotobyname<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>getservbyport<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>setgroups<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>getgrent<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getprotobynumber<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>getservent<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>sethostent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libc - System Database Interface Deprecated Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>endhostent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>sethostent<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Language Support</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Language Support Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>__libc_start_main<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>_obstack_begin<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>_obstack_newchunk<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>obstack_free<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Large File Support</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Large File Support Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>__fxstat64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fopen64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>ftello64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>mkstemp64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>readdir64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
</ROW>
<ROW>
<ENTRY>__lxstat64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>freopen64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>ftruncate64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>mmap64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>statfs64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>__xstat64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fseeko64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>ftw64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>nftw64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>statvfs64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
</ROW>
<ROW>
<ENTRY>alphasort64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fsetpos64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>getrlimit64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>open64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>tmpfile64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
</ROW>
<ROW>
<ENTRY>creat64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>fstatfs64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>lockf64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>pread64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>truncate64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
</ROW>
<ROW>
<ENTRY>fgetpos64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>fstatvfs64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>lseek64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY>pwrite64<FOOTNOTEREF LINKEND="std-131-35"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libc - Large File Support Deprecated Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>alphasort64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fstatfs64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>statfs64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<!--libgroup-->
<TITLE>Standard Library</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libc - Standard Library Function Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>_Exit<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>div<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>globfree<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>llabs<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>sethostname<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>__assert_fail<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>drand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>globfree64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>lldiv<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>setlogmask<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__cxa_atexit<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>ecvt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>grantpt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>longjmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setstate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__errno_location<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>erand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>hcreate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>lrand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>srand<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__fpending<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>err<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>hdestroy<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>lsearch<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>srand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__getpagesize<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>error<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>hsearch<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>makecontext<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>srandom<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__isinf<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>errx<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>htonl<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>malloc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strtod<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__isinff<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fcvt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>htons<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>memmem<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>strtol<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__isinfl<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fmtmsg<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>imaxabs<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>mkstemp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>strtoul<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__isnan<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fnmatch<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>imaxdiv<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>mktemp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>swapcontext<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__isnanf<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>fpathconf<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>inet_addr<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>mrand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>syslog<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>__isnanl<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>free<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>inet_aton<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>nftw<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>system<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>__sysconf<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>freeaddrinfo<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY>inet_ntoa<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>nrand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tfind<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>_exit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ftrylockfile<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>inet_ntop<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY>ntohl<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>tmpfile<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>_longjmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ftw<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>inet_pton<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY>ntohs<FOOTNOTEREF LINKEND="std-131-15"></ENTRY>
<ENTRY>tmpnam<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>_setjmp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>funlockfile<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>initstate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>openlog<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>tsearch<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>a64l<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>gai_strerror<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY>insque<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>perror<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ttyname<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>abort<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>gcvt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>isatty<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>posix_memalign<FOOTNOTEREF LINKEND="std-131-3"></ENTRY>
<ENTRY>ttyname_r<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>abs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getaddrinfo<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY>isblank<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>ptsname<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>twalk<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>atexit<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getcwd<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>isinf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>putenv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>unlockpt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>atof<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getdate<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>isinff</ENTRY>
<ENTRY>qsort<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>unsetenv<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>atoi<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getenv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>isinfl<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>rand<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>usleep<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>atol<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getlogin<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>isnan<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>rand_r<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>verrx<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>basename<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getnameinfo<FOOTNOTEREF LINKEND="std-131-67"></ENTRY>
<ENTRY>isnanf<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>random<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>vsyslog<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>bsearch<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getopt<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>isnanl<FOOTNOTEREF LINKEND="std-131-25"></ENTRY>
<ENTRY>random_r<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>warn<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>calloc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getopt_long<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>jrand48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>realloc<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>warnx<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>closelog<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getopt_long_only<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>l64a<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>realpath<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wordexp<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>confstr<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>getsubopt<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>labs<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>remque<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>wordfree<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
</ROW>
<ROW>
<ENTRY>cuserid<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>gettimeofday<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>lcong48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>seed48<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>daemon<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>glob<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>ldiv<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>setenv<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
<ROW>
<ENTRY>dirname<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>glob64<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>lfind<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>sethostid<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<!--libgroupdata-->
<TABLE>
<TITLE>libc - Standard Library Data Interfaces</TITLE>
<TGROUP COLS=5>
<TBODY>
<ROW>
<ENTRY>__environ<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>_sys_errlist<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>getdate_err<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>opterr<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>optopt<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
</ROW>
<ROW>
<ENTRY>_environ<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY>environ<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>optarg<FOOTNOTEREF LINKEND="std-131-5"></ENTRY>
<ENTRY>optind<FOOTNOTEREF LINKEND="std-131-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libc-ddefs>
<TITLE>Data Definitions for libc</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO C serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>assert.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define assert(expr)	((void)0)
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ctype.h</TITLE>
<PARA>
</PARA>
<SCREEN>






enum
{
  _ISupper, _ISlower, _ISalpha, _ISdigit, _ISxdigit, _ISspace, _ISprint,
    _ISgraph, _ISblank, _IScntrl, _ISpunct, _ISalnum
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>dirent.h</TITLE>
<PARA>
</PARA>
<SCREEN>






typedef struct __dirstream DIR;





struct dirent
{
  long d_ino;
  off_t d_off;
  unsigned short d_reclen;
  unsigned char d_type;
  char d_name[256];
}
 ;
struct dirent64
{
  uint64_t d_ino;
  int64_t d_off;
  unsigned short d_reclen;
  unsigned char d_type;
  char d_name[256];
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>errno.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define errno	(*__errno_location())



#define EPERM	1
#define ECHILD	10
#define ENETDOWN	100
#define ENETUNREACH	101
#define ENETRESET	102
#define ECONNABORTED	103
#define ECONNRESET	104
#define ENOBUFS	105
#define EISCONN	106
#define ENOTCONN	107
#define ESHUTDOWN	108
#define ETOOMANYREFS	109
#define EAGAIN	11
#define ETIMEDOUT	110
#define ECONNREFUSED	111
#define EHOSTDOWN	112
#define EHOSTUNREACH	113
#define EALREADY	114
#define EINPROGRESS	115
#define ESTALE	116
#define EUCLEAN	117
#define ENOTNAM	118
#define ENAVAIL	119
#define ENOMEM	12
#define EISNAM	120
#define EREMOTEIO	121
#define EDQUOT	122
#define ENOMEDIUM	123
#define EMEDIUMTYPE	124
#define ECANCELED	125
#define EACCES	13
#define EFAULT	14
#define ENOTBLK	15
#define EBUSY	16
#define EEXIST	17
#define EXDEV	18
#define ENODEV	19
#define ENOENT	2
#define ENOTDIR	20
#define EISDIR	21
#define EINVAL	22
#define ENFILE	23
#define EMFILE	24
#define ENOTTY	25
#define ETXTBSY	26
#define EFBIG	27
#define ENOSPC	28
#define ESPIPE	29
#define ESRCH	3
#define EROFS	30
#define EMLINK	31
#define EPIPE	32
#define EDOM	33
#define ERANGE	34
#define EINTR	4
#define EIO	5
#define ENXIO	6
#define E2BIG	7
#define ENOEXEC	8
#define EBADF	9
#define EWOULDBLOCK	EAGAIN
#define EDEADLOCK	EDEADLK
#define ENOTSUP	EOPNOTSUPP
</SCREEN>
</SECT2>
<SECT2>
<TITLE>fcntl.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define O_RDONLY	00
#define O_ACCMODE	0003
#define O_WRONLY	01
#define O_CREAT	0100
#define O_TRUNC	01000
#define O_SYNC	010000
#define O_RDWR	02
#define O_EXCL	0200
#define O_APPEND	02000
#define O_ASYNC	020000
#define O_NOCTTY	0400
#define O_NDELAY	04000
#define O_NONBLOCK	04000


struct flock
{
  short l_type;
  short l_whence;
  off_t l_start;
  off_t l_len;
  pid_t l_pid;
}
 ;
struct flock64
{
  short l_type;
  short l_whence;
  loff_t l_start;
  loff_t l_len;
  pid_t l_pid;
}
 ;






#define F_DUPFD	0
#define F_RDLCK	0
#define F_GETFD	1
#define F_WRLCK	1
#define F_SETFD	2
#define F_UNLCK	2
#define F_GETFL	3
#define F_SETFL	4
#define F_GETLK	5
#define F_SETLK	6
#define F_SETLKW	7
#define F_SETOWN	8
#define F_GETOWN	9
</SCREEN>
</SECT2>
<SECT2>
<TITLE>fmtmsg.h</TITLE>
<PARA>
</PARA>
<SCREEN>




#define MM_HARD	1
#define MM_NRECOV	128
#define MM_UTIL	16
#define MM_SOFT	2
#define MM_OPSYS	32
#define MM_FIRM	4
#define MM_RECOVER	64
#define MM_APPL	8



#define MM_NOSEV	0
#define MM_HALT	1
#define MM_ERROR	2



#define MM_NULLLBL	((char *) 0)
</SCREEN>
</SECT2>
<SECT2>
<TITLE>fnmatch.h</TITLE>
<PARA>
</PARA>
<SCREEN>




#define FNM_PATHNAME	(1&lt;&lt;0)
#define FNM_NOESCAPE	(1&lt;&lt;1)
#define FNM_PERIOD	(1&lt;&lt;2)
#define FNM_NOMATCH	1
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ftw.h</TITLE>
<PARA>
</PARA>
<SCREEN>




#define FTW_D	FTW_D
#define FTW_DNR	FTW_DNR
#define FTW_DP	FTW_DP
#define FTW_F	FTW_F
#define FTW_NS	FTW_NS
#define FTW_SL	FTW_SL
#define FTW_SLN	FTW_SLN


enum
{
  FTW_F, FTW_D, FTW_DNR, FTW_NS, FTW_SL, FTW_DP, FTW_SLN
}
 ;


enum
{
  FTW_PHYS, FTW_MOUNT, FTW_CHDIR, FTW_DEPTH
}
 ;


struct FTW
{
  int base;
  int level;
}
 ;


typedef int (*__ftw_func_t) (char *__filename, struct stat * __status,
			     int __flag);
typedef int (*__ftw64_func_t) (char *__filename, struct stat64 * __status,
			       int __flag);
typedef int (*__nftw_func_t) (char *__filename, struct stat * __status,
			      int __flag, struct FTW * __info);
typedef int (*__nftw64_func_t) (char *__filename, struct stat64 * __status,
				int __flag, struct FTW * __info);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>getopt.h</TITLE>
<PARA>
</PARA>
<SCREEN>



struct option
{
  char *name;
  int has_arg;
  int *flag;
  int val;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>glob.h</TITLE>
<PARA>
</PARA>
<SCREEN>






typedef struct
{
  size_t gl_pathc;
  char **gl_pathv;
  size_t gl_offs;
  int gl_flags;
  void (*gl_closedir) (void);
  struct dirent *(*gl_readdir) (void);
  void *(*gl_opendir) (void);
  int (*gl_lstat) (void);
  int (*gl_stat) (void);
}
glob_t;


typedef struct
{
  size_t gl_pathc;
  char **gl_pathv;
  size_t gl_offs;
  int gl_flags;
  void (*gl_closedir) (void);
  struct dirent *(*gl_readdir) (void);
  void *(*gl_opendir) (void);
  int (*gl_lstat) (void);
  int (*gl_stat) (void);
}
glob64_t;
#define GLOB_ERR	(1&lt;&lt;0)
#define GLOB_MARK	(1&lt;&lt;1)
#define GLOB_BRACE	(1&lt;&lt;10)
#define GLOB_NOMAGIC	(1&lt;&lt;11)
#define GLOB_TILDE	(1&lt;&lt;12)
#define GLOB_ONLYDIR	(1&lt;&lt;13)
#define GLOB_TILDE_CHECK	(1&lt;&lt;14)
#define GLOB_NOSORT	(1&lt;&lt;2)
#define GLOB_DOOFFS	(1&lt;&lt;3)
#define GLOB_NOCHECK	(1&lt;&lt;4)
#define GLOB_APPEND	(1&lt;&lt;5)
#define GLOB_NOESCAPE	(1&lt;&lt;6)
#define GLOB_PERIOD	(1&lt;&lt;7)
#define GLOB_MAGCHAR	(1&lt;&lt;8)
#define GLOB_ALTDIRFUNC	(1&lt;&lt;9)



#define GLOB_NOSPACE	1
#define GLOB_ABORTED	2
#define GLOB_NOMATCH	3
#define GLOB_NOSYS	4
</SCREEN>
</SECT2>
<SECT2>
<TITLE>grp.h</TITLE>
<PARA>
</PARA>
<SCREEN>



struct group
{
  char *gr_name;
  char *gr_passwd;
  gid_t gr_gid;
  char **gr_mem;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>iconv.h</TITLE>
<PARA>
</PARA>
<SCREEN>






typedef void *iconv_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>inttypes.h</TITLE>
<PARA>
</PARA>
<SCREEN>






typedef lldiv_t imaxdiv_t;
typedef long long intmax_t;
typedef unsigned long long uintmax_t;
typedef unsigned int u_int;
typedef unsigned int uint;
typedef unsigned char uint8_t;
typedef unsigned short uint16_t;
typedef unsigned int uint32_t;
typedef unsigned int *uintptr_t;
typedef long long uint64_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>langinfo.h</TITLE>
<PARA>
</PARA>
<SCREEN>







#define ABDAY_1	0x20000
#define ABDAY_2	0x20001
#define ABDAY_3	0x20002
#define ABDAY_4	0x20003
#define ABDAY_5	0x20004
#define ABDAY_6	0x20005
#define ABDAY_7	0x20006



#define DAY_1	0x20007
#define DAY_2	0x20008
#define DAY_3	0x20009
#define DAY_4	0x2000A
#define DAY_5	0x2000B
#define DAY_6	0x2000C
#define DAY_7	0x2000D



#define ABMON_1	0x2000E
#define ABMON_2	0x2000F
#define ABMON_3	0x20010
#define ABMON_4	0x20011
#define ABMON_5	0x20012
#define ABMON_6	0x20013
#define ABMON_7	0x20014
#define ABMON_8	0x20015
#define ABMON_9	0x20016
#define ABMON_10	0x20017
#define ABMON_11	0x20018
#define ABMON_12	0x20019



#define MON_1	0x2001A
#define MON_2	0x2001B
#define MON_3	0x2001C
#define MON_4	0x2001D
#define MON_5	0x2001E
#define MON_6	0x2001F
#define MON_7	0x20020
#define MON_8	0x20021
#define MON_9	0x20022
#define MON_10	0x20023
#define MON_11	0x20024
#define MON_12	0x20025



#define AM_STR	0x20026
#define PM_STR	0x20027



#define D_T_FMT	0x20028
#define D_FMT	0x20029
#define T_FMT	0x2002A
#define T_FMT_AMPM	0x2002B



#define ERA	0x2002C
#define ERA_D_FMT	0x2002E
#define ALT_DIGITS	0x2002F
#define ERA_D_T_FMT	0x20030
#define ERA_T_FMT	0x20031






#define CODESET	14



#define CRNCYSTR	0x4000F



#define RADIXCHAR	0x10000
#define THOUSEP	0x10001
#define YESEXPR	0x50000
#define NOEXPR	0x50001
#define YESSTR	0x50002
#define NOSTR	0x50003
</SCREEN>
</SECT2>
<SECT2>
<TITLE>limits.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define OPEN_MAX	256
#define PATH_MAX	4096



#define MB_LEN_MAX	16



#define SCHAR_MIN	(-128)
#define SCHAR_MAX	127
#define UCHAR_MAX	255
#define CHAR_BIT	8
#define CHAR_MAX	SCHAR_MAX
#define CHAR_MIN	SCHAR_MIN



#define SHRT_MIN	(-32768)
#define SHRT_MAX	32767
#define USHRT_MAX	65535



#define INT_MIN	(-INT_MAX-1)
#define INT_MAX	2147483647
#define UINT_MAX	4294967295U



#define LONG_MIN	(-LONG_MAX-1L)
</SCREEN>
</SECT2>
<SECT2>
<TITLE>locale.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define LC_CTYPE	0
#define LC_NUMERIC	1
#define LC_TELEPHONE	10
#define LC_MEASUREMENT	11
#define LC_IDENTIFICATION	12
#define LC_TIME	2
#define LC_COLLATE	3
#define LC_MONETARY	4
#define LC_MESSAGES	5
#define LC_ALL	6
#define LC_PAPER	7
#define LC_NAME	8
#define LC_ADDRESS	9





struct lconv
{
  char *decimal_point;
  char *thousands_sep;
  char *grouping;
  char *int_curr_symbol;
  char *currency_symbol;
  char *mon_decimal_point;
  char *mon_thousands_sep;
  char *mon_grouping;
  char *positive_sign;
  char *negative_sign;
  char int_frac_digits;
  char frac_digits;
  char p_cs_precedes;
  char p_sep_by_space;
  char n_cs_precedes;
  char n_sep_by_space;
  char p_sign_posn;
  char n_sign_posn;
  char int_p_cs_precedes;
  char int_p_sep_by_space;
  char int_n_cs_precedes;
  char int_n_sep_by_space;
  char int_p_sign_posn;
  char int_n_sign_posn;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>net/if.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define IF_NAMESIZE	16



#define IFF_UP	0x01
#define IFF_BROADCAST	0x02
#define IFF_DEBUG	0x04
#define IFF_LOOPBACK	0x08
#define IFF_POINTOPOINT	0x10
#define IFF_PROMISC	0x100
#define IFF_MULTICAST	0x1000
#define IFF_NOTRAILERS	0x20
#define IFF_RUNNING	0x40
#define IFF_NOARP	0x80





struct ifaddr
{
  struct sockaddr ifa_addr;
  union
  {
    struct sockaddr ifu_broadaddr;
    struct sockaddr ifu_dstaddr;
  }
  ifa_ifu;
  void *__pad1;
  void *__pad2;
}
 ;
#define IFNAMSIZ	IF_NAMESIZE


struct ifreq
{
  union
  {
    char ifrn_name[IFNAMSIZ];
  }
  ifr_ifrn;
  union
  {
    struct sockaddr ifru_addr;
    struct sockaddr ifru_dstaddr;
    struct sockaddr ifru_broadaddr;
    struct sockaddr ifru_netmask;
    struct sockaddr ifru_hwaddr;
    short ifru_flags;
    int ifru_ivalue;
    int ifru_mtu;
    char ifru_slave[IFNAMSIZ];
    char ifru_newname[IFNAMSIZ];
    caddr_t ifru_data;
  }
  ifr_ifru;
}
 ;


struct ifconf
{
  int ifc_len;
  union
  {
    caddr_t ifcu_buf;
    struct ifreq *ifcu_req;
  }
  ifc_ifcu;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netdb.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define h_errno	(*__h_errno_location ())
#define NETDB_INTERNAL	-1
#define NETDB_SUCCESS	0
#define HOST_NOT_FOUND	1
#define NI_MAXHOST	1025
#define TRY_AGAIN	2
#define NO_RECOVERY	3
#define NI_MAXSERV	32
#define NO_DATA	4
#define h_addr	h_addr_list[0]
#define NO_ADDRESS	NO_DATA


struct servent
{
  char *s_name;
  char **s_aliases;
  int s_port;
  char *s_proto;
}
 ;
struct hostent
{
  char *h_name;
  char **h_aliases;
  int h_addrtype;
  socklen_t h_length;
  char **h_addr_list;
}
 ;
struct protoent
{
  char *p_name;
  char **p_aliases;
  int p_proto;
}
 ;
#define AI_PASSIVE	0x0001
#define AI_CANONNAME	0x0002
#define AI_NUMERICHOST	0x0004


struct addrinfo
{
  int ai_flags;
  int ai_family;
  int ai_socktype;
  int ai_protocol;
  size_t ai_addrlen;
  struct sockaddr *ai_addr;
  char *ai_canonname;
  struct addrinfo *ai_next;
}
 ;
#define NI_NUMERICHOST	1
#define NI_DGRAM	16
#define NI_NUMERICSERV	2
#define NI_NOFQDN	4
#define NI_NAMEREQD	8



#define EAI_BADFLAGS	-1
#define EAI_MEMORY	-10
#define EAI_SYSTEM	-11
#define EAI_NONAME	-2
#define EAI_AGAIN	-3
#define EAI_FAIL	-4
#define EAI_NODATA	-5
#define EAI_FAMILY	-6
#define EAI_SOCKTYPE	-7
#define EAI_SERVICE	-8
#define EAI_ADDRFAMILY	-9
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/in.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define INADDR_NONE	((unsigned long int) 0xffffffff)
#define INADDR_BROADCAST	(0xffffffff)
#define INADDR_ANY	0
#define IPPROTO_IP	0
#define IPPROTO_ICMP	1
#define IP_TOS	1
#define IPPROTO_UDP	17
#define IPPROTO_IGMP	2
#define IPPROTO_RAW	255
#define IPPROTO_TCP	6





struct in_addr
{
  uint32_t s_addr;
}
 ;
typedef uint32_t in_addr_t;


struct sockaddr_in
{
  sa_family_t sin_family;
  unsigned short sin_port;
  struct in_addr sin_addr;
  unsigned char __pad[8];
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>netinet/tcp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define TCP_NODELAY	1
</SCREEN>
</SECT2>
<SECT2>
<TITLE>nl_types.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define NL_CAT_LOCALE	1
#define NL_SETD	1





typedef void *nl_catd;


typedef int nl_item;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>pwd.h</TITLE>
<PARA>
</PARA>
<SCREEN>






struct passwd
{
  char *pw_name;
  char *pw_passwd;
  uid_t pw_uid;
  gid_t pw_gid;
  char *pw_gecos;
  char *pw_dir;
  char *pw_shell;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>regex.h</TITLE>
<PARA>
</PARA>
<SCREEN>




#define RE_SYNTAX_GNU_AWK	((RE_SYNTAX_POSIX_EXTENDED|RE_BACKSLASH_ESCAPE_IN_LISTS|RE_DEBUG)&amp  ~(RE_DOT_NOT_NULL | RE_INTERVALS | RE_CONTEXT_INDEP_OPS))
#define RE_BACKSLASH_ESCAPE_IN_LISTS	((unsigned long int)1)
#define RE_BK_PLUS_QM	(RE_BACKSLASH_ESCAPE_IN_LISTS&lt;&lt;1)
#define RE_SYNTAX_AWK	(RE_BACKSLASH_ESCAPE_IN_LISTS|RE_DOT_NOT_NULL|RE_NO_BK_PARENS| RE_NO_BK_REFS| RE_NO_BK_VBAR| RE_NO_EMPTY_RANGES| RE_DOT_NEWLINE| RE_CONTEXT_INDEP_ANCHORS| RE_UNMATCHED_RIGHT_PAREN_ORD | RE_NO_GNU_OPS)
#define RE_CHAR_CLASSES	(RE_BK_PLUS_QM&lt;&lt;1)
#define RE_SYNTAX_GREP	(RE_BK_PLUS_QM|RE_CHAR_CLASSES|RE_HAT_LISTS_NOT_NEWLINE|RE_INTERVALS|RE_NEWLINE_ALT)
#define RE_CONTEXT_INDEP_ANCHORS	(RE_CHAR_CLASSES&lt;&lt;1)
#define RE_SYNTAX_EGREP	(RE_CHAR_CLASSES|RE_CONTEXT_INDEP_ANCHORS| RE_CONTEXT_INDEP_OPS|RE_HAT_LISTS_NOT_NEWLINE|RE_NEWLINE_ALT|RE_NO_BK_PARENS|RE_NO_BK_VBAR)
#define _RE_SYNTAX_POSIX_COMMON	(RE_CHAR_CLASSES|RE_DOT_NEWLINE|RE_DOT_NOT_NULL|RE_INTERVALS)
#define RE_CONTEXT_INDEP_OPS	(RE_CONTEXT_INDEP_ANCHORS&lt;&lt;1)
#define RE_CONTEXT_INVALID_OPS	(RE_CONTEXT_INDEP_OPS&lt;&lt;1)
#define RE_DOT_NEWLINE	(RE_CONTEXT_INVALID_OPS&lt;&lt;1)
#define RE_INVALID_INTERVAL_ORD	(RE_DEBUG&lt;&lt;1)
#define RE_DOT_NOT_NULL	(RE_DOT_NEWLINE&lt;&lt;1)
#define RE_HAT_LISTS_NOT_NEWLINE	(RE_DOT_NOT_NULL&lt;&lt;1)
#define RE_INTERVALS	(RE_HAT_LISTS_NOT_NEWLINE&lt;&lt;1)
#define RE_LIMITED_OPS	(RE_INTERVALS&lt;&lt;1)
#define RE_NEWLINE_ALT	(RE_LIMITED_OPS&lt;&lt;1)
#define RE_NO_BK_BRACES	(RE_NEWLINE_ALT&lt;&lt;1)
#define RE_NO_BK_PARENS	(RE_NO_BK_BRACES&lt;&lt;1)
#define RE_NO_BK_REFS	(RE_NO_BK_PARENS&lt;&lt;1)
#define RE_NO_BK_VBAR	(RE_NO_BK_REFS&lt;&lt;1)
#define RE_NO_EMPTY_RANGES	(RE_NO_BK_VBAR&lt;&lt;1)
#define RE_UNMATCHED_RIGHT_PAREN_ORD	(RE_NO_EMPTY_RANGES&lt;&lt;1)
#define RE_DEBUG	(RE_NO_GNU_OPS&lt;&lt;1)
#define RE_NO_GNU_OPS	(RE_NO_POSIX_BACKTRACKING&lt;&lt;1)
#define RE_SYNTAX_POSIX_EGREP	(RE_SYNTAX_EGREP|RE_INTERVALS|RE_NO_BK_BRACES|RE_INVALID_INTERVAL_ORD)
#define RE_SYNTAX_POSIX_AWK	(RE_SYNTAX_POSIX_EXTENDED|RE_BACKSLASH_ESCAPE_IN_LISTS|RE_INTERVALS|RE_NO_GNU_OPS)
#define RE_NO_POSIX_BACKTRACKING	(RE_UNMATCHED_RIGHT_PAREN_ORD&lt;&lt;1)
#define RE_SYNTAX_POSIX_BASIC	(_RE_SYNTAX_POSIX_COMMON|RE_BK_PLUS_QM)
#define RE_SYNTAX_POSIX_EXTENDED	(_RE_SYNTAX_POSIX_COMMON|RE_CONTEXT_INDEP_ANCHORS|RE_CONTEXT_INDEP_OPS|RE_NO_BK_BRACES|RE_NO_BK_PARENS|RE_NO_BK_VBAR|RE_CONTEXT_INVALID_OPS|RE_UNMATCHED_RIGHT_PAREN_ORD)
#define RE_SYNTAX_POSIX_MINIMAL_EXTENDED	(_RE_SYNTAX_POSIX_COMMON|RE_CONTEXT_INDEP_ANCHORS|RE_CONTEXT_INVALID_OPS|RE_NO_BK_BRACES|RE_NO_BK_PARENS|RE_NO_BK_REFS|RE_NO_BK_VBAR|RE_UNMATCHED_RIGHT_PAREN_ORD)
#define RE_SYNTAX_POSIX_MINIMAL_BASIC	(_RE_SYNTAX_POSIX_COMMON|RE_LIMITED_OPS)
#define RE_SYNTAX_ED	RE_SYNTAX_POSIX_BASIC
#define RE_SYNTAX_SED	RE_SYNTAX_POSIX_BASIC


typedef unsigned long reg_syntax_t;





typedef struct re_pattern_buffer
{
  unsigned char *buffer;
  unsigned long allocated;
  unsigned long used;
  reg_syntax_t syntax;
  char *fastmap;
  char *translate;
  size_t re_nsub;
  unsigned int can_be_null:1;
  unsigned int regs_allocated:2;
  unsigned int fastmap_accurate:1;
  unsigned int no_sub:1;
  unsigned int not_bol:1;
  unsigned int not_eol:1;
  unsigned int newline_anchor:1;
}
regex_t;
typedef int regoff_t;
typedef struct
{
  regoff_t rm_so;
  regoff_t rm_eo;
}
regmatch_t;
#define REG_NOTEOL	(1&lt;&lt;1)
#define REG_ICASE	(REG_EXTENDED&lt;&lt;1)
#define REG_NEWLINE	(REG_ICASE&lt;&lt;1)
#define REG_NOSUB	(REG_NEWLINE&lt;&lt;1)
#define REG_NOMATCH	-1
#define REG_EXTENDED	1
#define REG_NOTBOL	1
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sched.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SCHED_OTHER	0
#define SCHED_FIFO	1
#define SCHED_RR	2


struct sched_param
{
  int sched_priority;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>search.h</TITLE>
<PARA>
</PARA>
<SCREEN>






typedef struct entry
{
  char *key;
  void *data;
}
ENTRY;
typedef enum
{
  FIND, ENTER
}
ACTION;
typedef enum
{
  preorder, postorder, endorder, leaf
}
VISIT;


typedef void (*__action_fn_t) (void *__nodep, VISIT __value, int __level);
</SCREEN>
</SECT2>
<SECT2>
<TITLE>setjmp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define setjmp(env)	_setjmp(env)
#define sigsetjmp(a,b)	__sigsetjmp(a,b)





typedef int __jmp_buf[6];


struct __jmp_buf_tag
{
  __jmp_buf __jmpbuf;
  int __mask_was_saved;
  sigset_t __saved_mask;
}
 ;


typedef struct __jmp_buf_tag jmp_buf[1];
typedef jmp_buf sigjmp_buf;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>signal.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SIGRTMAX	(__libc_current_sigrtmax ())
#define SIGRTMIN	(__libc_current_sigrtmin ())
#define SIG_BLOCK	0
#define SIG_UNBLOCK	1
#define SIG_SETMASK	2
#define NSIG	64


typedef int sig_atomic_t;
struct sigstack
{
  void *ss_sp;
  int ss_onstack;
}
 ;
#define SIG_ERR	((__sighandler_t)-1)
#define SIG_DFL	((__sighandler_t)0)
#define SIG_IGN	((__sighandler_t)1)
#define SIGHUP	1
#define SIGSEGV	11
#define SIGPIPE	13
#define SIGALRM	14
#define SIGTERM	15
#define SIGINT	2
#define SIGPROF	27
#define SIGQUIT	3
#define SIGILL	4
#define SIGTRAP	5
#define SIGABRT	6
#define SIGIOT	6
#define SIGFPE	8
#define SIGKILL	9
#define SIGCLD	SIGCHLD
#define SIGPOLL	SIGIO





typedef void (*__sighandler_t) (int);
#define SV_ONSTACK	(1&lt;&lt;0)
#define SV_INTERRUPT	(1&lt;&lt;1)
#define SV_RESETHAND	(1&lt;&lt;2)


typedef union sigval
{
  int sival_int;
  void *sival_ptr;
}
sigval_t;
#define SIGEV_SIGNAL	0
#define SIGEV_NONE	1
#define SIGEV_THREAD	2


typedef struct sigevent
{
  sigval_t sigev_value;
  int sigev_signo;
  int sigev_notify;
  union
  {
    int _pad[SIGEV_PAD_SIZE];
    struct
    {
      void (*sigev_thread_func) (void);
      void *_attribute;
    }
    _sigev_thread;
  }
  _sigev_un;
}
sigevent_t;
#define SI_QUEUE	-1
#define SI_TIMER	-2
#define SI_MESGQ	-3
#define SI_ASYNCIO	-4
#define SI_USER	0
#define si_pid	_sifields._kill._pid
#define si_uid	_sifields._kill._uid
#define si_value	_sifields._rt._sigval
#define si_int	_sifields._rt._sigval.sival_int
#define si_ptr	_sifields._rt._sigval.sival_ptr
#define si_status	_sifields._sigchld._status
#define si_stime	_sifields._sigchld._stime
#define si_utime	_sifields._sigchld._utime
#define si_addr	_sifields._sigfault._addr
#define si_band	_sifields._sigpoll._band
#define si_fd	_sifields._sigpoll._fd
#define si_timer1	_sifields._timer._timer1
#define si_timer2	_sifields._timer._timer2


typedef struct siginfo
{
  int si_signo;
  int si_errno;
  int si_code;
  union
  {
    int _pad[SI_PAD_SIZE];
    struct
    {
      pid_t _pid;
      uid_t _uid;
    }
    _kill;
    struct
    {
      unsigned int _timer1;
      unsigned int _timer2;
    }
    _timer;
    struct
    {
      pid_t _pid;
      uid_t _uid;
      sigval_t _sigval;
    }
    _rt;
    struct
    {
      pid_t _pid;
      uid_t _uid;
      int _status;
      clock_t _utime;
      clock_t _stime;
    }
    _sigchld;
    struct
    {
      void *_addr;
    }
    _sigfault;
    struct
    {
      int _band;
      int _fd;
    }
    _sigpoll;
  }
  _sifields;
}
siginfo_t;


typedef struct
{
  unsigned long sig[_SIGSET_NWORDS];
}
sigset_t;
#define SA_NOCLDSTOP	0x00000001
#define SA_NOCLDWAIT	0x00000002
#define SA_SIGINFO	0x00000004
#define SA_ONSTACK	0x08000000
#define SA_RESTART	0x10000000
#define SA_INTERRUPT	0x20000000
#define SA_NODEFER	0x40000000
#define SA_RESETHAND	0x80000000
#define SA_NOMASK	SA_NODEFER
#define SA_ONESHOT	SA_RESETHAND


struct sigaction
{
  union
  {
    __sighandler_t _sa_handler;
    void (*_sa_sigaction) (int, siginfo_t *, void *);
  }
  __sigaction_handler;
  unsigned long sa_flags;
  void (*sa_restorer) (void);
  sigset_t sa_mask;
}
 ;


typedef struct sigaltstack
{
  void *ss_sp;
  int ss_flags;
  size_t ss_size;
}
stack_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stddef.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define offsetof(TYPE,MEMBER)	((size_t)&amp ((TYPE*)0)->MEMBER)
#define NULL	(0)


typedef long wchar_t;
typedef unsigned int size_t;
typedef long ptrdiff_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stdio.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define EOF	(-1)
#define P_tmpdir	"/tmp"
#define FOPEN_MAX	16
#define L_tmpnam	20
#define FILENAME_MAX	4096
#define BUFSIZ	8192
#define L_ctermid	9
#define L_cuserid	9


typedef struct _IO_FILE FILE;
typedef struct
{
  off_t __pos;
  mbstate_t __state;
}
fpos_t;
typedef struct
{
  off64_t __pos;
  mbstate_t __state;
}
fpos64_t;



#define _IOFBF	0
#define _IOLBF	1
#define _IONBF	2
</SCREEN>
</SECT2>
<SECT2>
<TITLE>stdlib.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define MB_CUR_MAX	(__ctype_get_mb_cur_max())
#define EXIT_SUCCESS	0
#define EXIT_FAILURE	1
#define RAND_MAX	2147483647


typedef int (*__compar_fn_t) (const void *, const void *);


typedef struct
{
  int quot;
  int rem;
}
div_t;


typedef struct
{
  long quot;
  long rem;
}
ldiv_t;


typedef struct
{
  long long quot;
  long long rem;
}
lldiv_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/file.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define LOCK_SH	1
#define LOCK_EX	2
#define LOCK_NB	4
#define LOCK_UN	8
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/ioctl.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FIONREAD	0x541B
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/ipc.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define IPC_PRIVATE	((key_t)0)
#define IPC_RMID	0
#define IPC_CREAT	00001000
#define IPC_EXCL	00002000
#define IPC_NOWAIT	00004000
#define IPC_SET	1
#define IPC_STAT	2


struct ipc_perm
{
  key_t __key;
  uid_t uid;
  gid_t gid;
  uid_t cuid;
  gid_t cgid;
  unsigned short mode;
  unsigned short __pad1;
  unsigned short __seq;
  unsigned short __pad2;
  unsigned long __unused1;
  unsigned long __unused2;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/mman.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define MAP_FAILED	((void*)-1)
#define PROT_NONE	0x0
#define MAP_SHARED	0x01
#define MAP_PRIVATE	0x02
#define PROT_READ	0x1
#define MAP_FIXED	0x10
#define PROT_WRITE	0x2
#define MAP_ANONYMOUS	0x20
#define PROT_EXEC	0x4
#define MCL_CURRENT	1
#define MS_ASYNC	1
#define MCL_FUTURE	2
#define MS_INVALIDATE	2
#define MS_SYNC	4
#define MAP_ANON	MAP_ANONYMOUS
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/msg.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define MSG_NOERROR	010000








struct msqid_ds
{
  struct ipc_perm msg_perm;
  time_t msg_stime;
  unsigned long __unused1;
  time_t msg_rtime;
  unsigned long __unused2;
  time_t msg_ctime;
  unsigned long __unused3;
  unsigned long __msg_cbytes;
  msgqnum_t msg_qnum;
  msglen_t msg_qbytes;
  pid_t msg_lspid;
  pid_t msg_lrpid;
  unsigned long __unused4;
  unsigned long __unused5;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/param.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define NOFILE	256
#define MAXPATHLEN	4096
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/poll.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define POLLIN	0x0001
#define POLLPRI	0x0002
#define POLLOUT	0x0004
#define POLLERR	0x0008
#define POLLHUP	0x0010
#define POLLNVAL	0x0020


struct pollfd
{
  int fd;
  short events;
  short revents;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/resource.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define RLIM_INFINITY	(~0UL)
#define RLIM_SAVED_CUR	-1
#define RLIM_SAVED_MAX	-1
#define PRIO_PROCESS	0
#define RLIMIT_CPU	0
#define RUSAGE_SELF	0
#define PRIO_PGRP	1
#define RLIMIT_FSIZE	1
#define PRIO_USER	2
#define RLIMIT_DATA	2
#define RLIMIT_STACK	3
#define RLIMIT_CORE	4
#define RLIMIT_NOFILE	7
#define RLIMIT_AS	9





typedef unsigned long rlim_t;
typedef unsigned long long rlim64_t;


struct rlimit
{
  rlim_t rlim_cur;
  rlim_t rlim_max;
}
 ;
struct rlimit64
{
  rlim64_t rlim_cur;
  rlim64_t rlim_max;
}
 ;


struct rusage
{
  struct timeval ru_utime;
  struct timeval ru_stime;
  long ru_maxrss;
  long ru_ixrss;
  long ru_idrss;
  long ru_isrss;
  long ru_minflt;
  long ru_majflt;
  long ru_nswap;
  long ru_inblock;
  long ru_oublock;
  long ru_msgsnd;
  long ru_msgrcv;
  long ru_nsignals;
  long ru_nvcsw;
  long ru_nivcsw;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/sem.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SEM_UNDO	0x1000
#define GETPID	11
#define GETVAL	12
#define GETALL	13
#define GETNCNT	14
#define GETZCNT	15
#define SETVAL	16
#define SETALL	17


struct sembuf
{
  short sem_num;
  short sem_op;
  short sem_flg;
}
 ;
struct semid_ds
{
  struct ipc_perm sem_perm;
  time_t sem_otime;
  unsigned long __unused1;
  time_t sem_ctime;
  unsigned long __unused2;
  unsigned long sem_nsems;
  unsigned long __unused3;
  unsigned long __unused4;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/shm.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SHMLBA	(__getpagesize())
#define SHM_RDONLY	010000
#define SHM_W	0200
#define SHM_RND	020000
#define SHM_R	0400
#define SHM_REMAP	040000
#define SHM_LOCK	11
#define SHM_UNLOCK	12
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/socket.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SHUT_RD	0
#define MSG_WAITALL	0x100
#define MSG_TRUNC	0x20
#define MSG_EOR	0x80
#define SIOCGIFCONF	0x8912
#define SIOCGIFFLAGS	0x8913
#define SIOCGIFADDR	0x8915
#define SIOCGIFNETMASK	0x891b
#define MSG_OOB	1
#define SHUT_WR	1
#define MSG_PEEK	2
#define SHUT_RDWR	2
#define MSG_DONTROUTE	4
#define MSG_CTRUNC	8
#define PF_LOCAL	AF_LOCAL
#define PF_UNSPEC	AF_UNSPEC


struct linger
{
  int l_onoff;
  int l_linger;
}
 ;
struct cmsghdr
{
  size_t cmsg_len;
  int cmsg_level;
  int cmsg_type;
}
 ;
struct iovec
{
  void *iov_base;
  size_t iov_len;
}
 ;


typedef unsigned short sa_family_t;


struct sockaddr
{
  sa_family_t sa_family;
  char sa_data[14];
}
 ;


struct msghdr
{
  void *msg_name;
  int msg_namelen;
  struct iovec *msg_iov;
  size_t msg_iovlen;
  void *msg_control;
  size_t msg_controllen;
  unsigned int msg_flags;
}
 ;
#define AF_UNSPEC	0
#define AF_LOCAL	1
#define AF_UNIX	1
#define AF_INET6	10
#define AF_INET	2
#define AF_AX25	3
#define AF_IPX	4
#define AF_APPLETALK	5
#define AF_NETROM	6
#define AF_BRIDGE	7
#define AF_ATMPVC	8
#define AF_X25	9



#define PF_INET	AF_INET
#define PF_INET6	AF_INET6
#define PF_UNIX	AF_UNIX



#define SOCK_STREAM	1
#define SOCK_PACKET	10
#define SOCK_DGRAM	2
#define SOCK_RAW	3
#define SOCK_RDM	4
#define SOCK_SEQPACKET	5



#define SOL_IP	0
#define SOL_SOCKET	1
#define SO_DEBUG	1
#define SO_OOBINLINE	10
#define SO_NO_CHECK	11
#define SO_PRIORITY	12
#define SO_LINGER	13
#define SOL_UDP	17
#define SO_REUSEADDR	2
#define SOL_RAW	255
#define SO_TYPE	3
#define SO_ERROR	4
#define SO_DONTROUTE	5
#define SOL_TCP	6
#define SO_BROADCAST	6
#define SO_SNDBUF	7
#define SO_RCVBUF	8
#define SO_KEEPALIVE	9
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/stat.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define S_ISBLK(m)	(((m)&amp S_IFMT)==S_IFBLK)
#define S_ISCHR(m)	(((m)&amp S_IFMT)==S_IFCHR)
#define S_ISDIR(m)	(((m)&amp S_IFMT)==S_IFDIR)
#define S_ISFIFO(m)	(((m)&amp S_IFMT)==S_IFIFO)
#define S_ISLNK(m)	(((m)&amp S_IFMT)==S_IFLNK)
#define S_ISREG(m)	(((m)&amp S_IFMT)==S_IFREG)
#define S_ISSOCK(m)	(((m)&amp S_IFMT)==S_IFSOCK)
#define S_TYPEISMQ(buf)	((buf)->st_mode - (buf)->st_mode)
#define S_TYPEISSEM(buf)	((buf)->st_mode - (buf)->st_mode)
#define S_TYPEISSHM(buf)	((buf)->st_mode - (buf)->st_mode)
#define S_IRWXU	(S_IREAD|S_IWRITE|S_IEXEC)
#define S_IROTH	(S_IRGRP>>3)
#define S_IRGRP	(S_IRUSR>>3)
#define S_IRWXO	(S_IRWXG>>3)
#define S_IRWXG	(S_IRWXU>>3)
#define S_IWOTH	(S_IWGRP>>3)
#define S_IWGRP	(S_IWUSR>>3)
#define S_IXOTH	(S_IXGRP>>3)
#define S_IXGRP	(S_IXUSR>>3)
#define S_ISVTX	01000
#define S_IXUSR	0x0040
#define S_IWUSR	0x0080
#define S_IRUSR	0x0100
#define S_ISGID	0x0400
#define S_ISUID	0x0800
#define S_IFIFO	0x1000
#define S_IFCHR	0x2000
#define S_IFDIR	0x4000
#define S_IFBLK	0x6000
#define S_IFREG	0x8000
#define S_IFLNK	0xa000
#define S_IFSOCK	0xc000
#define S_IFMT	0xf000
#define _STAT_VER	3
#define S_IREAD	S_IRUSR
#define S_IWRITE	S_IWUSR
#define S_IEXEC	S_IXUSR


struct stat
{
  dev_t st_dev;
  unsigned short __pad1;
  unsigned long st_ino;
  mode_t st_mode;
  nlink_t st_nlink;
  pid_t st_uid;
  gid_t st_gid;
  dev_t st_rdev;
  unsigned short __pad2;
  off_t st_size;
  blksize_t st_blksize;
  blkcnt_t st_blocks;
  time_t st_atime;
  unsigned long __unused1;
  time_t st_mtime;
  unsigned long __unused2;
  time_t st_ctime;
  unsigned long __unused3;
  unsigned long __unused4;
  unsigned long __unused5;
}
 ;
struct stat64
{
  dev_t st_dev;
  unsigned int __pad0;
  ino_t __st_ino;
  mode_t st_mode;
  nlink_t st_nlink;
  uid_t st_uid;
  gid_t st_gid;
  dev_t st_rdev;
  unsigned int __pad2;
  off64_t st_size;
  blksize_t st_blksize;
  blkcnt64_t st_blocks;
  time_t st_atime;
  unsigned long __unused1;
  time_t st_mtime;
  unsigned long __unused2;
  time_t st_ctime;
  unsigned long __unused3;
  ino64_t st_ino;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/statvfs.h</TITLE>
<PARA>
</PARA>
<SCREEN>



struct statvfs
{
  unsigned long f_bsize;
  unsigned long f_frsize;
  fsblkcnt_t f_blocks;
  fsblkcnt_t f_bfree;
  fsblkcnt_t f_bavail;
  fsfilcnt_t f_files;
  fsfilcnt_t f_ffree;
  fsfilcnt_t f_favail;
  unsigned long f_fsid;
  int __f_unused;
  unsigned long f_flag;
  unsigned long f_namemax;
  int __f_spare[6];
}
 ;
struct statvfs64
{
  unsigned long f_bsize;
  unsigned long f_frsize;
  fsblkcnt64_t f_blocks;
  fsblkcnt64_t f_bfree;
  fsblkcnt64_t f_bavail;
  fsfilcnt64_t f_files;
  fsfilcnt64_t f_ffree;
  fsfilcnt64_t f_favail;
  unsigned long f_fsid;
  int __f_unused;
  unsigned long f_flag;
  unsigned long f_namemax;
  int __f_spare[6];
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/time.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define ITIMER_REAL	0
#define ITIMER_VIRTUAL	1
#define ITIMER_PROF	2


struct timezone
{
  int tz_minuteswest;
  int tz_dsttime;
}
 ;








struct timespec
{
  time_t tv_sec;
  long tv_nsec;
}
 ;





struct timeval
{
  time_t tv_sec;
  suseconds_t tv_usec;
}
 ;


struct itimerval
{
  struct timeval it_interval;
  struct timeval it_value;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/timeb.h</TITLE>
<PARA>
</PARA>
<SCREEN>



struct timeb
{
  time_t time;
  unsigned short millitm;
  short timezone;
  short dstflag;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/times.h</TITLE>
<PARA>
</PARA>
<SCREEN>



struct tms
{
  clock_t tms_utime;
  clock_t tms_stime;
  clock_t tms_cutime;
  clock_t tms_cstime;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/types.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define FD_ISSET(d,set)	((set)->fds_bits[0]&amp (1&lt;&lt;d))
#define FD_CLR(d,set)	((set)->fds_bits[0]&amp =~(1&lt;&lt;d))
#define FD_SET(d,set)	((set)->fds_bits[0]|=(1&lt;&lt;d))
#define FD_SETSIZE	1024
#define FD_ZERO(fdsetp)	bzero(fdsetp, sizeof(*(fdsetp)))


typedef char int8_t;
typedef short int16_t;
typedef int int32_t;
typedef long long int64_t;
typedef unsigned char u_int8_t;
typedef unsigned short u_int16_t;
typedef unsigned int u_int32_t;
typedef int ssize_t;
typedef unsigned int uid_t;
typedef int pid_t;
typedef unsigned long off_t;
typedef int key_t;
typedef unsigned int socklen_t;
typedef unsigned int id_t;
typedef long suseconds_t;
typedef struct
{
  int __val[2];
}
fsid_t;
typedef unsigned long blksize_t;
typedef long fd_mask;
typedef int timer_t;
typedef int clockid_t;





typedef unsigned long long ino64_t;
typedef long long loff_t;
typedef unsigned long blkcnt_t;
typedef unsigned long fsblkcnt_t;
typedef unsigned long fsfilcnt_t;
typedef unsigned long long blkcnt64_t;
typedef unsigned long long fsblkcnt64_t;
typedef unsigned long long fsfilcnt64_t;
typedef unsigned char u_char;
typedef unsigned short u_short;
typedef unsigned long u_long;


typedef int ino_t;
typedef unsigned int gid_t;
typedef unsigned long long dev_t;
typedef unsigned int mode_t;
typedef int nlink_t;
typedef char *caddr_t;
typedef unsigned short ushort;


typedef struct
{
  unsigned long fds_bits[__FDSET_LONGS];
}
fd_set;


typedef long clock_t;
typedef long time_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/un.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define UNIX_PATH_MAX	108


struct sockaddr_un
{
  sa_family_t sun_family;
  char sun_path[UNIX_PATH_MAX];
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/utsname.h</TITLE>
<PARA>
</PARA>
<SCREEN>



struct utsname
{
  char sysname[65];
  char nodename[65];
  char release[65];
  char version[65];
  char machine[65];
  char domainname[65];
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>sys/wait.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define WIFSIGNALED(status)	(!WIFSTOPPED(status) &amp & !WIFEXITED(status))
#define WIFSTOPPED(status)	(((status) &amp  0xff) == 0x7f)
#define WEXITSTATUS(status)	(((status) &amp  0xff00) >> 8)
#define WTERMSIG(status)	((status) &amp  0x7f)
#define WCOREDUMP(status)	((status) &amp  0x80)
#define WIFEXITED(status)	(WTERMSIG(status) == 0)
#define WNOHANG	0x00000001
#define WUNTRACED	0x00000002
#define WCOREFLAG	0x80
#define WSTOPSIG(status)	WEXITSTATUS(status)


typedef enum
{
  P_ALL, P_PID, P_PGID
}
idtype_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>syslog.h</TITLE>
<PARA>
</PARA>
<SCREEN>




#define LOG_EMERG	0
#define LOG_ALERT	1
#define LOG_CRIT	2
#define LOG_ERR	3
#define LOG_WARNING	4
#define LOG_NOTICE	5
#define LOG_INFO	6
#define LOG_DEBUG	7



#define LOG_KERN	(0&lt;&lt;3)
#define LOG_AUTHPRIV	(10&lt;&lt;3)
#define LOG_FTP	(11&lt;&lt;3)
#define LOG_USER	(1&lt;&lt;3)
#define LOG_MAIL	(2&lt;&lt;3)
#define LOG_DAEMON	(3&lt;&lt;3)
#define LOG_AUTH	(4&lt;&lt;3)
#define LOG_SYSLOG	(5&lt;&lt;3)
#define LOG_LPR	(6&lt;&lt;3)
#define LOG_NEWS	(7&lt;&lt;3)
#define LOG_UUCP	(8&lt;&lt;3)
#define LOG_CRON	(9&lt;&lt;3)



#define LOG_LOCAL0	(16&lt;&lt;3)
#define LOG_LOCAL1	(17&lt;&lt;3)
#define LOG_LOCAL2	(18&lt;&lt;3)
#define LOG_LOCAL3	(19&lt;&lt;3)
#define LOG_LOCAL4	(20&lt;&lt;3)
#define LOG_LOCAL5	(21&lt;&lt;3)
#define LOG_LOCAL6	(22&lt;&lt;3)
#define LOG_LOCAL7	(23&lt;&lt;3)



#define LOG_UPTO(pri)	((1 &lt;&lt; ((pri)+1)) - 1)
#define LOG_MASK(pri)	(1 &lt;&lt; (pri))



#define LOG_PID	0x01
#define LOG_CONS	0x02
#define LOG_ODELAY	0x04
#define LOG_NDELAY	0x08
#define LOG_NOWAIT	0x10
#define LOG_PERROR	0x20
</SCREEN>
</SECT2>
<SECT2>
<TITLE>termios.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define TCIFLUSH	0
#define TCOOFF	0
#define TCSANOW	0
#define BS0	0000000
#define CR0	0000000
#define FF0	0000000
#define NL0	0000000
#define TAB0	0000000
#define VT0	0000000
#define OPOST	0000001
#define OLCUC	0000002
#define ONLCR	0000004
#define XCASE	0000004
#define OCRNL	0000010
#define ONOCR	0000020
#define ONLRET	0000040
#define OFILL	0000100
#define OFDEL	0000200
#define NL1	0000400
#define NLDLY	0000400
#define CR1	0001000
#define IUCLC	0001000
#define CR2	0002000
#define CR3	0003000
#define CRDLY	0003000
#define TAB1	0004000
#define TAB2	0010000
#define TAB3	0014000
#define TABDLY	0014000
#define BS1	0020000
#define BSDLY	0020000
#define VT1	0040000
#define VTDLY	0040000
#define FF1	0100000
#define FFDLY	0100000
#define TCOFLUSH	1
#define TCOON	1
#define TCSADRAIN	1
#define TCIOFF	2
#define TCIOFLUSH	2
#define TCSAFLUSH	2
#define TCION	3


struct winsize
{
  unsigned short ws_row;
  unsigned short ws_col;
  unsigned short ws_xpixel;
  unsigned short ws_ypixel;
}
 ;


typedef unsigned int speed_t;
typedef unsigned char cc_t;
typedef unsigned int tcflag_t;
#define NCCS	32


struct termios
{
  tcflag_t c_iflag;
  tcflag_t c_oflag;
  tcflag_t c_cflag;
  tcflag_t c_lflag;
  cc_t c_line;
  cc_t c_cc[NCCS];
  speed_t c_ispeed;
  speed_t c_ospeed;
}
 ;
#define VINTR	0
#define VQUIT	1
#define VSUSP	10
#define VEOL	11
#define VREPRINT	12
#define VDISCARD	13
#define VWERASE	14
#define VLNEXT	15
#define VEOL2	16
#define VERASE	2
#define VKILL	3
#define VEOF	4
#define VMIN	6
#define VSWTC	7
#define VSTART	8
#define VSTOP	9



#define IGNBRK	0000001
#define BRKINT	0000002
#define IGNPAR	0000004
#define PARMRK	0000010
#define INPCK	0000020
#define ISTRIP	0000040
#define INLCR	0000100
#define IGNCR	0000200
#define ICRNL	0000400
#define IXON	0002000
#define IXANY	0004000
#define IXOFF	0010000
#define IMAXBEL	0020000






#define CS5	0000000
#define CS6	0000020
#define CS7	0000040
#define CS8	0000060
#define CSIZE	0000060
#define CSTOPB	0000100
#define CREAD	0000200
#define PARENB	0000400
#define PARODD	0001000
#define HUPCL	0002000
#define CLOCAL	0004000
#define VTIME	5



#define ISIG	0000001
#define ICANON	0000002
#define ECHO	0000010
#define ECHOE	0000020
#define ECHOK	0000040
#define ECHONL	0000100
#define NOFLSH	0000200
#define TOSTOP	0000400
#define ECHOCTL	0001000
#define ECHOPRT	0002000
#define ECHOKE	0004000
#define FLUSHO	0010000
#define PENDIN	0040000
#define IEXTEN	0100000



#define B0	0000000
#define B50	0000001
#define B75	0000002
#define B110	0000003
#define B134	0000004
#define B150	0000005
#define B200	0000006
#define B300	0000007
#define B600	0000010
#define B1200	0000011
#define B1800	0000012
#define B2400	0000013
#define B4800	0000014
#define B9600	0000015
#define B19200	0000016
#define B38400	0000017
</SCREEN>
</SECT2>
<SECT2>
<TITLE>time.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define CLOCK_REALTIME	0
#define TIMER_ABSTIME	1
#define CLOCKS_PER_SEC	1000000l


struct tm
{
  int tm_sec;
  int tm_min;
  int tm_hour;
  int tm_mday;
  int tm_mon;
  int tm_year;
  int tm_wday;
  int tm_yday;
  int tm_isdst;
  long tm_gmtoff;
  char *tm_zone;
}
 ;
struct itimerspec
{
  struct timespec it_interval;
  struct timespec it_value;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>ulimit.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define UL_GETFSIZE	1
#define UL_SETFSIZE	2
</SCREEN>
</SECT2>
<SECT2>
<TITLE>unistd.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define SEEK_SET	0
#define STDIN_FILENO	0
#define SEEK_CUR	1
#define STDOUT_FILENO	1
#define SEEK_END	2
#define STDERR_FILENO	2


typedef long long off64_t;
typedef int *intptr_t;
#define F_OK	0
#define X_OK	1
#define W_OK	2
#define R_OK	4



#define _POSIX_VDISABLE	'\0'
#define _POSIX_ASYNCHRONOUS_IO	1
#define _POSIX_CHOWN_RESTRICTED	1
#define _POSIX_FSYNC	1
#define _POSIX_MAPPED_FILES	1
#define _POSIX_MEMLOCK	1
#define _POSIX_MEMLOCK_RANGE	1
#define _POSIX_MEMORY_PROTECTION	1
#define _POSIX_MESSAGE_PASSING	1
#define _POSIX_NO_TRUNC	1
#define _POSIX_PRIORITY_SCHEDULING	1
#define _POSIX_REALTIME_SIGNALS	1
#define _POSIX_SEMAPHORES	1
#define _POSIX_SHARED_MEMORY_OBJECTS	1
#define _POSIX_SYNCHRONIZED_IO	1
#define _POSIX_TIMERS	1
#define _POSIX2_C_VERSION	199209L
#define _POSIX2_VERSION	199209L
#define _POSIX_VERSION	199506L



#define _PC_LINK_MAX	0
#define _PC_MAX_CANON	1
#define _PC_ASYNC_IO	10
#define _PC_PRIO_IO	11
#define _PC_FILESIZEBITS	13
#define _PC_MAX_INPUT	2
#define _PC_NAME_MAX	3
#define _PC_PATH_MAX	4
#define _PC_PIPE_BUF	5
#define _PC_CHOWN_RESTRICTED	6
#define _PC_NO_TRUNC	7
#define _PC_VDISABLE	8
#define _PC_SYNC_IO	9



#define _SC_ARG_MAX	0
#define _SC_CHILD_MAX	1
#define _SC_PRIORITY_SCHEDULING	10
#define _SC_TIMERS	11
#define _SC_ASYNCHRONOUS_IO	12
#define _SC_XBS5_ILP32_OFF32	125
#define _SC_XBS5_ILP32_OFFBIG	126
#define _SC_XBS5_LP64_OFF64	127
#define _SC_XBS5_LPBIG_OFFBIG	128
#define _SC_XOPEN_LEGACY	129
#define _SC_PRIORITIZED_IO	13
#define _SC_XOPEN_REALTIME	130
#define _SC_SYNCHRONIZED_IO	14
#define _SC_MAPPED_FILES	16
#define _SC_MEMLOCK	17
#define _SC_MEMLOCK_RANGE	18
#define _SC_MEMORY_PROTECTION	19
#define _SC_CLK_TCK	2
#define _SC_MESSAGE_PASSING	20
#define _SC_SEMAPHORES	21
#define _SC_SHARED_MEMORY_OBJECTS	22
#define _SC_AIO_LISTIO_MAX	23
#define _SC_AIO_MAX	24
#define _SC_AIO_PRIO_DELTA_MAX	25
#define _SC_DELAYTIMER_MAX	26
#define _SC_MQ_OPEN_MAX	27
#define _SC_MQ_PRIO_MAX	28
#define _SC_VERSION	29
#define _SC_NGROUPS_MAX	3
#define _SC_PAGESIZE	30
#define _SC_RTSIG_MAX	31
#define _SC_SEM_NSEMS_MAX	32
#define _SC_SEM_VALUE_MAX	33
#define _SC_SIGQUEUE_MAX	34
#define _SC_TIMER_MAX	35
#define _SC_BC_BASE_MAX	36
#define _SC_BC_DIM_MAX	37
#define _SC_BC_SCALE_MAX	38
#define _SC_BC_STRING_MAX	39
#define _SC_OPEN_MAX	4
#define _SC_COLL_WEIGHTS_MAX	40
#define _SC_EXPR_NEST_MAX	42
#define _SC_LINE_MAX	43
#define _SC_RE_DUP_MAX	44
#define _SC_2_VERSION	46
#define _SC_2_C_BIND	47
#define _SC_2_C_DEV	48
#define _SC_2_FORT_DEV	49
#define _SC_STREAM_MAX	5
#define _SC_2_FORT_RUN	50
#define _SC_2_SW_DEV	51
#define _SC_2_LOCALEDEF	52
#define _SC_TZNAME_MAX	6
#define _SC_THREADS	67
#define _SC_THREAD_SAFE_FUNCTIONS	68
#define _SC_JOB_CONTROL	7
#define _SC_THREAD_DESTRUCTOR_ITERATIONS	73
#define _SC_THREAD_KEYS_MAX	74
#define _SC_THREAD_STACK_MIN	75
#define _SC_THREAD_THREADS_MAX	76
#define _SC_THREAD_ATTR_STACKADDR	77
#define _SC_THREAD_ATTR_STACKSIZE	78
#define _SC_THREAD_PRIORITY_SCHEDULING	79
#define _SC_SAVED_IDS	8
#define _SC_THREAD_PRIO_INHERIT	80
#define _SC_THREAD_PRIO_PROTECT	81
#define _SC_THREAD_PROCESS_SHARED	82
#define _SC_PASS_MAX	88
#define _SC_XOPEN_VERSION	89
#define _SC_REALTIME_SIGNALS	9
#define _SC_XOPEN_CRYPT	92
#define _SC_XOPEN_ENH_I18N	93
#define _SC_XOPEN_SHM	94
#define _SC_2_C_VERSION	96
#define _SC_2_UPE	97



#define _CS_PATH	0
#define _CS_XBS5_ILP32_OFF32_CFLAGS	1100
#define _CS_XBS5_ILP32_OFF32_LDFLAGS	1101
#define _CS_XBS5_ILP32_OFF32_LIBS	1102
#define _CS_XBS5_ILP32_OFF32_LINTFLAGS	1103
#define _CS_XBS5_ILP32_OFFBIG_CFLAGS	1104
#define _CS_XBS5_ILP32_OFFBIG_LDFLAGS	1105
#define _CS_XBS5_ILP32_OFFBIG_LIBS	1106
#define _CS_XBS5_ILP32_OFFBIG_LINTFLAGS	1107
#define _CS_XBS5_LP64_OFF64_CFLAGS	1108
#define _CS_XBS5_LP64_OFF64_LDFLAGS	1109
#define _CS_XBS5_LP64_OFF64_LIBS	1110
#define _CS_XBS5_LP64_OFF64_LINTFLAGS	1111
#define _CS_XBS5_LPBIG_OFFBIG_CFLAGS	1112
#define _CS_XBS5_LPBIG_OFFBIG_LDFLAGS	1113
#define _CS_XBS5_LPBIG_OFFBIG_LIBS	1114
#define _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS	1115



#define _XOPEN_REALTIME	1
#define _XOPEN_XPG4	1
#define _XOPEN_XCU_VERSION	4
#define _XOPEN_VERSION	500
</SCREEN>
</SECT2>
<SECT2>
<TITLE>utime.h</TITLE>
<PARA>
</PARA>
<SCREEN>



struct utimbuf
{
  time_t actime;
  time_t modtime;
}
 ;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>utmp.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define UT_HOSTSIZE	256
#define UT_LINESIZE	32
#define UT_NAMESIZE	32


struct exit_status
{
  short e_termination;
  short e_exit;
}
 ;
struct lastlog
{
  timer_t ll_time;
  char ll_line[UT_LINESIZE];
  char ll_host[UT_HOSTSIZE];
}
 ;


struct utmp
{
  short ut_type;
  pid_t ut_pid;
  char ut_line[UT_LINESIZE];
  char ut_id[4];
  char ut_user[UT_NAMESIZE];
  char ut_host[UT_HOSTSIZE];
  struct exit_status ut_exit;
  long ut_session;
  struct timeval ut_tv;
  int32_t ut_addr_v6[4];
  char __unused[20];
}
 ;
#define EMPTY	0
#define RUN_LVL	1
#define BOOT_TIME	2
#define NEW_TIME	3
#define OLD_TIME	4
#define INIT_PROCESS	5
#define LOGIN_PROCESS	6
#define USER_PROCESS	7
#define DEAD_PROCESS	8
#define ACCOUNTING	9
</SCREEN>
</SECT2>
<SECT2>
<TITLE>wchar.h</TITLE>
<PARA>
</PARA>
<SCREEN>

#define WEOF	(0xffffffffu)
#define WCHAR_MAX	0x7FFFFFFF
#define WCHAR_MIN	0x80000000
</SCREEN>
</SECT2>
<SECT2>
<TITLE>wctype.h</TITLE>
<PARA>
</PARA>
<SCREEN>



typedef unsigned long wctype_t;
typedef unsigned int wint_t;
typedef int wctrans_t;
typedef struct
{
  int count;
  wint_t value;
}
mbstate_t;
</SCREEN>
</SECT2>
<SECT2>
<TITLE>wordexp.h</TITLE>
<PARA>
</PARA>
<SCREEN>






enum
{
  WRDE_DOOFFS, WRDE_APPEND, WRDE_NOCMD, WRDE_REUSE, WRDE_SHOWERR, WRDE_UNDEF,
    __WRDE_FLAGS
}
 ;


typedef struct
{
  int we_wordc;
  char **we_wordv;
  int we_offs;
}
wordexp_t;


enum
{
  WRDE_NOSYS, WRDE_NOSPACE, WRDE_BADCHAR, WRDE_BADVAL, WRDE_CMDSUB,
    WRDE_SYNTAX
}
 ;
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libcman>
<TITLE>Interfaces Definitions for libc</TITLE>
<PARA>
</PARA>
include(_IO_feof.sgml)
include(_IO_getc.sgml)
include(_IO_putc.sgml)
include(_IO_puts.sgml)
include(__assert_fail.sgml)
include(__ctype_b.sgml)
include(__ctype_get_mb_cur_max.sgml)
include(__ctype_tolower.sgml)
include(__ctype_toupper.sgml)
include(__cxa_atexit.sgml)
include(__daylight.sgml)
include(__dcgettext.sgml)
include(__environ.sgml)
include(__errno_location.sgml)
include(__fpending.sgml)
include(__fxstat.sgml)
include(__fxstat64.sgml)
include(__getpagesize.sgml)
include(__getpgid.sgml)
include(__h_errno_location.sgml)
include(__isinf.sgml)
include(__isinff.sgml)
include(__isinfl.sgml)
include(__isnan.sgml)
include(__isnanf.sgml)
include(__isnanl.sgml)
include(__libc_current_sigrtmax.sgml)
include(__libc_current_sigrtmin.sgml)
include(__libc_start_main.sgml)
include(__lxstat.sgml)
include(__lxstat64.sgml)
include(__mempcpy.sgml)
include(__rawmemchr.sgml)
include(__sigsetjmp.sgml)
include(__stpcpy.sgml)
include(__strdup.sgml)
include(__strtod_internal.sgml)
include(__strtof_internal.sgml)
include(__strtok_r.sgml)
include(__strtol_internal.sgml)
include(__strtold_internal.sgml)
include(__strtoll_internal.sgml)
include(__strtoul_internal.sgml)
include(__strtoull_internal.sgml)
include(__sysconf.sgml)
include(__sysv_signal.sgml)
include(__timezone.sgml)
include(__tzname.sgml)
include(__wcstod_internal.sgml)
include(__wcstof_internal.sgml)
include(__wcstol_internal.sgml)
include(__wcstold_internal.sgml)
include(__wcstoul_internal.sgml)
include(__xmknod.sgml)
include(__xstat.sgml)
include(__xstat64.sgml)
include(_environ.sgml)
include(_nl_msg_cat_cntr.sgml)
include(_obstack_begin.sgml)
include(_obstack_newchunk.sgml)
include(_sys_errlist.sgml)
include(_sys_siglist.sgml)
include(acct.sgml)
include(adjtime.sgml)
include(adjtimex.sgml)
include(alphasort.sgml)
include(alphasort64.sgml)
include(asprintf.sgml)
include(bind_textdomain_codeset.sgml)
include(bindresvport.sgml)
include(bindtextdomain.sgml)
include(cfmakeraw.sgml)
include(cfsetspeed.sgml)
include(daemon.sgml)
include(dcgettext.sgml)
include(dcngettext.sgml)
include(dgettext.sgml)
include(dngettext.sgml)
include(err.sgml)
include(error.sgml)
include(errx.sgml)
include(fcntl.sgml)
include(flock.sgml)
include(fstatfs.sgml)
include(fstatfs64.sgml)
include(getdomainname.sgml)
include(gethostbyname.sgml)
include(gethostbyname_r.sgml)
include(getloadavg.sgml)
include(getopt.sgml)
include(getopt_long.sgml)
include(getopt_long_only.sgml)
include(getprotobyname.sgml)
include(getprotoent.sgml)
include(getpwnam_r.sgml)
include(gets.sgml)
include(getservbyname.sgml)
include(getservent.sgml)
include(gettext.sgml)
include(getutent.sgml)
include(getutent_r.sgml)
include(glob64.sgml)
include(globfree64.sgml)
include(initgroups.sgml)
include(ioctl.sgml)
include(isblank.sgml)
include(iswblank.sgml)
include(iswctype.sgml)
include(kill.sgml)
include(mbsnrtowcs.sgml)
include(memmem.sgml)
include(memrchr.sgml)
include(ngettext.sgml)
include(nice.sgml)
include(obstack_free.sgml)
include(opterr.sgml)
include(optind.sgml)
include(optopt.sgml)
include(psignal.sgml)
include(random_r.sgml)
include(setbuffer.sgml)
include(setdomainname.sgml)
include(setegid.sgml)
include(setenv.sgml)
include(seteuid.sgml)
include(setgroups.sgml)
include(sethostid.sgml)
include(sethostname.sgml)
include(setmntent.sgml)
include(setutent.sgml)
include(sigandset.sgml)
include(sigblock.sgml)
include(siggetmask.sgml)
include(sigisemptyset.sgml)
include(sigorset.sgml)
include(sigreturn.sgml)
include(statfs.sgml)
include(statfs64.sgml)
include(stime.sgml)
include(stpcpy.sgml)
include(stpncpy.sgml)
include(strcasestr.sgml)
include(strerror_r.sgml)
include(strfry.sgml)
include(strndup.sgml)
include(strnlen.sgml)
include(strptime.sgml)
include(strsep.sgml)
include(strsignal.sgml)
include(strtok_r.sgml)
include(strtoq.sgml)
include(strtouq.sgml)
include(strverscmp.sgml)
include(system.sgml)
include(textdomain.sgml)
include(unlink.sgml)
include(unsetenv.sgml)
include(vasprintf.sgml)
include(vdprintf.sgml)
include(verrx.sgml)
include(vsyslog.sgml)
include(wait3.sgml)
include(wait4.sgml)
include(waitid.sgml)
include(waitpid.sgml)
include(warn.sgml)
include(warnx.sgml)
include(wcpcpy.sgml)
include(wcpncpy.sgml)
include(wcscasecmp.sgml)
include(wcsdup.sgml)
include(wcsncasecmp.sgml)
include(wcsnlen.sgml)
include(wcsnrtombs.sgml)
include(wcstoq.sgml)
include(wcstouq.sgml)
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.49 2002/09/30 19:50:36 anderson Exp 0 -->
