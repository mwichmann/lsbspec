<REFENTRY ID="baselib--Unwind-Resume"> <REFMETA>
<REFENTRYTITLE>_Unwind_Resume</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>_Unwind_Resume
</REFNAME>
<REFPURPOSE>
private C++ error handling method
</REFPURPOSE>
</REFNAMEDIV>

<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>8 October 2002</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCPROTOTYPE>
 <FUNCDEF>void
  <FUNCTION>_Unwind_Resume</FUNCTION></FUNCDEF>
 <PARAMDEF><FUNCPARAMS>struct <STRUCTNAME>_Unwind_Exception</STRUCTNAME> 
  <PARAMETER>*object</PARAMETER></FUNCPARAMS></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>

<REFSECT1>
<REFSECT1INFO>
<DATE>8 October 2002</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>_Unwind_Resume</FUNCTION> 
resumes propagation of an existing exception <PARAMETER>object</PARAMETER>.
A call to this routine is inserted as the end of a landing pad that
performs cleanup, but does not resume normal execution. It causes
unwinding to proceed further.
</PARA>
</REFSECT1>
</REFENTRY>
