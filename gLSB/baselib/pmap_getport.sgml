<REFENTRY ID="baselib-pmap-getport-3"> <REFMETA>
<REFENTRYTITLE>pmap_getport</REFENTRYTITLE>
<REFMISCINFO>Base Libraries</REFMISCINFO>
</REFMETA>
<REFNAMEDIV>
<REFNAME>pmap_getport</REFNAME>
<REFPURPOSE>
Returns the port number on which a service is waiting for.
</REFPURPOSE>
</REFNAMEDIV>
<REFSYNOPSISDIV>
<REFSYNOPSISDIVINFO>
<DATE>6 June 2003</DATE>
</REFSYNOPSISDIVINFO>
<FUNCSYNOPSIS>
<FUNCSYNOPSISINFO>
#include &lt;pmap_clnt.h&gt;
</FUNCSYNOPSISINFO>
<FUNCPROTOTYPE>
 <FUNCDEF>extern u_short 
  <FUNCTION>*pmap_getport</FUNCTION></FUNCDEF>
 <PARAMDEF>struct sockaddr_in
  <PARAMETER><REPLACEABLE>*address</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>__const u_long
  <PARAMETER><REPLACEABLE>program</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>__const u_long
  <PARAMETER><REPLACEABLE>*version</REPLACEABLE></PARAMETER></PARAMDEF>
 <PARAMDEF>u_int 
  <PARAMETER><REPLACEABLE>protocol</REPLACEABLE></PARAMETER></PARAMDEF>
</FUNCPROTOTYPE>
</FUNCSYNOPSIS>
</REFSYNOPSISDIV>
<REFSECT1>
<REFSECT1INFO>
<DATE>6 June 2003</DATE>
</REFSECT1INFO>
<TITLE>Description
</TITLE>
<PARA>
<FUNCTION>pmap_getport</FUNCTION> returns the port number on which a service 
is waiting for.
<FUNCTION>pmap_getport</FUNCTION> is called given the RPC program
number <PARAMETER>program</PARAMETER>, <PARAMETER>version</PARAMETER>,
and the transport <PARAMETER>protocol</PARAMETER> set to either
<VARNAME>IPPROTO_UDP</VARNAME> or <VARNAME>IPPROTO_TCP</VARNAME>.  
The pre-allocated socket <PARAMETER>address</PARAMETER> is a returned parameter.
</PARA>
</REFSECT1>
<REFSECT1>
<TITLE>Return Value
</TITLE>
<PARA>
<FUNCTION>pmap_getport</FUNCTION> returns 0 if the mapping does not exist
or if contact to the remote portmap service failed.  If the remote portmap
service could not be reached, the status is left in the global variable
<VARNAME>rpc_createerr</VARNAME>.
</PARA>
</REFSECT1>

<!--	  LDP GENERAL PUBLIC LICENSE  -->
<!--        Version 1a, November 1998   -->

</REFENTRY>

