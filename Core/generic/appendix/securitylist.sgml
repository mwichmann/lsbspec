<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mklibapnd -->
<SECT1 ID=app-libnspr4>
<TITLE>libnspr4</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.NSPR"> [NSPR]
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libnspr4 Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>PR_Abort<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_GetLayersIdentity<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_NotifyCondVar<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_Accept<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_GetOSError<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Now<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_AtomicAdd<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_GetSocketOption<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Open<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_AtomicDecrement<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_GetThreadPrivate<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_OpenTCPSocket<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_AtomicIncrement<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_GetThreadScope<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_OpenUDPSocket<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_AtomicSet<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_GetThreadState<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_ParseTimeString<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_Bind<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_GetUniqueIdentity<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_ParseTimeStringToExplodedTime<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_Cleanup<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_ImplodeTime<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Poll<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_ClearInterrupt<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_ImportTCPSocket<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_PopIOLayer<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_Close<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Init<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_ProcessExit<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_Connect<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Initialize<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_PushIOLayer<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_ConnectContinue<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_InitializeNetAddr<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Read<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_ConvertIPv4AddrToIPv6<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Initialized<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Recv<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_CreateIOLayerStub<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Interrupt<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_RecvFrom<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_CreatePipe<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_IntervalNow<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_SecondsToInterval<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_DestroyCondVar<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_IntervalToMicroseconds<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Send<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_DestroyLock<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_IntervalToMilliseconds<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_SendTo<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_EnumerateAddrInfo<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_IntervalToSeconds<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_SetError<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_ExplodeTime<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Listen<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_SetErrorText<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_FormatTime<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_LocalTimeParameters<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_SetSocketOption<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_FreeAddrInfo<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Lock<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_SetThreadPrivate<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_GMTParameters<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_MicrosecondsToInterval<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Shutdown<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_GetAddrInfoByName<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_MillisecondsToInterval<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Sleep<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_GetCanonNameFromAddrInfo<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_NetAddrToString<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_StringToNetAddr<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_GetDefaultIOMethods<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_NewCondVar<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_TicksPerSecond<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_GetDescType<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_NewLock<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Unlock<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_GetError<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_NewThreadPrivateIndex<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_WaitCondVar<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_GetErrorText<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_NormalizeTime<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_Write<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY></ROW>
<ROW><ENTRY>PR_GetErrorTextLength<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY>PR_NotifyAllCondVar<LINK LINKEND="std.NSPR">[NSPR]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libnss3>
<TITLE>libnss3</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.NSS.SSL"> [NSS SSL]
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libnss3 Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>CERT_CheckCertValidTimes(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>CERT_VerifyCertNow(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>PK11_GetSlotName(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>CERT_DestroyCertificate(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>NSS_Init(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>PK11_GetTokenName(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>CERT_DupCertificate(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>NSS_InitReadWrite(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>PK11_IsHW(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>CERT_FreeNicknames(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>NSS_NoDB_Init(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>PK11_IsPresent(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>CERT_GetCertNicknames(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>NSS_Shutdown(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>PK11_IsReadOnly(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>CERT_GetDefaultCertDB(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>PK11_FindCertFromNickname(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>PK11_SetPasswordFunc(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>CERT_VerifyCertName(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>PK11_FindKeyByAnyCert(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SECKEY_DestroyPrivateKey(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<SECT1 ID=app-libssl3>
<TITLE>libssl3</TITLE>
<PARA>
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following Standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
<XREF LINKEND="STD.NSS.SSL"> [NSS SSL]
</MEMBER>
</SIMPLELIST>
</PARA>
<TABLE>
<TITLE>libssl3 Function Interfaces</TITLE>
<TGROUP COLS=3>
<TBODY>
<ROW><ENTRY>NSS_CmpCertChainWCANames(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_ConfigMPServerSIDCache(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_OptionSet(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>NSS_FindCertKEAType(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_ConfigSecureServer(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_OptionSetDefault(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>NSS_GetClientAuthData(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_ConfigServerSessionIDCache(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_PeerCertificate(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>SSL_AuthCertificate(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_DataPending(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_ReHandshake(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>SSL_AuthCertificateHook(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_ForceHandshake(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_ResetHandshake(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>SSL_BadCertHook(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_GetClientAuthDataHook(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_RevealPinArg(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>SSL_CipherPolicyGet(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_GetSessionID(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_RevealURL(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>SSL_CipherPolicySet(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_HandshakeCallback(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_SecurityStatus(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>SSL_CipherPrefGet(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_ImportFD(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_SetPKCS11PinArg(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>SSL_CipherPrefGetDefault(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_InheritMPServerSIDCache(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_SetSockPeerID(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>SSL_CipherPrefSet(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_InvalidateSession(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_SetURL(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY></ROW>
<ROW><ENTRY>SSL_CipherPrefSetDefault(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_OptionGet(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>SSL_ClearSessionCache(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY>SSL_OptionGetDefault(NSS_3.2)<LINK LINKEND="std.NSS.SSL">[NSS SSL]</LINK></ENTRY><ENTRY></ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT1>
<!-- End of text generated from database -->
