How to hack on the LSB spec
---------------------------

This document concerns the database portion of the LSB spec.  Because
the files generated from the database are checked into CVS, you
probably won't need to mess with the database and you can skip to
build.html in this directory.  But if you do need to deal with the
database, the following might help.

We'll start with the apologies.  This is all going to seem like a
complicated way to maintain a specification document.  However,
maintaining the specification in a database stuff makes it easy to do
cool things like:

* Queries such as "show me which interfaces are in POSIX.2 but not the
Linux Standard Base" or "show me the interfaces which are in the Linux
Standard Base but not the Single Unix Specification".

* Automatically generate lists of functions for a program which tests
that an application only makes calls to specified functions.

* Use the function prototype information to automatically generate
tables which a run-time checking program can use to verify an
application's behavior (for example, that a pointer points within the
application's address space, that a enumerated value is one of the
legal values, &c).

Anyway, here is how you build/modify the specification:

1.  Get a copy of mysql.  I used mysql from Red Hat Powertools 6.1,
but any copy of mysql should do (http://www.tcx.se/ being the master
site).  I'm using 3.20.32a which is the latest GPL'd version as I
write this.

2.  As root, give your "lsbuser" and "lsbadmin" users access to the database.

#!/bin/sh

mysql mysql << MYSQL
DELETE FROM user WHERE User='lsbuser';
DELETE FROM user WHERE User='lsbadmin';
DELETE FROM db WHERE User='lsbuser';
DELETE FROM db WHERE User='lsbadmin';
INSERT INTO user (Host,User,Select_priv) VALUES ('%','lsbuser','Y');
INSERT INTO user (Host,User,Select_priv) VALUES ('localhost','lsbuser','Y');
INSERT INTO user (Host,User,Password,Select_priv,Insert_priv,Update_priv,Delete_priv) VALUES ('%','lsbadmin',password('lf0d'),'Y','Y','Y','Y');
INSERT INTO user (Host,User,Password,Select_priv,Insert_priv,Update_priv,Delete_priv) VALUES ('localhost','lsbadmin',password('lf0d'),'Y','Y','Y','Y');
INSERT INTO db (Host,Db,User) VALUES ('%','lsb','lsbuser');
INSERT INTO db (Host,Db,User) VALUES ('localhost','lsb','lsbuser');
INSERT INTO db (Host,Db,User,Select_priv,Insert_priv,Update_priv,Delete_priv) VALUES ('%','lsb','lsbadmin','Y','Y','Y','Y');
INSERT INTO db (Host,Db,User,Select_priv,Insert_priv,Update_priv,Delete_priv) VALUES ('localhost','lsb','lsbadmin','Y','Y','Y','Y');
MYSQL

mysqladmin reload

#EOF

(see the mySQL FAQ for how to do things if you aren't root)

3.  Create a database called "lsb":

#/bin/sh
cd ../data/dbdump
make restore
#EOF

4.  For info on the SGML/DocBook side of things, see the build.html
file in this directory.
Some people suggest sgmltools-lite from Sourceforge.Net
located at http://download.sourceforge.net/sgmltools-lite/

6.  Now, where to get started?  baselib/select.sgml is a simple
example of the documentation for one function, which may be
instructive.  If you don't know DocBook, you'll probably need to refer
to the DocBook documentation online at
http://www.oasis-open.org/docbook/.  Other than that, just walk
through the makefiles until you figure things out I guess.  Feel free
to ask on the LSB mailing lists if you are having trouble finding
things.

7.  The "spec/gLSB" subdirectory is both in CVS and generated by the
makefiles, and the makefiles do some moving it around in a way that
doesn't completely work.  One workaround is to manually delete
"D/gLSB////" from spec/CVS/Entries (until we can come up with a cleaner way
to handle the whole thing).  Similarly for each archLSB.
