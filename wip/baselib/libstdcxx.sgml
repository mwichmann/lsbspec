<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.50 2003/02/12 05:24:36 gk4 Exp 0 -->
<!--    at Mon Apr 21 08:23:08 2003 -->
<SECT1 ID=libstdcxx>
<TITLE>Interfaces for libstdcxx</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx Definition</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>Library:</ENTRY>
<ENTRY>libstdcxx</ENTRY>
</ROW>
<ROW>
<ENTRY>SONAME:</ENTRY>
<ENTRY>libstdc++.so.5</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<PARA>
All symbols are in the <VARNAME>std::</VARNAME> namespace.
</PARA>
<PARA>
The behavior of the interfaces in this library is specified by the following standards.<SIMPLELIST COLUMNS=1>
<MEMBER>
ISO/IEC 14882: 1998(E) Programming languages --C++<FOOTNOTE ID="std-231-65">
<PARA>
ISO/IEC 14882: 1998(E) Programming languages --C++</PARA>
</FOOTNOTE>
</MEMBER>
<MEMBER>
Linux Standard Base<FOOTNOTE ID="std-231-10">
<PARA>
Linux Standard Base</PARA>
</FOOTNOTE>
</MEMBER>
</SIMPLELIST>
</PARA>
<SECT2>
<TITLE>18.4 C++ Dynamic Memory Managment</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 18.4 C++ Dynamic Memory Managment Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>operator delete&lsqb;](void*)</primary></indexterm>operator delete&lsqb;](void*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>operator new&lsqb;](unsigned)</primary></indexterm>operator new&lsqb;](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>operator delete&lsqb;](void*, nothrow_t const&)</primary></indexterm>operator delete&lsqb;](void*, nothrow_t const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>operator new&lsqb;](unsigned, nothrow_t const&)</primary></indexterm>operator new&lsqb;](unsigned, nothrow_t const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>operator delete(void*)</primary></indexterm>operator delete(void*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>operator new(unsigned)</primary></indexterm>operator new(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>operator delete(void*, nothrow_t const&)</primary></indexterm>operator delete(void*, nothrow_t const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>operator new(unsigned, nothrow_t const&)</primary></indexterm>operator new(unsigned, nothrow_t const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>18.5 C++ Type identification</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 18.5 C++ Type identification Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>type_info::__do_catch(type_info const*, void**, unsigned) const</primary></indexterm>type_info::__do_catch(type_info const*, void**, unsigned) const</ENTRY>
<ENTRY><indexterm><primary>bad_cast::~bad_cast &lsqb;in-charge deleting]()</primary></indexterm>bad_cast::~bad_cast &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</primary></indexterm>type_info::__do_upcast(__cxxabiv1::__class_type_info const*, void**) const</ENTRY>
<ENTRY><indexterm><primary>bad_cast::~bad_cast &lsqb;in-charge]()</primary></indexterm>bad_cast::~bad_cast &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>type_info::__is_pointer_p() const</primary></indexterm>type_info::__is_pointer_p() const</ENTRY>
<ENTRY><indexterm><primary>bad_cast::~bad_cast &lsqb;not-in-charge]()</primary></indexterm>bad_cast::~bad_cast &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>type_info::__is_function_p() const</primary></indexterm>type_info::__is_function_p() const</ENTRY>
<ENTRY><indexterm><primary>type_info::~type_info &lsqb;in-charge deleting]()</primary></indexterm>type_info::~type_info &lsqb;in-charge deleting]()</ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid &lsqb;in-charge deleting]()</primary></indexterm>bad_typeid::~bad_typeid &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>type_info::~type_info &lsqb;in-charge]()</primary></indexterm>type_info::~type_info &lsqb;in-charge]()</ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid &lsqb;in-charge]()</primary></indexterm>bad_typeid::~bad_typeid &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>type_info::~type_info &lsqb;not-in-charge]()</primary></indexterm>type_info::~type_info &lsqb;not-in-charge]()</ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bad_typeid::~bad_typeid &lsqb;not-in-charge]()</primary></indexterm>bad_typeid::~bad_typeid &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>__throw_bad_typeid()</primary></indexterm>__throw_bad_typeid()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libstdcxx - 18.5 C++ Type identification Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>typeinfo for type_info</primary></indexterm>typeinfo for type_info<FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>18.6 C++ Exception handling</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 18.6 C++ Exception handling Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>unexpected()</primary></indexterm>unexpected()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>uncaught_exception()</primary></indexterm>uncaught_exception()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>set_unexpected(void (*)())</primary></indexterm>set_unexpected(void (*)())<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>terminate()</primary></indexterm>terminate()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>18.6.1 C++ Class exception</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 18.6.1 C++ Class exception Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>exception::what() const</primary></indexterm>exception::what() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>exception::~exception &lsqb;in-charge]()</primary></indexterm>exception::~exception &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>exception::~exception &lsqb;in-charge deleting]()</primary></indexterm>exception::~exception &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>exception::~exception &lsqb;not-in-charge]()</primary></indexterm>exception::~exception &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>18.6.2.1 C++ Class bad_exception</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 18.6.2.1 C++ Class bad_exception Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>domain_error::~domain_error &lsqb;in-charge deleting]()</primary></indexterm>domain_error::~domain_error &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>bad_exception::~bad_exception &lsqb;in-charge]()</primary></indexterm>bad_exception::~bad_exception &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>bad_exception::~bad_exception &lsqb;in-charge deleting]()</primary></indexterm>bad_exception::~bad_exception &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>bad_exception::~bad_exception &lsqb;not-in-charge]()</primary></indexterm>bad_exception::~bad_exception &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>19.1 Exception classes</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 19.1 Exception classes Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>logic_error::what() const</primary></indexterm>logic_error::what() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>out_of_range::~out_of_range &lsqb;in-charge deleting]()</primary></indexterm>out_of_range::~out_of_range &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>logic_error::logic_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>logic_error::logic_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>out_of_range::~out_of_range &lsqb;in-charge]()</primary></indexterm>out_of_range::~out_of_range &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>logic_error::logic_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>logic_error::logic_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>runtime_error::runtime_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>runtime_error::runtime_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>logic_error::~logic_error &lsqb;in-charge deleting]()</primary></indexterm>logic_error::~logic_error &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>runtime_error::runtime_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>runtime_error::runtime_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>logic_error::~logic_error &lsqb;in-charge]()</primary></indexterm>logic_error::~logic_error &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>runtime_error::~runtime_error &lsqb;in-charge deleting]()</primary></indexterm>runtime_error::~runtime_error &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>logic_error::~logic_error &lsqb;not-in-charge]()</primary></indexterm>logic_error::~logic_error &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>runtime_error::~runtime_error &lsqb;in-charge]()</primary></indexterm>runtime_error::~runtime_error &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>range_error::range_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>range_error::range_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>runtime_error::~runtime_error &lsqb;not-in-charge]()</primary></indexterm>runtime_error::~runtime_error &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>range_error::range_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>range_error::range_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>overflow_error::overflow_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>overflow_error::overflow_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>range_error::~range_error &lsqb;in-charge deleting]()</primary></indexterm>range_error::~range_error &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>overflow_error::overflow_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>overflow_error::overflow_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>range_error::~range_error &lsqb;in-charge]()</primary></indexterm>range_error::~range_error &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>overflow_error::~overflow_error &lsqb;in-charge deleting]()</primary></indexterm>overflow_error::~overflow_error &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>domain_error::domain_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>domain_error::domain_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>overflow_error::~overflow_error &lsqb;in-charge]()</primary></indexterm>overflow_error::~overflow_error &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>domain_error::domain_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>domain_error::domain_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>underflow_error::underflow_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>underflow_error::underflow_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>domain_error::~domain_error &lsqb;in-charge]()</primary></indexterm>domain_error::~domain_error &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>underflow_error::underflow_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>underflow_error::underflow_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>length_error::length_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>length_error::length_error&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>underflow_error::~underflow_error &lsqb;in-charge deleting]()</primary></indexterm>underflow_error::~underflow_error &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>length_error::length_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>length_error::length_error&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>underflow_error::~underflow_error &lsqb;in-charge]()</primary></indexterm>underflow_error::~underflow_error &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>length_error::~length_error &lsqb;in-charge deleting]()</primary></indexterm>length_error::~length_error &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>invalid_argument::invalid_argument&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>invalid_argument::invalid_argument&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>length_error::~length_error &lsqb;in-charge]()</primary></indexterm>length_error::~length_error &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>invalid_argument::invalid_argument&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>invalid_argument::invalid_argument&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>out_of_range::out_of_range&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>out_of_range::out_of_range&lsqb;in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument &lsqb;in-charge deleting]()</primary></indexterm>invalid_argument::~invalid_argument &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>out_of_range::out_of_range&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>out_of_range::out_of_range&lsqb;not-in-charge](basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>invalid_argument::~invalid_argument &lsqb;in-charge]()</primary></indexterm>invalid_argument::~invalid_argument &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>21.3.1 C++ Class basic_string constructors</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 21.3.1 C++ Class basic_string constructors Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](wchar_t const*, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](wchar_t const*, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](wchar_t const*, unsigned, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](wchar_t const*, unsigned, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](unsigned, wchar_t, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](unsigned, wchar_t, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge]()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&, unsigned, unsigned, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > > >(__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > > >(__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](unsigned, wchar_t, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge](unsigned, wchar_t, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > > >(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > > >(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge]()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge]&lt;wchar_t const*>(wchar_t const*, wchar_t const*, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge]&lt;wchar_t const*>(wchar_t const*, wchar_t const*, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > > >(__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > > >(__gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, __gnu_cxx::__normal_iterator&lt;wchar_t const*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge]&lt;wchar_t*>(wchar_t*, wchar_t*, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge]&lt;wchar_t*>(wchar_t*, wchar_t*, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > > >(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge]&lt;__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > > >(__gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, __gnu_cxx::__normal_iterator&lt;wchar_t*, basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > >, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_string &lsqb;in-charge]()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_string &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge]&lt;wchar_t const*>(wchar_t const*, wchar_t const*, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge]&lt;wchar_t const*>(wchar_t const*, wchar_t const*, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_string &lsqb;not-in-charge]()</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::~basic_string &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge]&lt;wchar_t*>(wchar_t*, wchar_t*, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;in-charge]&lt;wchar_t*>(wchar_t*, wchar_t*, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::operator=(wchar_t const*)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::operator=(wchar_t const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](wchar_t const*, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](wchar_t const*, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::operator=(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::operator=(basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](wchar_t const*, unsigned, allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](wchar_t const*, unsigned, allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::operator=(wchar_t)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::operator=(wchar_t)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](allocator&lt;wchar_t> const&)</primary></indexterm>basic_string&lt;wchar_t, char_traits&lt;wchar_t>, allocator&lt;wchar_t> >::basic_string&lsqb;not-in-charge](allocator&lt;wchar_t> const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>21.3.2 C++ Class basic_string iterator support</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 21.3.2 C++ Class basic_string iterator support Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::end() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::end() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::begin() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::begin() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rend() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rend() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rbegin() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rbegin() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>21.3.3 C++ Class basic_string capacity</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 21.3.3 C++ Class basic_string capacity Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::size() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::size() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::resize(unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::resize(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::length() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::length() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::resize(unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::resize(unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::max_size() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::max_size() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::reserve(unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::reserve(unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::clear()</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::clear()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>21.3.4 C++ Class basic_string element access</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 21.3.4 C++ Class basic_string element access Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::at(unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::at(unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::operator&lsqb;](unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::operator&lsqb;](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>21.3.5 C++ Class basic_string modifiers</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 21.3.5 C++ Class basic_string modifiers Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::copy(char*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::copy(char*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::swap(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::swap(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::erase(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::erase(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::erase(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::erase(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char const*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::erase(unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::erase(unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, char const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(char const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, char const*, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, char const*, char const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(char const*, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, char const*, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, char*, char*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, char*, char*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::append(unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(char const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, __gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(char const*, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, char const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, char const*, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::assign(unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::replace(unsigned, unsigned, unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, unsigned, char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(__gnu_cxx::__normal_iterator&lt;char*, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > >, unsigned, char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::operator=(char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::operator=(char const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, char const*)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, char const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::operator=(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::operator=(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, char const*, unsigned)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::insert(unsigned, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::operator=(char)</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::operator=(char)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>21.3.6 C++ Class basic_string string operations</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 21.3.6 C++ Class basic_string string operations Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(char const*, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(char const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(char const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(char const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(char const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(char, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(char, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(char, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_last_of(char, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::c_str() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::c_str() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(char const*, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(char const*, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(char const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(char const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(char const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(char const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(char, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_of(char, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(char, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::rfind(char, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::get_allocator() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::get_allocator() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::substr(unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::substr(unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(char const*, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(char const*) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(char const*, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(char const*, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, char const*) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(char, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find_first_not_of(char, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, char const*, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::data() const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::data() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(char const*, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::find(char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned) const</primary></indexterm>basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >::compare(unsigned, unsigned, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> > const&, unsigned, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>21.3.7 C++ class basic_string non-member functions</TITLE>
<PARA>
</PARA>
</SECT2>
<SECT2>
<TITLE>22.1.1 C++ Class locale</TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.1.1 C++ Class locale Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>locale::name() const</primary></indexterm>locale::name() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>locale::locale&lsqb;in-charge](locale const&, locale const&, unsigned)</primary></indexterm>locale::locale&lsqb;in-charge](locale const&, locale const&, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>locale::operator==(locale const&) const</primary></indexterm>locale::operator==(locale const&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>locale::locale&lsqb;in-charge]()</primary></indexterm>locale::locale&lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>locale::id::id&lsqb;in-charge]()</primary></indexterm>locale::id::id&lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>locale::locale&lsqb;not-in-charge](char const*)</primary></indexterm>locale::locale&lsqb;not-in-charge](char const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>locale::id::id&lsqb;not-in-charge]()</primary></indexterm>locale::id::id&lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>locale::locale&lsqb;not-in-charge](locale::_Impl*)</primary></indexterm>locale::locale&lsqb;not-in-charge](locale::_Impl*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>locale::global(locale const&)</primary></indexterm>locale::global(locale const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>locale::locale&lsqb;not-in-charge](locale const&)</primary></indexterm>locale::locale&lsqb;not-in-charge](locale const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>locale::classic()</primary></indexterm>locale::classic()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>locale::locale&lsqb;not-in-charge](locale const&, char const*, unsigned)</primary></indexterm>locale::locale&lsqb;not-in-charge](locale const&, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>locale::locale&lsqb;in-charge](char const*)</primary></indexterm>locale::locale&lsqb;in-charge](char const*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>locale::locale&lsqb;not-in-charge](locale const&, locale const&, unsigned)</primary></indexterm>locale::locale&lsqb;not-in-charge](locale const&, locale const&, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>locale::locale&lsqb;in-charge](locale::_Impl*)</primary></indexterm>locale::locale&lsqb;in-charge](locale::_Impl*)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>locale::locale&lsqb;not-in-charge]()</primary></indexterm>locale::locale&lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>locale::locale&lsqb;in-charge](locale const&)</primary></indexterm>locale::locale&lsqb;in-charge](locale const&)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>locale::~locale &lsqb;in-charge]()</primary></indexterm>locale::~locale &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>locale::locale&lsqb;in-charge](locale const&, char const*, unsigned)</primary></indexterm>locale::locale&lsqb;in-charge](locale const&, char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>locale::~locale &lsqb;not-in-charge]()</primary></indexterm>locale::~locale &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.1.3 C++ ctype specializations ctype&lt;char></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.1.3 C++ ctype specializations ctype&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;char>::do_scan_is(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char>::do_scan_is(unsigned short, char const*, char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;char>::do_narrow(char const*, char const*, char, char*) const</primary></indexterm>ctype&lt;char>::do_narrow(char const*, char const*, char, char*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;char>::do_tolower(char*, char const*) const</primary></indexterm>ctype&lt;char>::do_tolower(char*, char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;char>::do_narrow(char, char) const</primary></indexterm>ctype&lt;char>::do_narrow(char, char) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;char>::do_tolower(char) const</primary></indexterm>ctype&lt;char>::do_tolower(char) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;char>::classic_table()</primary></indexterm>ctype&lt;char>::classic_table()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;char>::do_toupper(char*, char const*) const</primary></indexterm>ctype&lt;char>::do_toupper(char*, char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;char>::ctype&lsqb;in-charge](__locale_struct*, unsigned short const*, bool, unsigned)</primary></indexterm>ctype&lt;char>::ctype&lsqb;in-charge](__locale_struct*, unsigned short const*, bool, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;char>::do_toupper(char) const</primary></indexterm>ctype&lt;char>::do_toupper(char) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;char>::ctype&lsqb;in-charge](unsigned short const*, bool, unsigned)</primary></indexterm>ctype&lt;char>::ctype&lsqb;in-charge](unsigned short const*, bool, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;char>::do_scan_not(unsigned short, char const*, char const*) const</primary></indexterm>ctype&lt;char>::do_scan_not(unsigned short, char const*, char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;char>::ctype&lsqb;not-in-charge](__locale_struct*, unsigned short const*, bool, unsigned)</primary></indexterm>ctype&lt;char>::ctype&lsqb;not-in-charge](__locale_struct*, unsigned short const*, bool, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;char>::do_is(char const*, char const*, unsigned short*) const</primary></indexterm>ctype&lt;char>::do_is(char const*, char const*, unsigned short*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;char>::ctype&lsqb;not-in-charge](unsigned short const*, bool, unsigned)</primary></indexterm>ctype&lt;char>::ctype&lsqb;not-in-charge](unsigned short const*, bool, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;char>::do_is(unsigned short, char) const</primary></indexterm>ctype&lt;char>::do_is(unsigned short, char) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;char>::~ctype &lsqb;in-charge deleting]()</primary></indexterm>ctype&lt;char>::~ctype &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;char>::do_widen(char const*, char const*, char*) const</primary></indexterm>ctype&lt;char>::do_widen(char const*, char const*, char*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;char>::~ctype &lsqb;in-charge]()</primary></indexterm>ctype&lt;char>::~ctype &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;char>::do_widen(char) const</primary></indexterm>ctype&lt;char>::do_widen(char) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;char>::~ctype &lsqb;not-in-charge]()</primary></indexterm>ctype&lt;char>::~ctype &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libstdcxx - 22.2.1.3 C++ ctype specializations ctype&lt;char> Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;char>::id</primary></indexterm>ctype&lt;char>::id<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.1.3 C++ ctype specializations ctype&lt;wchar_t></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.1.3 C++ ctype specializations ctype&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t>::do_scan_is(unsigned short, wchar_t const*, wchar_t const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_widen(char) const</primary></indexterm>ctype&lt;wchar_t>::do_widen(char) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_tolower(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t>::do_tolower(wchar_t*, wchar_t const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const</primary></indexterm>ctype&lt;wchar_t>::do_narrow(wchar_t const*, wchar_t const*, char, char*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_tolower(wchar_t) const</primary></indexterm>ctype&lt;wchar_t>::do_tolower(wchar_t) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_narrow(wchar_t, char) const</primary></indexterm>ctype&lt;wchar_t>::do_narrow(wchar_t, char) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_toupper(wchar_t*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t>::do_toupper(wchar_t*, wchar_t const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::ctype&lsqb;in-charge](__locale_struct*, unsigned)</primary></indexterm>ctype&lt;wchar_t>::ctype&lsqb;in-charge](__locale_struct*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_toupper(wchar_t) const</primary></indexterm>ctype&lt;wchar_t>::do_toupper(wchar_t) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::ctype&lsqb;in-charge](unsigned)</primary></indexterm>ctype&lt;wchar_t>::ctype&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const</primary></indexterm>ctype&lt;wchar_t>::do_scan_not(unsigned short, wchar_t const*, wchar_t const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::ctype&lsqb;not-in-charge](__locale_struct*, unsigned)</primary></indexterm>ctype&lt;wchar_t>::ctype&lsqb;not-in-charge](__locale_struct*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::_M_convert_to_wmask(unsigned short) const</primary></indexterm>ctype&lt;wchar_t>::_M_convert_to_wmask(unsigned short) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::ctype&lsqb;not-in-charge](unsigned)</primary></indexterm>ctype&lt;wchar_t>::ctype&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_is(wchar_t const*, wchar_t const*, unsigned short*) const</primary></indexterm>ctype&lt;wchar_t>::do_is(wchar_t const*, wchar_t const*, unsigned short*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::~ctype &lsqb;in-charge deleting]()</primary></indexterm>ctype&lt;wchar_t>::~ctype &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_is(unsigned short, wchar_t) const</primary></indexterm>ctype&lt;wchar_t>::do_is(unsigned short, wchar_t) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::~ctype &lsqb;in-charge]()</primary></indexterm>ctype&lt;wchar_t>::~ctype &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::do_widen(char const*, char const*, wchar_t*) const</primary></indexterm>ctype&lt;wchar_t>::do_widen(char const*, char const*, wchar_t*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::~ctype &lsqb;not-in-charge]()</primary></indexterm>ctype&lt;wchar_t>::~ctype &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libstdcxx - 22.2.1.3 C++ ctype specializations ctype&lt;wchar_t> Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>ctype&lt;wchar_t>::id</primary></indexterm>ctype&lt;wchar_t>::id<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.1.4 C++ class ctype_byname&lt;char></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.1.4 C++ class ctype_byname&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>ctype_byname&lt;char>::ctype_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>ctype_byname&lt;char>::ctype_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype_byname&lt;char>::~ctype_byname &lsqb;in-charge]()</primary></indexterm>ctype_byname&lt;char>::~ctype_byname &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype_byname&lt;char>::ctype_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>ctype_byname&lt;char>::ctype_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype_byname&lt;char>::~ctype_byname &lsqb;not-in-charge]()</primary></indexterm>ctype_byname&lt;char>::~ctype_byname &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype_byname&lt;char>::~ctype_byname &lsqb;in-charge deleting]()</primary></indexterm>ctype_byname&lt;char>::~ctype_byname &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libstdcxx - 22.2.1.4 C++ class ctype_byname&lt;char> Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>typeinfo for ctype_byname&lt;char></primary></indexterm>typeinfo for ctype_byname&lt;char><FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
<ENTRY><indexterm><primary>vtable for ctype_byname&lt;char></primary></indexterm>vtable for ctype_byname&lt;char><FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.1.4 C++ class ctype_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.1.4 C++ class ctype_byname&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t>::ctype_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>ctype_byname&lt;wchar_t>::ctype_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t>::~ctype_byname &lsqb;in-charge]()</primary></indexterm>ctype_byname&lt;wchar_t>::~ctype_byname &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t>::ctype_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>ctype_byname&lt;wchar_t>::ctype_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t>::~ctype_byname &lsqb;not-in-charge]()</primary></indexterm>ctype_byname&lt;wchar_t>::~ctype_byname &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ctype_byname&lt;wchar_t>::~ctype_byname &lsqb;in-charge deleting]()</primary></indexterm>ctype_byname&lt;wchar_t>::~ctype_byname &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libstdcxx - 22.2.1.4 C++ class ctype_byname&lt;wchar_t> Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>typeinfo for ctype_byname&lt;wchar_t></primary></indexterm>typeinfo for ctype_byname&lt;wchar_t><FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
<ENTRY><indexterm><primary>vtable for ctype_byname&lt;wchar_t></primary></indexterm>vtable for ctype_byname&lt;wchar_t><FOOTNOTEREF LINKEND="std-231-10"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.1.5 C++ Class codecvt&lt;char></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.1.5 C++ Class codecvt&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_encoding() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_encoding() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::codecvt&lsqb;in-charge](unsigned)</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::codecvt&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_max_length() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_max_length() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::codecvt&lsqb;not-in-charge](unsigned)</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::codecvt&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_always_noconv() const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_always_noconv() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::~codecvt &lsqb;in-charge deleting]()</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::~codecvt &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::~codecvt &lsqb;in-charge]()</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::~codecvt &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::do_out(__mbstate_t&, char const*, char const*, char const*&, char*, char*, char*&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::~codecvt &lsqb;not-in-charge]()</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::~codecvt &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libstdcxx - 22.2.1.5 C++ Class codecvt&lt;char> Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;char, char, __mbstate_t>::id</primary></indexterm>codecvt&lt;char, char, __mbstate_t>::id<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.1.5 C++ Class codecvt&lt;wchar_t></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.1.5 C++ Class codecvt&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_unshift(__mbstate_t&, char*, char*, char*&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_length(__mbstate_t const&, char const*, char const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_encoding() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_encoding() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::codecvt&lsqb;in-charge](unsigned)</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::codecvt&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_max_length() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_max_length() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::codecvt&lsqb;not-in-charge](unsigned)</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::codecvt&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_always_noconv() const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_always_noconv() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::~codecvt &lsqb;in-charge deleting]()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::~codecvt &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_in(__mbstate_t&, char const*, char const*, char const*&, wchar_t*, wchar_t*, wchar_t*&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::~codecvt &lsqb;in-charge]()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::~codecvt &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::do_out(__mbstate_t&, wchar_t const*, wchar_t const*, wchar_t const*&, char*, char*, char*&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::~codecvt &lsqb;not-in-charge]()</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::~codecvt &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libstdcxx - 22.2.1.5 C++ Class codecvt&lt;wchar_t> Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>codecvt&lt;wchar_t, char, __mbstate_t>::id</primary></indexterm>codecvt&lt;wchar_t, char, __mbstate_t>::id<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.2.1 C++ Class num_get&lt;char></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.2.1 C++ Class num_get&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_int(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >&, int&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_int(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >&, int&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned long long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_float(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_float(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, void*&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, void*&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, bool&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, bool&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, double&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, double&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long double&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long double&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, float&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, float&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned short&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned short&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, long long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, unsigned long long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.2.1 C++ Class num_get&lt;wchar_t></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.2.1 C++ Class num_get&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_int(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >&, int&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_int(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >&, int&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned long long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_float(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_float(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, basic_string&lt;char, char_traits&lt;char>, allocator&lt;char> >&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, void*&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, void*&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, void*&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, bool&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, bool&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, bool&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, double&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, double&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long double&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long double&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long double&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, float&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, float&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, float&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned short&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned short&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned short&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, long long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned long long&) const</primary></indexterm>num_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, unsigned long long&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.2.1 C++ Class num_put&lt;char></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.2.1 C++ Class num_put&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;char>::~numpunct &lsqb;in-charge]()</primary></indexterm>numpunct&lt;char>::~numpunct &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;char>::~numpunct &lsqb;not-in-charge]()</primary></indexterm>numpunct&lt;char>::~numpunct &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.2.2 C++ Class num_put&lt;wchar_t></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.2.2 C++ Class num_put&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_widen_int(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char*, int) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_widen_int(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char*, int) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, unsigned long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, unsigned long) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_convert_int&lt;long>(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char, char, long) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_convert_int&lt;long>(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char, char, long) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long long) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_convert_int&lt;unsigned long>(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char, char, unsigned long) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_convert_int&lt;unsigned long>(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char, char, unsigned long) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, unsigned long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, unsigned long long) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_convert_int&lt;long long>(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char, char, long long) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_convert_int&lt;long long>(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char, char, long long) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, void const*) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, void const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_convert_int&lt;unsigned long long>(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char, char, unsigned long long) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_convert_int&lt;unsigned long long>(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char, char, unsigned long long) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, bool) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, bool) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_widen_float(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char*, int) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_widen_float(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char*, int) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, double) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_convert_float&lt;double>(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char, double) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_convert_float&lt;double>(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char, double) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long double) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_convert_float&lt;long double>(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char, long double) const</primary></indexterm>ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_convert_float&lt;long double>(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, char, long double) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, void const*) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, void const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, unsigned long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, unsigned long) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, bool) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, bool) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long long) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, double) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, unsigned long long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, unsigned long long) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long double) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long double) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_insert(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, wchar_t const*, int) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_insert(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, wchar_t const*, int) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long) const</primary></indexterm>num_put&lt;wchar_t, ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::put(ostreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, wchar_t, long) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.3.1 C++ Class numpunct&lt;char></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.3.1 C++ Class numpunct&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;char>::do_grouping() const</primary></indexterm>numpunct&lt;char>::do_grouping() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;char>::grouping() const</primary></indexterm>numpunct&lt;char>::grouping() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;char>::do_truename() const</primary></indexterm>numpunct&lt;char>::do_truename() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;char>::truename() const</primary></indexterm>numpunct&lt;char>::truename() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;char>::do_falsename() const</primary></indexterm>numpunct&lt;char>::do_falsename() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;char>::falsename() const</primary></indexterm>numpunct&lt;char>::falsename() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;char>::decimal_point() const</primary></indexterm>numpunct&lt;char>::decimal_point() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;char>::numpunct&lsqb;in-charge](unsigned)</primary></indexterm>numpunct&lt;char>::numpunct&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;char>::thousands_sep() const</primary></indexterm>numpunct&lt;char>::thousands_sep() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;char>::numpunct&lsqb;not-in-charge](unsigned)</primary></indexterm>numpunct&lt;char>::numpunct&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;char>::do_decimal_point() const</primary></indexterm>numpunct&lt;char>::do_decimal_point() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;char>::~numpunct &lsqb;in-charge deleting]()</primary></indexterm>numpunct&lt;char>::~numpunct &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;char>::do_thousands_sep() const</primary></indexterm>numpunct&lt;char>::do_thousands_sep() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libstdcxx - 22.2.3.1 C++ Class numpunct&lt;char> Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;char>::id</primary></indexterm>numpunct&lt;char>::id<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.3.1 C++ Class numpunct&lt;wchar_t></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.3.1 C++ Class numpunct&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_grouping() const</primary></indexterm>numpunct&lt;wchar_t>::do_grouping() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::truename() const</primary></indexterm>numpunct&lt;wchar_t>::truename() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_truename() const</primary></indexterm>numpunct&lt;wchar_t>::do_truename() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::falsename() const</primary></indexterm>numpunct&lt;wchar_t>::falsename() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_falsename() const</primary></indexterm>numpunct&lt;wchar_t>::do_falsename() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::numpunct&lsqb;in-charge](unsigned)</primary></indexterm>numpunct&lt;wchar_t>::numpunct&lsqb;in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::decimal_point() const</primary></indexterm>numpunct&lt;wchar_t>::decimal_point() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::numpunct&lsqb;not-in-charge](unsigned)</primary></indexterm>numpunct&lt;wchar_t>::numpunct&lsqb;not-in-charge](unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t>::thousands_sep() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::~numpunct &lsqb;in-charge deleting]()</primary></indexterm>numpunct&lt;wchar_t>::~numpunct &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_decimal_point() const</primary></indexterm>numpunct&lt;wchar_t>::do_decimal_point() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::~numpunct &lsqb;in-charge]()</primary></indexterm>numpunct&lt;wchar_t>::~numpunct &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::do_thousands_sep() const</primary></indexterm>numpunct&lt;wchar_t>::do_thousands_sep() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::~numpunct &lsqb;not-in-charge]()</primary></indexterm>numpunct&lt;wchar_t>::~numpunct &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::grouping() const</primary></indexterm>numpunct&lt;wchar_t>::grouping() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
<TABLE>
<TITLE>libstdcxx - 22.2.3.1 C++ Class numpunct&lt;wchar_t> Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>numpunct&lt;wchar_t>::id</primary></indexterm>numpunct&lt;wchar_t>::id<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.3.2 C++ Class numpunct_byname&lt;char></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.3.2 C++ Class numpunct_byname&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>numpunct_byname&lt;char>::numpunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>numpunct_byname&lt;char>::numpunct_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct_byname&lt;char>::~numpunct_byname &lsqb;in-charge]()</primary></indexterm>numpunct_byname&lt;char>::~numpunct_byname &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct_byname&lt;char>::numpunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>numpunct_byname&lt;char>::numpunct_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct_byname&lt;char>::~numpunct_byname &lsqb;not-in-charge]()</primary></indexterm>numpunct_byname&lt;char>::~numpunct_byname &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct_byname&lt;char>::~numpunct_byname &lsqb;in-charge deleting]()</primary></indexterm>numpunct_byname&lt;char>::~numpunct_byname &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.3.2 C++ Class numpunct_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.3.2 C++ Class numpunct_byname&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t>::numpunct_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>numpunct_byname&lt;wchar_t>::numpunct_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t>::~numpunct_byname &lsqb;in-charge]()</primary></indexterm>numpunct_byname&lt;wchar_t>::~numpunct_byname &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t>::numpunct_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>numpunct_byname&lt;wchar_t>::numpunct_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t>::~numpunct_byname &lsqb;not-in-charge]()</primary></indexterm>numpunct_byname&lt;wchar_t>::~numpunct_byname &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>numpunct_byname&lt;wchar_t>::~numpunct_byname &lsqb;in-charge deleting]()</primary></indexterm>numpunct_byname&lt;wchar_t>::~numpunct_byname &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.4.1 C++ Class collate&lt;char_></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.4.1 C++ Class collate&lt;char_> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>collate&lt;char>::do_compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char>::do_compare(char const*, char const*, char const*, char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>collate&lt;char>::compare(char const*, char const*, char const*, char const*) const</primary></indexterm>collate&lt;char>::compare(char const*, char const*, char const*, char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>collate&lt;char>::do_transform(char const*, char const*) const</primary></indexterm>collate&lt;char>::do_transform(char const*, char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>collate&lt;char>::do_hash(char const*, char const*) const</primary></indexterm>collate&lt;char>::do_hash(char const*, char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>collate&lt;char>::hash(char const*, char const*) const</primary></indexterm>collate&lt;char>::hash(char const*, char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>collate&lt;char>::transform(char const*, char const*) const</primary></indexterm>collate&lt;char>::transform(char const*, char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.4.1 C++ Class collate&lt;wchar_t></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.4.1 C++ Class collate&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>collate&lt;wchar_t>::_M_compare(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t>::_M_compare(wchar_t const*, wchar_t const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>collate&lt;wchar_t>::hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t>::hash(wchar_t const*, wchar_t const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>collate&lt;wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t>::do_compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>collate&lt;wchar_t>::compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t>::compare(wchar_t const*, wchar_t const*, wchar_t const*, wchar_t const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>collate&lt;wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned) const</primary></indexterm>collate&lt;wchar_t>::_M_transform(wchar_t*, wchar_t const*, unsigned) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>collate&lt;wchar_t>::do_hash(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t>::do_hash(wchar_t const*, wchar_t const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>collate&lt;wchar_t>::do_transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t>::do_transform(wchar_t const*, wchar_t const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>collate&lt;wchar_t>::transform(wchar_t const*, wchar_t const*) const</primary></indexterm>collate&lt;wchar_t>::transform(wchar_t const*, wchar_t const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.4.2 C++ Class collate_byname&lt;char></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.4.2 C++ Class collate_byname&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>collate_byname&lt;char>::collate_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>collate_byname&lt;char>::collate_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>collate_byname&lt;char>::~collate_byname &lsqb;in-charge]()</primary></indexterm>collate_byname&lt;char>::~collate_byname &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>collate_byname&lt;char>::collate_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>collate_byname&lt;char>::collate_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>collate_byname&lt;char>::~collate_byname &lsqb;not-in-charge]()</primary></indexterm>collate_byname&lt;char>::~collate_byname &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>collate_byname&lt;char>::~collate_byname &lsqb;in-charge deleting]()</primary></indexterm>collate_byname&lt;char>::~collate_byname &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.4.2 C++ Class collate_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.4.2 C++ Class collate_byname&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t>::collate_byname&lsqb;in-charge](char const*, unsigned)</primary></indexterm>collate_byname&lt;wchar_t>::collate_byname&lsqb;in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t>::~collate_byname &lsqb;in-charge]()</primary></indexterm>collate_byname&lt;wchar_t>::~collate_byname &lsqb;in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t>::collate_byname&lsqb;not-in-charge](char const*, unsigned)</primary></indexterm>collate_byname&lt;wchar_t>::collate_byname&lsqb;not-in-charge](char const*, unsigned)<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t>::~collate_byname &lsqb;not-in-charge]()</primary></indexterm>collate_byname&lt;wchar_t>::~collate_byname &lsqb;not-in-charge]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>collate_byname&lt;wchar_t>::~collate_byname &lsqb;in-charge deleting]()</primary></indexterm>collate_byname&lt;wchar_t>::~collate_byname &lsqb;in-charge deleting]()<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.5.1 C++ Class time_get&lt;char></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.5.1 C++ Class time_get&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::date_order() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_name(istreambuf_iterator&lt;char, char_traits&lt;char> >&, istreambuf_iterator&lt;char, char_traits&lt;char> >&, int&, char const**, unsigned, _Ios_Iostate&) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_name(istreambuf_iterator&lt;char, char_traits&lt;char> >&, istreambuf_iterator&lt;char, char_traits&lt;char> >&, int&, char const**, unsigned, _Ios_Iostate&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_date(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_time(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get_date(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get_date(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get_time(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get_time(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_date_order() const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_date_order() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get_year(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get_year(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.5.1 C++ Class time_get&lt;wchar_t></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.5.1 C++ Class time_get&lt;wchar_t> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_year(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char> >&, istreambuf_iterator&lt;char, char_traits&lt;char> >&, int&, int, int, unsigned, ctype&lt;char> const&, _Ios_Iostate&) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_num(istreambuf_iterator&lt;char, char_traits&lt;char> >&, istreambuf_iterator&lt;char, char_traits&lt;char> >&, int&, int, int, unsigned, ctype&lt;char> const&, _Ios_Iostate&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_num(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, int&, int, int, unsigned, ctype&lt;wchar_t> const&, _Ios_Iostate&) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_num(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, int&, int, int, unsigned, ctype&lt;wchar_t> const&, _Ios_Iostate&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::do_get_weekday(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_via_format(istreambuf_iterator&lt;char, char_traits&lt;char> >&, istreambuf_iterator&lt;char, char_traits&lt;char> >&, ios_base&, _Ios_Iostate&, tm*, char const*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::_M_extract_via_format(istreambuf_iterator&lt;char, char_traits&lt;char> >&, istreambuf_iterator&lt;char, char_traits&lt;char> >&, ios_base&, _Ios_Iostate&, tm*, char const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_name(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, int&, wchar_t const**, unsigned, _Ios_Iostate&) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_name(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, int&, wchar_t const**, unsigned, _Ios_Iostate&) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::date_order() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_monthname(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_via_format(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, ios_base&, _Ios_Iostate&, tm*, wchar_t const*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::_M_extract_via_format(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >&, ios_base&, _Ios_Iostate&, tm*, wchar_t const*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get_date(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get_time(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get_weekday(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::get_year(istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
</ROW>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_date_order() const</primary></indexterm>time_get&lt;wchar_t, istreambuf_iterator&lt;wchar_t, char_traits&lt;wchar_t> > >::do_date_order() const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.5.2 C++ Class time_get_byname&lt;char></TITLE>
<PARA>
</PARA>
<TABLE>
<TITLE>libstdcxx - 22.2.5.2 C++ Class time_get_byname&lt;char> Function Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const</primary></indexterm>time_get&lt;char, istreambuf_iterator&lt;char, char_traits&lt;char> > >::get_monthname(istreambuf_iterator&lt;char, char_traits&lt;char> >, istreambuf_iterator&lt;char, char_traits&lt;char> >, ios_base&, _Ios_Iostate&, tm*) const<FOOTNOTEREF LINKEND="std-231-65"></ENTRY>
<ENTRY></ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>22.2.5.2 C++ Class time_get_byname&lt;wchar_t></TITLE>
<PARA>
</PARA>
</SECT2>
<SECT2>
<TITLE>22.2.5.3 C++ Class time_put&lt;char></TITLE>
<PARA>
</PARA>
</SECT2>
<SECT2>
<TITLE>22.2.5.3 C++ Class time_put&lt;wchar_t></TITLE>
<PARA>
</PARA>
</SECT2>
<SECT2>
<TITLE>C++ ABI Class Type Info</TITLE>
<PARA>
</PARA>
<!--libgroupdata-->
<TABLE>
<TITLE>libstdcxx - C++ ABI Class Type Info Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>typeinfo for __cxxabiv1::__class_type_info</primary></indexterm>typeinfo for __cxxabiv1::__class_type_info</ENTRY>
<ENTRY><indexterm><primary>vtable for __cxxabiv1::__class_type_info</primary></indexterm>vtable for __cxxabiv1::__class_type_info</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
<SECT2>
<TITLE>Default C++ LibGroup should be empty when done</TITLE>
<PARA>
</PARA>
<!--libgroupdata-->
<TABLE>
<TITLE>libstdcxx - Default C++ LibGroup should be empty when done Data Interfaces</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY><indexterm><primary>typeinfo for signed char const*</primary></indexterm>typeinfo for signed char const*</ENTRY>
<ENTRY><indexterm><primary>typeinfo name for signed char const*</primary></indexterm>typeinfo name for signed char const*</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</SECT2>
</SECT1>
<SECT1 ID=libstdcxx-ddefs>
<TITLE>Data Definitions for libstdcxx</TITLE>
<PARA>
This section contains standard data definitions that describe system data. These definitions are organized into groups that correspond to system headers. This convention is used as a convenience for the reader, and does not imply the existence of these headers, or their content.</PARA>
<PARA>
ISO C serves as the LSB reference programming language, and data definitions are specified in ISO C format. The C language is used here as a convenient notation. Using a C language description of these data objects does not preclude their use by other programming languages.</PARA>
<SECT2>
<TITLE>cxxabi.h</TITLE>
<PARA>
</PARA>
<SCREEN>



Unknown Type:".Class.";
</SCREEN>
</SECT2>
<SECT2>
<TITLE>typeinfo</TITLE>
<PARA>
</PARA>
<SCREEN>



Unknown Type:".Class.";
</SCREEN>
</SECT2>
</SECT1>
<SECT1 ID=libstdcxxman>
<TITLE>Interfaces Definitions for libstdcxx</TITLE>
<PARA>
</PARA>
include(typeinfo for std::ctype_byname<char>)
include(typeinfo for std::ctype_byname<wchar_t>)
include(typeinfo for std::type_info)
include(vtable for std::ctype_byname<char>)
include(vtable for std::ctype_byname<wchar_t>)
</SECT1>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/spec/mklibspec,v 1.50 2003/02/12 05:24:36 gk4 Exp 0 -->
