#!/usr/bin/perl

use CGI;
use Carp;
use DBI;

use Env qw(LSBUSER LSBDBPASSWD LSBDB LSBDBHOST);

$query = new CGI(%ARGV);

#foreach $name ( $query->param('nLname')) {
#	print $name,"\n";
#}
#exit;

$dbh = DBI->connect('DBI:mysql:database='.$LSBDB.';host='.$LSBDBHOST, $LSBUSER, $LSBDBPASSWD)
    or die "Couldn't connect to database: ".DBI->errstr;

foreach $lib ( $query->param('nLname') ) {
	local(*where);
	local(*where2);
	$select  ="SELECT DISTINCT Interface.Iname ";
	$select .="FROM Interface,LibInt,Library ";
	
	push(@where,"Library.Lname='$lib'");
	push(@where,"LibInt.LIlib=Library.Lid");
	push(@where,"LibInt.LIint=Interface.Iid");
	
	#push(@where,"Interface.Iname NOT LIKE '\\_\\_%'");
	
	if( scalar(@where) > 0 ) {
		$select .= " WHERE ".join(" AND ",@where);
		}
	$select .=" ORDER BY Interface.Iname ";
	#printf STDERR $select,"\n";
	$sth = $dbh->prepare($select) or die "Couldn't prepare $select query: ".DBI->errstr;
	$sth->execute or die "Couldn't execute $select query: ".DBI->errstr;
	#printf STDERR "numrows=%d\n", $sth->numrows;
	for(1..$sth->rows) {
		$entry = $sth->fetchrow_hashref;
		$exclude{$entry->{'Iname'}}=$_;
	}
	$sth->finish;
	$select  ="SELECT DISTINCT Mangle.Mname ";
	$select .="FROM Mangle,Library ";
	
	push(@where2,"Library.Lname='$lib'");
	push(@where2,"Mangle.Mlib=Library.Lid");
	
	if( scalar(@where2) > 0 ) {
		$select .= " WHERE ".join(" AND ",@where2);
		}
	$select .=" ORDER BY Mangle.Mname ";
	#printf STDERR $select,"\n";
	$sth2 = $dbh->prepare($select) or die "Couldn't prepare $select query: ".DBI->errstr;
	$sth2->execute or die "Couldn't execute $select query: ".DBI->errstr;
	#printf STDERR "numrows=%d\n", $sth->numrows;
	for(1..$sth2->rows) {
		$entry = $sth2->fetchrow_hashref;
		$exclude{$entry->{'Mname'}}=$_;
		#print $entry->{'Mname'}."<BR>";
	}
	$sth2->finish;
}

$numentry=0;
foreach $lib ( $query->param('Lname') ) {
	local(*where);
	local(*where2);
	$select  ="SELECT DISTINCT Interface.Iname ";
	$select .="FROM Interface,LibInt,Library ";
	
	push(@where3,"Library.Lname='$lib'");
	push(@where3,"LibInt.LIlib=Library.Lid");
	push(@where3,"LibInt.LIint=Interface.Iid");
	
	#push(@where3,"Interface.Iname NOT LIKE '\\_\\_%'");
	
	if( scalar(@where3) > 0 ) {
		$select .= " WHERE ".join(" AND ",@where3);
	}
	$select .=" ORDER BY Interface.Iname ";
	#printf STDERR $select,"\n";
	$sth = $dbh->prepare($select) or die "Couldn't prepare $select query: ".DBI->errstr;
	$sth->execute or die "Couldn't execute $select query: ".DBI->errstr;
	#printf STDERR "numrows=%d\n", $sth->numrows;
	
	for(1..$sth->rows) {
		$entry = $sth->fetchrow_hashref;
		if ( ! $exclude{$entry->{'Iname'}} ) {
			$tentry[$numentry++]=$entry->{'Iname'};
		}
	}
	$sth->finish;
}

print "<HTML>\n";
print "<BODY>\n";
print "<TABLE>\n";
$inc=($numentry+4)/5;
for(1..$inc) {
	print "<TR>";
	printf "<TD>%s</TD>",$tentry[$_];
	printf "<TD>%s</TD>",$tentry[$_+$inc];
	printf "<TD>%s</TD>",$tentry[$_+(2*$inc)];
	printf "<TD>%s</TD>",$tentry[$_+(3*$inc)];
	printf "<TD>%s</TD>",$tentry[$_+(4*$inc)];
	print "</TR>\n";
}
print "</TABLE>\n";
print "</BODY>\n";
print "</HTML>\n";
