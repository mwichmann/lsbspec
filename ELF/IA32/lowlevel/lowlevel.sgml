<CHAPTER ID="lowlevel">
<TITLE>Low Level System Information</TITLE>

<SECT1 id=machineinterface>
<TITLE>Machine Interface</TITLE>

<SECT2 ID="processorarch">
<TITLE>Processor Architecture</TITLE>
<PARA>
The IA32 Architecture is specified by the following documents
<ITEMIZEDLIST MARK=bullet>
<LISTITEM><PARA><XREF LINKEND="std.IA32.SDM.Vol1">
</PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="std.IA32.SDM.Vol2">
</PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="std.IA32.SDM.Vol3">
</PARA></LISTITEM>
</ITEMIZEDLIST>
</PARA>
<PARA>
Only the features of the Intel486 processor instruction set may be assumed
to be present. An application should determine if any additional
instruction set features are available before using those additional features.
If a feature is not present, then the application may not use it.
</PARA>
<PARA>
Only instructions which do not require elevated privileges may be used
by an application.
</PARA>
<PARA>
Applications may not make system calls directly. The interfaces in the
implementation base libraries shall be used instead.
</PARA>
<PARA>
Applications conforming to this specification shall provide feedback to the
user if a feature that is required for correct execution of the application
is not present. Applications conforming to this specification should attempt
to execute in a diminished capacity if a required instruction set feature is
not present.
</PARA>
<PARA>
This specification does not provide any performance guarantees of a conforming
system. A system conforming to this specification may be implemented in either
hardware or software.
</PARA>
</SECT2>

<SECT2 ID="datarepresentation">
<TITLE>Data Representation</TITLE>
<PARA>
LSB-conforming applications shall use the data representation as defined in 
Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
<PARA>
</PARA>
<SECT3 ID="byteordering">
<TITLE>Byte Ordering</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="fundamentaltyes">
<TITLE>Fundamental Types</TITLE>
<PARA>
In addition to the fundamental types specified in Chapter 3 of the 
<XREF LINKEND=STD.IA32.ABI.4>, a 64 bit data type is
defined here.
<TABLE>
<TITLE>Scalar Types</TITLE>
<TGROUP COLS=5>
<THEAD>
  <ROW>
    <ENTRY>Type</ENTRY>
    <ENTRY>C</ENTRY>
    <ENTRY><COMPUTEROUTPUT>sizeof</COMPUTEROUTPUT></ENTRY>
    <ENTRY>Alignment (bytes)</ENTRY>
    <ENTRY>IntelI386 Architecture</ENTRY>
  </ROW>
</THEAD>
<TBODY>
  <ROW>
    <ENTRY MOREROWS=2 VALIGN=middle>Integral</ENTRY>
    <ENTRY>long long</ENTRY>
    <ENTRY MOREROWS=1 VALIGN=middle><COMPUTEROUTPUT>8</COMPUTEROUTPUT></ENTRY>
    <ENTRY MOREROWS=1 VALIGN=middle>4</ENTRY>
    <ENTRY MOREROWS=1 VALIGN=middle>signed double word</ENTRY>
  </ROW>
  <ROW>
    <ENTRY>signed long long</ENTRY>
  </ROW>
  <ROW>
    <ENTRY>unsigned long long</ENTRY>
    <ENTRY><COMPUTEROUTPUT>8</COMPUTEROUTPUT></ENTRY>
    <ENTRY>4</ENTRY>
    <ENTRY>unsigned double word</ENTRY>
  </ROW>
</TBODY>
</TGROUP>
</TABLE>
</PARA>
</SECT3>
<SECT3 ID="aggregatesandunions">
<TITLE>Aggregates and Unions</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="bitfields">
<TITLE>Bit Fields</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
</SECT2>

</SECT1>

<SECT1 id=callingsequence>
<TITLE>Function Calling Sequence</TITLE>
<PARA>
LSB-conforming applications shall use the function calling sequence as defined
in Chapter 3 of the 
<XREF LINKEND=STD.IA32.ABI.4>.
</PARA>

<SECT2 ID="cpuregisters">
<TITLE>CPU Registers</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT2>

<SECT2 ID="fpuregisters">
<TITLE>Floating Point Registers</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT2>

<SECT2 ID="stackframe">
<TITLE>Stack Frame</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT2>

<SECT2 ID="arguments">
<TITLE>Arguments</TITLE>
<PARA>
</PARA>
<SECT3 ID="integralpointerarg">
<TITLE>Integral/Pointer</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="floatingpointarg">
<TITLE>Floating Point</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="structunitonarg">
<TITLE>Struct and Union Point</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="variableargs">
<TITLE>Variable Arguments</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
</SECT2>

<SECT2 ID="returnvalues">
<TITLE>Return Values</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
<SECT3 ID="voidret">
<TITLE>Void</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="integralpointerret">
<TITLE>Integral/Pointer</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="floatingpointret">
<TITLE>Floating Point</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="structunitonret">
<TITLE>Struct and Union Point</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
</SECT2>

</SECT1>

<SECT1 id=osinterface>
<TITLE>Operating System Interface</TITLE>
<PARA>
LSB-conforming applications shall use the Operating System Interfaces as
defined in Chapter 3 of the 
<XREF LINKEND=STD.IA32.ABI.4>.
</PARA>

<SECT2 ID="virtualaddressspace">
<TITLE>Virtual Address Space</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
<SECT3 ID="pagesize">
<TITLE>Page Size</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="virtualaddressassignments">
<TITLE>Virtual Address Assignments</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="managinprocesstack">
<TITLE>Managing the Process Stack</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="codingguidlines">
<TITLE>Coding Guidlines</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
</SECT2>

<SECT2 ID="processorexecutionmode">
<TITLE>Processor Execution Mode</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT2>

<SECT2 ID="exceptioninterface">
<TITLE>Exception Interface</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
<SECT3 ID="hardwareexceptiontypes">
<TITLE>Hardware Exception Types</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="softwaretraptypes">
<TITLE>Software Trap Types</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
</SECT2>

<SECT2 ID="signaldelivery">
<TITLE>Signal Delivery</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
<SECT3 ID="signalhandlerinterface">
<TITLE>Signal Handler Interface</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
</SECT2>

</SECT1>

<SECT1 id=processinitialization>
<TITLE>Process Initialization</TITLE>
<PARA>
LSB-conforming applications shall use the Process Initialization as
defined in Chapter 3 of the 
<XREF LINKEND=STD.IA32.ABI.4>.
</PARA>

<SECT2 ID="specialregisters">
<TITLE>Special Registers</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT2>

<SECT2 ID="processstack">
<TITLE>Process Stack (on entry)</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT2>

<SECT2 ID="auxilliaryvectors">
<TITLE>Auxilliary Vectors</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT2>

<SECT2 ID="environment">
<TITLE>Environment</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT2>

</SECT1>

<SECT1 id=codingexamples>
<TITLE>Coding Examples</TITLE>
<PARA>
LSB-conforming applications may implement fundamental operations using the
Coding Examples as defined in Chapter 3 of the 
<XREF LINKEND=STD.IA32.ABI.4>.
</PARA>

<SECT2 ID="codemodeloverview">
<TITLE>Code Model Overview/Architecture Constraints</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT2>

<SECT2 ID="picprologue">
<TITLE>Position-Independent Function Prologue</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT2>

<SECT2 ID="dataobjects">
<TITLE>Data Objects</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
<SECT3 ID="dataobjectsabsload">
<TITLE>Absolute Load & Store</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="dataobjectsrelload">
<TITLE>Position Relative Load & Store</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
</SECT2>

<SECT2 ID="functioncalls">
<TITLE>Function Calls</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
<SECT3 ID="funccalldirect">
<TITLE>Absolute Direct Function Call</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="funccallindirect">
<TITLE>Absolute Indirect Function Call</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="funccallpicdirect">
<TITLE>Position-Independent Direct Function Call</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="funccallpicindirect">
<TITLE>Position-Independent Indirect Function Call</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
</SECT2>

<SECT2 ID="branching">
<TITLE>Branching</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
<SECT3 ID="branchinstruction">
<TITLE>Branch Instruction</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="absoluteswitchcode">
<TITLE>Absolute switch() code</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
<SECT3 ID="picswitchcode">
<TITLE>Position-Independent switch() code</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT3>
</SECT2>

</SECT1>

<SECT1 id=cstackframe>
<TITLE>C Stack Frame</TITLE>

<SECT2 ID="variablearglist">
<TITLE>Variable Argument List</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT2>

<SECT2 ID="dynamicstackalloc">
<TITLE>Dynamic Allocation of Stack Space</TITLE>
<PARA>
See Chapter 3 of the <XREF LINKEND=STD.IA32.ABI.4>.
</PARA>
</SECT2>

</SECT1>

<SECT1 id=debuginfo>
<TITLE>Debug Information</TITLE>

<PARA>
The LSB does not currently specify the format of Debug information.
</PARA>

</SECT1>

</CHAPTER>
