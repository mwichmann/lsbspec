<CHAPTER ID="lowlevel">
<TITLE>Low Level System Information</TITLE>

<SECT1 id=machineinterface>
<TITLE>Machine Interface</TITLE>

<SECT2 ID="processorarch">
<TITLE>Processor Architecture</TITLE>
<PARA>
The AMD64 Architecture is specified by the following documents
<ITEMIZEDLIST MARK=bullet>
<LISTITEM><PARA><XREF LINKEND="std.x86.64.APM.Vol1"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="std.x86.64.APM.Vol2"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="std.x86.64.APM.Vol3.1"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="std.x86.64.APM.Vol3.2"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="std.x86.64.APM.Vol3.3"></PARA></LISTITEM>
<LISTITEM><PARA><XREF LINKEND="std.x86.64.ABI"></PARA></LISTITEM>
</ITEMIZEDLIST>
</PARA>
<PARA>
Applications conforming to this specification must provide feedback to the
user if a feature that is required for correct execution of the application
is not present. Applications conforming to this specification should attempt
to execute in a diminished capacity if a required instruction set feature is
not present. In particular, applications should not rely on the availability
of the <acronym>3DNow!</acronym>&trade; technology. In addition, a conforming
application shall not use any instruction from <XREF LINKEND=TBL.AMD64.Reserved>.
<note><para>
Although this specification carries the attribution "AMD64", it is intended to
apply to the entire <literal>x86_64</literal> set of processors, including those
base on Intel &reg; Extended Memory 64 Technology (<acronym>EM64T</acronym>).
However, this specification defers to the AMD architecture specified above.
</para></note>
<TABLE ID=TBL.AMD64.RESERVED>
<TITLE>AMD64 Reserved Instructions</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW>
<ENTRY>LAHF</ENTRY><ENTRY>SAHF</ENTRY>
</ROW>
</TBODY>
</TGROUP>
</TABLE>
</PARA>
<PARA>
Conforming applications may use only instructions which do not require elevated privileges.
</PARA>
<PARA>
Conforming applications shall not make system calls directly. The interfaces in the
implementation base libraries shall be used instead.
</PARA>
<PARA>
This specfication does not provide any performance guarantees of a conforming
system. A system conforming to this specification may be implemented in either
hardware or software.
</PARA>
</SECT2>

<SECT2 ID="datarepresentation">
<TITLE>Data Representation</TITLE>
<SECT3>
<TITLE>Introduction</TITLE>
<PARA>
LSB-conforming applications shall use the data representation as defined in 
Section 3.1.2 of <XREF LINKEND="std.X86.64.ABI">.
<NOTE>
<PARA>
The <XREF LINKEND="STD.X86.64.ABI"> specification is itself layered on top of
the System V Application Binary Interface - Intel386&trade; Architecture Processor Supplement.
</PARA>
</NOTE>
</PARA>
</SECT3>
<SECT3 ID="byteordering">
<TITLE>Byte Ordering</TITLE>
<PARA>
LSB-conforming applications shall use the byte ordering defined in
Section 3.1.2 of <XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT3>
<SECT3 ID="fundamentaltyes">
<TITLE>Fundamental Types</TITLE>
<PARA>
LSB-conforming applications shall use only the fundamental types
described in
Section 3.1.2 of <XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT3>
<SECT3 ID="aggregatesandunions">
<TITLE>Aggregates and Unions</TITLE>
<PARA>
LSB-conforming applications shall use alignment for aggregates
and unions as described in Section 3.1.2 of
<XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT3>
<SECT3 ID="bitfields">
<TITLE>Bit Fields</TITLE>
<PARA>
LSB-conforming applications utilizing bit-fields shall follow the
requirements of Section 3.1.2 of the
<XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT3>
</SECT2>

</SECT1>

<SECT1 id=callingsequence>
<TITLE>Function Calling Sequence</TITLE>
<SECT2>
<TITLE>Introduction</TITLE>
<PARA>
LSB-conforming applications shall use only the following features of
the function calling sequence as defined
in Section 3.2 of the <XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>
<SECT2 ID="cpuregisters">
<TITLE>Registers</TITLE>
<PARA>
LSB-conforming applications shall use only the registers described in
Section 3.2.1 (Registers and the Stack Frame) of the <XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>

<SECT2 ID="fpuregisters">
<TITLE>Floating Point Registers</TITLE>
<PARA>
LSB-conforming applications shall use only the floating point registers described in
Section 3.2.1 (Registers and the Stack Frame) of the <XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>

<SECT2 ID="stackframe">
<TITLE>Stack Frame</TITLE>
<PARA>
LSB-conforming applications shall use stack frames as described in
Section 3.2.2 of the <XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>

<SECT2 ID="arguments">
<TITLE>Arguments</TITLE>
<PARA>
LSB-conforming applications shall pass parameters to functions
as described in Section 3.2.3 of the <XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>

<SECT2 ID="returnvalues">
<TITLE>Return Values</TITLE>
<PARA>
Values are returned from functions as described in
Section 3.3.2 of the <XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>

</SECT1>

<SECT1 id=osinterface>
<TITLE>Operating System Interface</TITLE>
<PARA>
LSB-conforming applications shall use only the following
features of the Operating System Interfaces as
defined in Section 3.3 of the <XREF LINKEND="std.X86.64.ABI">.
</PARA>

<SECT2 ID="exceptioninterface">
<TITLE>Exception Interface</TITLE>
<PARA>
Synchronous and floating point or coprocessor exceptions shall behave
as described in Section 3.3.1 of the 
<XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>
<SECT2 ID="virtualaddressspace">
<TITLE>Virtual Address Space</TITLE>
<PARA>
LSB-Conforming applications shall use only the virtual address
space described in Section 3.3.2 and 3.3.4 of the 
<XREF LINKEND="std.X86.64.ABI">. Virtual memory page sizes 
shall be subject to the limitations described in Section 3.3.3
of the 
<XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>
</SECT1>

<SECT1 id=processinitialization>
<TITLE>Process Initialization</TITLE>
<PARA>
LSB-conforming applications shall use only the following features
of the Process Initialization as
defined in Section 3.4 of the <XREF LINKEND="std.X86.64.ABI">.
</PARA>

<SECT2 ID="specialregisters">
<TITLE>Special Registers</TITLE>
<PARA>
During process initialization, the special registers shall be 
initalized as described in Section 3.4.1 of the
<XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>

<SECT2 ID="processstack">
<TITLE>Process Stack (on entry)</TITLE>
<PARA>
The process stack shall be initialized as described in Section 3.4.1
of the <XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>

<SECT2 ID="auxilliaryvectors">
<TITLE>Auxiliary Vector</TITLE>
<PARA>
The auxiliary vector shall be initialized as described in
Section 3.4.2 of the
<XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>

</SECT1>

<SECT1 id=codingexamples>
<TITLE>Coding Examples</TITLE>
<PARA>
LSB-conforming applications may use the coding examples
given in Section 3.5 of the
<XREF LINKEND="std.X86.64.ABI"> to guide implemention of fundamental
operations in the following areas.
</PARA>

<SECT2 ID="codemodeloverview">
<TITLE>Code Model Overview/Architecture Constraints</TITLE>
<PARA>
Section 3.5.1 of the
<XREF LINKEND="std.X86.64.ABI"> 
describes a number of code models. LSB-Conforming applications
may use any of these models except the Kernel and Large code models.
</PARA>
</SECT2>

<SECT2 ID="picprologue">
<TITLE>Position-Independent Function Prologue</TITLE>
<PARA>
LSB-conforming applications may follow the position-independent function
prologue example in Section 3.5.3 of the 
<XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>

<SECT2 ID="dataobjects">
<TITLE>Data Objects</TITLE>
<PARA>
LSB-conforming applications may follow the data objects
examples in Section 3.5.4 of the 
<XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>

<SECT2 ID="functioncalls">
<TITLE>Function Calls</TITLE>
<PARA>
LSB-conforming applications may follow the function call
examples in Section 3.5.5 of the 
<XREF LINKEND="std.X86.64.ABI">.
See Chapter 3 of <XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>

<SECT2 ID="branching">
<TITLE>Branching</TITLE>
<PARA>
LSB-conforming applications may follow the branching
examples in Section 3.5.6 of the 
<XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>

</SECT1>

<SECT1 id=cstackframe>
<TITLE>C Stack Frame</TITLE>

<SECT2 ID="variablearglist">
<TITLE>Variable Argument List</TITLE>
<PARA>
LSB-Conforming applications shall only use variable arguments to
functions in the manner described in
Section 3.5.7 of the 
<XREF LINKEND="std.X86.64.ABI">.
</PARA>
</SECT2>

</SECT1>

<SECT1 id=debuginfo>
<TITLE>Debug Information</TITLE>
<PARA>
LSB-Conforming applications may include DWARF debugging
information. The DWARF Release Number and Register Number
Mapping shall be as described in Section 3.6 of the
<XREF LINKEND="std.X86.64.ABI">.
</PARA>

</SECT1>

</CHAPTER>
