%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 80 710 298 755 
%%Creator: CorelDRAW 8
%%Title: D:\ELFABI\strct4pad.eps
%%CreationDate: Thu Jan 25 14:38:00 2001
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Color profile: PROFILES.CCM - Generic CMYK printer profile
%%BeginResource: procset wCorel8Dict 8.0 0
/wCorel8Dict 300 dict def wCorel8Dict begin
% Copyright (c)1992-98 Corel Corporation
% All rights reserved.     v8.0 r0.15
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}
ifelse/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0
def/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def
/$T 1 def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0
def/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/@PL{/LV where
{pop LV 2 ge L2? not and{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel8Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%LogicalPage: 1
@sv
@sm
@sv
%%EndPageSetup
@rax 81.00000 728.85345 85.88324 735.27506 @E
[0.00028346 0.00000000 0.00000000 0.00028346 80.99999704 728.99997333] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (0) @t
17227 12594 m
17227 9008 l
17227 5897 16487 3434 15005 1617 c
13841 194 12377 -517 10613 -517 c
9760 -517 8961 -347 8208 -6 c
7455 329 6815 806 6285 1411 c
5956 1793 5592 2399 5192 3240 c
4798 4075 4516 4845 4339 5545 c
4075 6532 3945 7691 3945 9008 c
3945 12594 l
3945 15716 4686 18186 6168 19997 c
7326 21426 8790 22137 10560 22137 c
11418 22137 12224 21966 12971 21625 c
13717 21290 14352 20814 14881 20208 c
15228 19814 15593 19203 15987 18362 c
16375 17521 16663 16763 16845 16069 c
17098 15081 17227 13923 17227 12594 c
@c
15781 12400 m
15781 13770 15587 15040 15199 16216 c
14817 17392 14382 18333 13900 19032 c
13611 19438 13241 19779 12782 20067 c
12130 20467 11395 20673 10578 20673 c
8955 20673 7691 19844 6767 18192 c
5850 16540 5392 14605 5392 12400 c
5392 9213 l
5392 7849 5586 6573 5968 5392 c
6356 4210 6791 3269 7285 2569 c
7561 2175 7932 1840 8390 1552 c
9043 1135 9784 929 10613 929 c
12218 929 13482 1758 14399 3422 c
15317 5080 15781 7009 15781 9213 c
15781 12400 l
@c
F
T
@rax 135.00000 729.00000 139.88324 735.21184 @E
[0.00028346 0.00000000 0.00000000 0.00028346 134.99999506 728.99997333] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (1) @t
11301 21914 m
11301 1446 L
16263 1446 l
16604 1446 16851 1382 17004 1246 c
17151 1117 17227 941 17227 723 c
17227 517 17151 347 17004 206 c
16851 71 16604 0 16263 0 c
4892 0 l
4545 0 4298 71 4151 206 c
4004 347 3928 517 3928 723 c
3928 941 4004 1117 4151 1246 c
4298 1382 4545 1446 4892 1446 c
9854 1446 L
9854 19914 L
5133 18433 l
4904 18362 4739 18327 4633 18327 c
4463 18327 4304 18397 4163 18544 c
4016 18686 3945 18856 3945 19050 c
3945 19227 4004 19385 4116 19532 c
4210 19626 4398 19720 4686 19826 c
11301 21914 L
@c
F
T
@rax 189.00000 729.00000 193.79991 735.27506 @E
[0.00028346 0.00000000 0.00000000 0.00028346 188.99999309 728.99997333] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (2) @t
4357 1446 m
15469 1446 L
15469 2017 l
15469 2358 15540 2605 15675 2758 c
15810 2905 15993 2981 16210 2981 c
16416 2981 16587 2905 16728 2758 c
16863 2605 16933 2358 16933 2017 c
16933 0 L
2946 0 L
2946 2134 L
5886 4780 8743 7467 11524 10195 c
12824 11471 13711 12406 14194 13006 c
14676 13600 15005 14129 15187 14582 c
15364 15034 15452 15493 15452 15952 c
15452 17192 14952 18286 13952 19238 c
12953 20197 11748 20673 10336 20673 c
9072 20673 7955 20308 6979 19585 c
6003 18862 5368 17968 5080 16898 c
5015 16622 4927 16445 4821 16363 c
4686 16251 4527 16193 4339 16193 c
4145 16193 3981 16257 3851 16393 c
3716 16522 3651 16681 3651 16863 c
3651 17416 3951 18162 4557 19103 c
5156 20044 5991 20785 7056 21326 c
8114 21866 9202 22137 10319 22137 c
12124 22137 13670 21508 14970 20255 c
16269 19003 16916 17586 16916 16004 c
16916 15334 16804 14723 16587 14170 c
16369 13611 15999 13000 15475 12341 c
14952 11683 14017 10683 12659 9355 c
9260 6003 6497 3398 4357 1552 C
4357 1446 L
@c
F
T
@rax 108.00000 719.83843 113.36683 724.37499 @E
[0.00028346 0.00000000 0.00000000 0.00028346 107.99999605 719.99997366] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (c) @t
16622 13453 m
16622 13935 l
16622 14293 16692 14546 16828 14693 c
16969 14840 17139 14917 17345 14917 c
17563 14917 17745 14840 17880 14693 c
18015 14546 18086 14293 18086 13935 c
18086 10660 l
18074 10307 18004 10054 17874 9907 c
17739 9754 17563 9678 17345 9678 c
17151 9678 16986 9748 16857 9878 c
16722 10013 16645 10231 16622 10542 c
16551 11360 16016 12130 15011 12865 c
14005 13600 12653 13970 10954 13970 c
8808 13970 7179 13300 6062 11953 c
4951 10613 4392 9072 4392 7338 c
4392 5468 5009 3922 6238 2705 c
7467 1488 9055 876 11007 876 c
12130 876 13276 1088 14446 1499 c
15611 1911 16663 2575 17604 3498 c
17845 3728 18056 3839 18245 3839 c
18439 3839 18603 3775 18733 3645 c
18868 3510 18933 3346 18933 3152 c
18933 2658 18350 2034 17192 1276 c
15317 47 13235 -570 10936 -570 c
8608 -570 6691 176 5192 1664 c
3692 3152 2946 5033 2946 7320 c
2946 9654 3710 11589 5245 13123 c
6779 14664 8708 15434 11042 15434 c
13259 15434 15117 14776 16622 13453 C
@c
F
T
@rax 153.00000 718.11496 170.83531 726.12850 @E
[0.00028346 0.00000000 0.00000000 0.00028346 152.99999440 719.99997366] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (p) @t
5133 14917 m
5133 12283 L
5997 13329 6920 14111 7908 14640 c
8896 15170 10060 15434 11401 15434 c
12829 15434 14141 15099 15346 14435 c
16551 13770 17486 12841 18145 11653 c
18809 10466 19138 9213 19138 7908 c
19138 5827 18392 4051 16904 2575 c
15422 1099 13594 365 11418 365 c
8837 365 6738 1411 5133 3516 C
5133 -5204 L
8649 -5204 l
8990 -5204 9237 -5268 9390 -5398 c
9537 -5533 9613 -5709 9613 -5927 c
9613 -6132 9537 -6303 9390 -6444 c
9237 -6579 8990 -6650 8649 -6650 c
1740 -6650 l
1393 -6650 1147 -6585 1000 -6450 c
853 -6321 776 -6144 776 -5927 c
776 -5709 853 -5533 1000 -5398 c
1147 -5268 1393 -5204 1740 -5204 c
3687 -5204 L
3687 13453 L
1740 13453 l
1393 13453 1147 13523 1000 13658 c
853 13800 776 13976 776 14194 c
776 14399 853 14576 1000 14711 c
1147 14846 1393 14917 1740 14917 c
5133 14917 L
@c
17674 7908 m
17674 9572 17069 11001 15857 12189 c
14646 13376 13165 13970 11418 13970 c
9666 13970 8179 13370 6962 12177 c
5744 10983 5133 9560 5133 7908 c
5133 6244 5744 4810 6962 3616 c
8179 2422 9666 1829 11418 1829 c
13153 1829 14629 2422 15846 3610 c
17063 4798 17674 6232 17674 7908 c
@c
F
%CHAR: 21167 0 (a) @t
35913 0 m
35913 2087 L
33808 318 31568 -570 29175 -570 c
27441 -570 26088 -129 25112 747 c
24136 1629 23648 2705 23648 3981 c
23648 5380 24289 6603 25577 7649 c
26864 8696 28740 9213 31209 9213 c
31874 9213 32597 9172 33379 9084 c
34161 9002 35008 8867 35913 8684 C
35913 11024 l
35913 11818 35543 12506 34808 13094 c
34073 13676 32973 13970 31503 13970 c
30375 13970 28799 13641 26764 12988 c
26400 12871 26165 12818 26059 12818 c
25877 12818 25718 12882 25583 13023 c
25453 13159 25389 13335 25389 13541 c
25389 13735 25447 13888 25559 14005 c
25718 14176 26371 14411 27505 14711 c
29299 15193 30651 15434 31574 15434 c
33397 15434 34820 14981 35843 14082 c
36866 13182 37377 12159 37377 11024 c
37377 1446 L
39306 1446 l
39664 1446 39911 1382 40064 1246 c
40211 1117 40288 941 40288 723 c
40288 517 40211 347 40064 206 c
39911 71 39664 0 39306 0 c
35913 0 L
@c
35913 7203 m
35237 7397 34520 7538 33761 7632 c
33003 7720 32203 7767 31362 7767 c
29263 7767 27623 7314 26435 6409 c
25541 5733 25095 4921 25095 3981 c
25095 3104 25436 2370 26118 1776 c
26806 1176 27799 876 29110 876 c
30357 876 31521 1129 32597 1629 c
33667 2128 34773 2922 35913 4016 C
35913 7203 L
@c
F
%CHAR: 42334 0 (d) @t
60008 21620 m
60008 1446 L
61937 1446 l
62295 1446 62548 1382 62695 1246 c
62842 1117 62919 941 62919 723 c
62919 517 62842 347 62695 206 c
62548 71 62295 0 61937 0 c
58544 0 L
58544 2875 L
56869 582 54734 -570 52153 -570 c
50842 -570 49590 -223 48390 476 c
47191 1170 46244 2158 45544 3445 c
44850 4733 44504 6056 44504 7426 c
44504 8802 44850 10131 45544 11412 c
46244 12694 47191 13682 48390 14382 c
49590 15081 50848 15434 52171 15434 c
54699 15434 56821 14288 58544 11989 C
58544 20155 L
56616 20155 l
56257 20155 56004 20220 55857 20361 c
55704 20497 55634 20679 55634 20896 c
55634 21102 55704 21273 55857 21414 c
56004 21549 56257 21620 56616 21620 c
60008 21620 L
@c
58544 7426 m
58544 9260 57921 10813 56680 12077 c
55446 13341 53970 13970 52259 13970 c
50536 13970 49054 13341 47814 12077 c
46573 10813 45950 9260 45950 7426 c
45950 5597 46573 4051 47814 2781 c
49054 1511 50536 876 52259 876 c
53970 876 55446 1511 56680 2781 c
57921 4051 58544 5597 58544 7426 c
@c
F
T
@rax 243.00000 719.83843 247.99011 724.37499 @E
[0.00028346 0.00000000 0.00000000 0.00028346 242.99999111 719.99997366] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (s) @t
15364 13970 m
15364 14305 15434 14546 15569 14693 c
15710 14840 15881 14917 16087 14917 c
16304 14917 16487 14840 16622 14693 c
16763 14546 16828 14293 16828 13935 c
16828 11454 l
16828 11113 16763 10866 16622 10713 c
16487 10566 16304 10489 16087 10489 c
15893 10489 15728 10554 15599 10677 c
15464 10807 15387 11013 15364 11301 c
15299 11989 14940 12559 14299 13006 c
13353 13647 12112 13970 10560 13970 c
8943 13970 7685 13641 6785 12988 c
6109 12494 5768 11942 5768 11336 c
5768 10648 6174 10072 6979 9613 c
7526 9290 8573 9043 10113 8872 c
12124 8655 13517 8408 14299 8132 c
15411 7726 16240 7173 16786 6462 c
17333 5750 17604 4980 17604 4151 c
17604 2922 17016 1829 15828 870 c
14646 -88 12912 -570 10630 -570 c
8343 -570 6474 12 5015 1170 C
5015 782 4992 529 4945 412 c
4898 300 4815 200 4692 123 c
4574 41 4439 0 4292 0 c
4080 0 3910 76 3775 223 c
3634 370 3563 617 3563 964 c
3563 3945 l
3563 4292 3634 4533 3763 4686 c
3898 4833 4069 4910 4292 4910 c
4498 4910 4668 4839 4815 4692 c
4957 4551 5027 4357 5027 4116 c
5027 3587 5162 3146 5427 2793 c
5827 2240 6468 1782 7350 1423 c
8226 1058 9302 876 10578 876 c
12459 876 13858 1229 14781 1929 c
15699 2628 16157 3369 16157 4151 c
16157 5045 15693 5762 14764 6303 c
13823 6844 12453 7208 10654 7391 c
8855 7573 7567 7814 6785 8114 c
6003 8414 5398 8861 4962 9455 c
4527 10054 4304 10695 4304 11389 c
4304 12624 4915 13611 6132 14341 c
7350 15070 8802 15434 10489 15434 c
12488 15434 14111 14946 15364 13970 C
@c
F
T
@rax %Note: Object
81.00000 711.00000 135.00000 738.00000 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
81.00000 738.00000 m
135.00000 738.00000 L
135.00000 711.00000 L
81.00000 711.00000 L
81.00000 738.00000 L
@c
S

@rax %Note: Object
135.00000 711.00000 189.00000 738.00000 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
135.00000 738.00000 m
189.00000 738.00000 L
189.00000 711.00000 L
135.00000 711.00000 L
135.00000 738.00000 L
@c
S

@rax %Note: Object
189.00000 711.00000 297.00000 738.00000 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
189.00000 738.00000 m
297.00000 738.00000 L
297.00000 711.00000 L
189.00000 711.00000 L
189.00000 738.00000 L
@c
S

@rax 81.00000 744.89499 214.89052 754.27994 @E
[0.00028346 0.00000000 0.00000000 0.00028346 80.99999704 746.99997267] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_Arial 35278.00000 z
%CHAR: 0 0 (H) @t
2822 0 m
2822 25253 L
6168 25253 L
6168 14881 L
19291 14881 L
19291 25253 L
22637 25253 L
22637 0 L
19291 0 L
19291 11900 L
6168 11900 L
6168 0 L
2822 0 L
@c
F
%CHAR: 25471 0 (a) @t
39735 2258 m
38583 1282 37477 594 36419 188 c
35355 -212 34214 -412 32997 -412 c
30986 -412 29446 76 28364 1058 c
27288 2040 26747 3298 26747 4821 c
26747 5721 26947 6538 27358 7279 c
27764 8020 28299 8614 28958 9061 c
29622 9507 30363 9848 31192 10078 c
31798 10236 32715 10395 33944 10542 c
36448 10842 38295 11195 39476 11612 C
39488 12036 39494 12306 39494 12418 c
39494 13682 39200 14576 38612 15087 c
37824 15793 36642 16140 35084 16140 c
33626 16140 32550 15887 31850 15375 c
31157 14864 30645 13958 30310 12659 C
27282 13076 L
27558 14370 28011 15422 28640 16216 c
29269 17016 30186 17633 31380 18062 c
32574 18492 33955 18709 35531 18709 c
37095 18709 38359 18521 39335 18156 c
40311 17786 41029 17327 41493 16769 c
41952 16210 42269 15511 42457 14658 c
42557 14129 42610 13176 42610 11800 c
42610 7667 l
42610 4780 42675 2957 42810 2199 c
42939 1435 43204 700 43592 0 C
40352 0 L
40035 641 39823 1393 39735 2258 C
@c
39476 9184 m
38347 8720 36660 8331 34414 8008 c
33138 7826 32233 7620 31709 7391 c
31180 7161 30769 6826 30486 6379 c
30198 5938 30051 5450 30051 4910 c
30051 4080 30369 3393 30992 2840 c
31615 2293 32532 2017 33738 2017 c
34931 2017 35996 2275 36925 2799 c
37854 3322 38541 4039 38977 4945 c
39312 5644 39476 6679 39476 8043 c
39476 9184 L
@c
F
%CHAR: 45086 0 (l) @t
47344 0 m
47344 25253 L
50442 25253 L
50442 0 L
47344 0 L
@c
F
%CHAR: 52918 0 (f) @t
55981 0 m
55981 15881 L
53247 15881 L
53247 18292 L
55981 18292 L
55981 20238 l
55981 21467 56093 22384 56311 22978 c
56610 23783 57134 24436 57886 24936 c
58639 25435 59691 25682 61050 25682 c
61920 25682 62884 25582 63942 25371 C
63478 22666 L
62837 22784 62226 22843 61649 22843 c
60709 22843 60044 22643 59656 22237 c
59262 21837 59068 21084 59068 19979 c
59068 18292 L
62631 18292 L
62631 15881 L
59068 15881 L
59068 0 L
55981 0 L
@c
F
%CHAR: 62725 0 (w) @t
68428 0 m
62831 18292 L
66035 18292 L
68946 7732 L
70028 3804 L
70075 4004 70392 5262 70974 7579 c
73885 18292 L
77071 18292 L
79811 7685 L
80729 4186 L
81775 7720 L
84909 18292 L
87925 18292 L
82204 0 L
78988 0 L
76078 10954 L
75366 14076 L
71668 0 L
68428 0 L
@c
F
%CHAR: 88196 0 (o) @t
89366 9149 m
89366 12535 90307 15046 92194 16675 c
93764 18027 95681 18709 97944 18709 c
100461 18709 102519 17886 104112 16234 c
105712 14587 106505 12312 106505 9407 c
106505 7050 106153 5198 105447 3851 c
104741 2499 103712 1452 102366 706 c
101014 -41 99544 -412 97944 -412 c
95387 -412 93317 406 91736 2052 c
90154 3692 89366 6056 89366 9149 c
@c
92553 9149 m
92553 6803 93064 5051 94087 3886 c
95110 2716 96398 2134 97944 2134 c
99485 2134 100767 2722 101790 3892 c
102807 5062 103319 6850 103319 9249 c
103319 11512 102807 13229 101778 14393 c
100749 15558 99473 16140 97944 16140 c
96398 16140 95110 15558 94087 14399 c
93064 13241 92553 11489 92553 9149 c
@c
F
%CHAR: 107811 0 (r) @t
110104 0 m
110104 18292 L
112891 18292 L
112891 15522 L
113602 16816 114261 17674 114867 18086 c
115466 18497 116131 18709 116854 18709 c
117901 18709 118959 18374 120041 17710 C
118971 14829 L
118218 15281 117460 15505 116701 15505 c
116019 15505 115413 15299 114872 14893 c
114332 14482 113949 13917 113720 13194 c
113373 12094 113203 10889 113203 9578 c
113203 0 L
110104 0 L
@c
F
%CHAR: 119559 0 (d) @t
133753 0 m
133753 2311 L
132594 494 130889 -412 128637 -412 c
127179 -412 125838 -12 124616 794 c
123393 1593 122446 2716 121770 4163 c
121099 5603 120764 7256 120764 9131 c
120764 10954 121070 12612 121676 14099 c
122287 15587 123199 16728 124416 17516 c
125633 18309 126997 18709 128502 18709 c
129601 18709 130583 18474 131442 18009 c
132306 17545 133006 16939 133547 16193 C
133547 25253 L
136628 25253 L
136628 0 L
133753 0 L
@c
123951 9131 m
123951 6785 124445 5033 125433 3875 c
126421 2716 127585 2134 128931 2134 c
130284 2134 131436 2693 132383 3798 c
133329 4904 133805 6597 133805 8872 c
133805 11377 133323 13212 132359 14382 c
131395 15558 130207 16140 128790 16140 c
127414 16140 126262 15575 125339 14452 c
124416 13329 123951 11554 123951 9131 c
@c
F
%CHAR: 148981 0 (a) @t
163245 2258 m
162093 1282 160987 594 159929 188 c
158865 -212 157724 -412 156507 -412 c
154496 -412 152956 76 151874 1058 c
150798 2040 150257 3298 150257 4821 c
150257 5721 150457 6538 150868 7279 c
151274 8020 151809 8614 152468 9061 c
153132 9507 153873 9848 154702 10078 c
155308 10236 156225 10395 157454 10542 c
159958 10842 161805 11195 162986 11612 C
162998 12036 163004 12306 163004 12418 c
163004 13682 162710 14576 162122 15087 c
161334 15793 160152 16140 158594 16140 c
157136 16140 156060 15887 155360 15375 c
154667 14864 154155 13958 153820 12659 C
150792 13076 L
151068 14370 151521 15422 152150 16216 c
152779 17016 153696 17633 154890 18062 c
156084 18492 157465 18709 159041 18709 c
160605 18709 161869 18521 162845 18156 c
163821 17786 164539 17327 165003 16769 c
165462 16210 165779 15511 165967 14658 c
166067 14129 166120 13176 166120 11800 c
166120 7667 l
166120 4780 166185 2957 166320 2199 c
166449 1435 166714 700 167102 0 C
163862 0 L
163545 641 163333 1393 163245 2258 C
@c
162986 9184 m
161857 8720 160170 8331 157924 8008 c
156648 7826 155743 7620 155219 7391 c
154690 7161 154279 6826 153996 6379 c
153708 5938 153561 5450 153561 4910 c
153561 4080 153879 3393 154502 2840 c
155125 2293 156042 2017 157248 2017 c
158441 2017 159506 2275 160435 2799 c
161364 3322 162051 4039 162487 4945 c
162822 5644 162986 6679 162986 8043 c
162986 9184 L
@c
F
%CHAR: 168596 0 (l) @t
170854 0 m
170854 25253 L
173952 25253 L
173952 0 L
170854 0 L
@c
F
%CHAR: 176428 0 (i) @t
178768 21684 m
178768 25253 L
181873 25253 L
181873 21684 L
178768 21684 L
@c
178768 0 m
178768 18292 L
181873 18292 L
181873 0 L
178768 0 L
@c
F
%CHAR: 184260 0 (g) @t
186018 -1517 m
189034 -1964 L
189158 -2893 189511 -3569 190081 -3998 c
190851 -4569 191904 -4857 193232 -4857 c
194673 -4857 195778 -4569 196560 -3998 c
197342 -3422 197866 -2616 198142 -1588 c
198307 -953 198377 370 198365 2393 C
197013 800 195326 0 193303 0 c
190786 0 188840 905 187464 2722 c
186089 4533 185395 6715 185395 9249 c
185395 10995 185712 12606 186341 14082 c
186976 15558 187894 16698 189093 17504 c
190293 18303 191704 18709 193321 18709 c
195478 18709 197260 17833 198659 16087 C
198659 18292 L
201523 18292 L
201523 2481 l
201523 -365 201229 -2387 200653 -3575 c
200070 -4763 199153 -5703 197895 -6391 c
196637 -7079 195090 -7426 193250 -7426 c
191069 -7426 189305 -6932 187964 -5950 c
186618 -4968 185971 -3493 186018 -1517 C
@c
188582 9472 m
188582 7073 189058 5321 190016 4222 c
190969 3116 192162 2569 193597 2569 c
195020 2569 196213 3116 197178 4210 c
198142 5309 198624 7026 198624 9372 c
198624 11612 198130 13300 197136 14435 c
196143 15569 194943 16140 193544 16140 c
192168 16140 190998 15581 190028 14458 c
189064 13341 188582 11677 188582 9472 c
@c
F
%CHAR: 203875 0 (n) @t
206203 0 m
206203 18292 L
208990 18292 L
208990 15693 L
210337 17704 212277 18709 214811 18709 c
215917 18709 216928 18509 217851 18115 c
218780 17715 219468 17198 219926 16551 c
220391 15910 220708 15146 220897 14264 c
221008 13688 221067 12682 221067 11248 c
221067 0 L
217963 0 L
217963 11130 l
217963 12388 217845 13335 217604 13964 c
217363 14587 216934 15087 216322 15458 c
215705 15834 214988 16022 214159 16022 c
212836 16022 211701 15599 210737 14764 c
209778 13923 209302 12336 209302 9990 c
209302 0 L
206203 0 L
@c
F
%CHAR: 223490 0 (e) @t
238336 5891 m
241541 5497 L
241035 3622 240100 2170 238736 1135 c
237366 106 235620 -412 233497 -412 c
230822 -412 228699 412 227135 2058 c
225566 3704 224784 6015 224784 8990 c
224784 12071 225577 14458 227159 16157 c
228746 17857 230798 18709 233327 18709 c
235773 18709 237772 17874 239318 16210 c
240870 14546 241646 12200 241646 9184 c
241646 8996 241641 8720 241629 8355 C
227988 8355 L
228100 6344 228670 4804 229693 3739 c
230716 2669 231986 2134 233515 2134 c
234650 2134 235620 2434 236425 3034 c
237231 3628 237866 4580 238336 5891 C
@c
228158 10907 m
238371 10907 L
238236 12441 237842 13600 237201 14364 c
236214 15558 234932 16157 233362 16157 c
231939 16157 230740 15681 229769 14729 c
228799 13776 228264 12500 228158 10907 C
@c
F
%CHAR: 243105 0 (d) @t
257299 0 m
257299 2311 L
256140 494 254435 -412 252183 -412 c
250725 -412 249384 -12 248162 794 c
246939 1593 245992 2716 245316 4163 c
244645 5603 244310 7256 244310 9131 c
244310 10954 244616 12612 245222 14099 c
245833 15587 246745 16728 247962 17516 c
249179 18309 250543 18709 252048 18709 c
253147 18709 254129 18474 254988 18009 c
255852 17545 256552 16939 257093 16193 C
257093 25253 L
260174 25253 L
260174 0 L
257299 0 L
@c
247497 9131 m
247497 6785 247991 5033 248979 3875 c
249967 2716 251131 2134 252477 2134 c
253830 2134 254982 2693 255929 3798 c
256875 4904 257351 6597 257351 8872 c
257351 11377 256869 13212 255905 14382 c
254941 15558 253753 16140 252336 16140 c
250960 16140 249808 15575 248885 14452 c
247962 13329 247497 11554 247497 9131 c
@c
F
%CHAR: 262720 0 (,) @t
265854 0 m
265854 3534 L
269388 3534 L
269388 0 l
269388 -1299 269158 -2346 268700 -3146 c
268235 -3939 267506 -4557 266512 -4998 C
265648 -3669 L
266301 -3381 266783 -2957 267094 -2405 c
267406 -1846 267577 -1047 267612 0 C
265854 0 L
@c
F
%CHAR: 419143 0 (i) @t
421483 21684 m
421483 25253 L
424588 25253 L
424588 21684 L
421483 21684 L
@c
421483 0 m
421483 18292 L
424588 18292 L
424588 0 L
421483 0 L
@c
F
%CHAR: 426975 0 (s) @t
428063 5462 m
431126 5944 L
431297 4715 431779 3775 432567 3116 c
433349 2464 434448 2134 435865 2134 c
437288 2134 438346 2428 439034 3005 c
439722 3587 440069 4269 440069 5045 c
440069 5750 439763 6297 439152 6703 c
438728 6979 437670 7326 435983 7749 c
433713 8326 432131 8820 431255 9243 c
430379 9660 429709 10242 429256 10983 c
428804 11724 428574 12541 428574 13435 c
428574 14252 428762 15005 429139 15699 c
429509 16398 430021 16975 430662 17433 c
431144 17786 431802 18092 432631 18339 c
433466 18586 434360 18709 435312 18709 c
436747 18709 438005 18497 439093 18086 c
440181 17674 440980 17116 441498 16410 c
442015 15699 442368 14758 442562 13576 C
439534 13159 L
439393 14099 438993 14834 438335 15364 c
437676 15893 436741 16157 435536 16157 c
434113 16157 433096 15922 432490 15452 c
431879 14981 431573 14429 431573 13800 c
431573 13394 431702 13035 431955 12712 c
432208 12377 432602 12106 433143 11883 c
433454 11771 434366 11507 435883 11095 c
438076 10507 439605 10031 440469 9654 c
441339 9284 442021 8737 442515 8026 c
443009 7314 443256 6432 443256 5374 c
443256 4339 442950 3369 442350 2452 c
441745 1540 440875 835 439740 335 c
438605 -165 437317 -412 435883 -412 c
433501 -412 431690 82 430444 1070 c
429198 2058 428404 3522 428063 5462 C
@c
F
%CHAR: 454421 0 (4) @t
465822 0 m
465822 6044 L
454868 6044 L
454868 8890 L
466392 25253 L
468926 25253 L
468926 8890 L
472336 8890 L
472336 6044 L
468926 6044 L
468926 0 L
465822 0 L
@c
465822 8890 m
465822 20273 L
457919 8890 L
465822 8890 L
@c
F
T
@rax 81.00000 744.89499 214.89052 754.27994 @E
[0.00028346 0.00000000 0.00000000 0.00028346 80.99999704 746.99997267] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 282334 0 (s) @t
297698 13970 m
297698 14305 297768 14546 297903 14693 c
298044 14840 298215 14917 298421 14917 c
298638 14917 298821 14840 298956 14693 c
299097 14546 299162 14293 299162 13935 c
299162 11454 l
299162 11113 299097 10866 298956 10713 c
298821 10566 298638 10489 298421 10489 c
298227 10489 298062 10554 297933 10677 c
297798 10807 297721 11013 297698 11301 c
297633 11989 297274 12559 296633 13006 c
295687 13647 294446 13970 292894 13970 c
291277 13970 290019 13641 289119 12988 c
288443 12494 288102 11942 288102 11336 c
288102 10648 288508 10072 289313 9613 c
289860 9290 290907 9043 292447 8872 c
294458 8655 295851 8408 296633 8132 c
297745 7726 298574 7173 299120 6462 c
299667 5750 299938 4980 299938 4151 c
299938 2922 299350 1829 298162 870 c
296980 -88 295246 -570 292964 -570 c
290677 -570 288808 12 287349 1170 C
287349 782 287326 529 287279 412 c
287232 300 287149 200 287026 123 c
286908 41 286773 0 286626 0 c
286414 0 286244 76 286109 223 c
285968 370 285897 617 285897 964 c
285897 3945 l
285897 4292 285968 4533 286097 4686 c
286232 4833 286403 4910 286626 4910 c
286832 4910 287002 4839 287149 4692 c
287291 4551 287361 4357 287361 4116 c
287361 3587 287496 3146 287761 2793 c
288161 2240 288802 1782 289684 1423 c
290560 1058 291636 876 292912 876 c
294793 876 296192 1229 297115 1929 c
298033 2628 298491 3369 298491 4151 c
298491 5045 298027 5762 297098 6303 c
296157 6844 294787 7208 292988 7391 c
291189 7573 289901 7814 289119 8114 c
288337 8414 287732 8861 287296 9455 c
286861 10054 286638 10695 286638 11389 c
286638 12624 287249 13611 288466 14341 c
289684 15070 291136 15434 292823 15434 c
294822 15434 296445 14946 297698 13970 C
@c
F
%CHAR: 303501 0 (i) @t
314802 22343 m
314802 18603 L
312667 18603 L
312667 22343 L
314802 22343 L
@c
314855 14917 m
314855 1446 L
320534 1446 l
320893 1446 321146 1382 321293 1246 c
321446 1117 321516 941 321516 723 c
321516 517 321446 347 321293 206 c
321146 71 320893 0 320534 0 c
307723 0 l
307376 0 307129 71 306982 206 c
306829 347 306758 517 306758 723 c
306758 941 306829 1117 306982 1246 c
307129 1382 307376 1446 307723 1446 c
313408 1446 L
313408 13453 L
309187 13453 l
308840 13453 308593 13523 308434 13658 c
308281 13800 308205 13970 308205 14176 c
308205 14393 308281 14576 308428 14711 c
308575 14846 308828 14917 309187 14917 c
314855 14917 L
@c
F
%CHAR: 324668 0 (z) @t
341584 14917 m
341584 13623 L
330748 1446 L
340531 1446 L
340531 3445 l
340531 3792 340596 4039 340731 4186 c
340861 4333 341037 4410 341255 4410 c
341472 4410 341654 4333 341790 4186 c
341931 4039 341995 3792 341995 3445 c
341978 0 L
328748 0 L
328748 1294 L
339532 13453 L
330542 13453 L
330542 11489 l
330542 11148 330471 10901 330336 10748 c
330195 10601 330024 10525 329819 10525 c
329601 10525 329425 10601 329284 10748 c
329148 10901 329078 11148 329078 11489 c
329078 14917 L
341584 14917 L
@c
F
%CHAR: 345835 0 (e) @t
364250 7114 m
349504 7114 L
349757 5245 350539 3734 351856 2593 c
353173 1452 354796 876 356742 876 c
357818 876 358947 1058 360134 1411 c
361316 1770 362280 2240 363027 2822 c
363245 2999 363433 3081 363597 3081 c
363780 3081 363938 3010 364080 2869 c
364215 2722 364285 2558 364285 2358 c
364285 2164 364191 1976 364009 1793 c
363456 1217 362480 682 361069 182 c
359664 -318 358218 -570 356742 -570 c
354261 -570 352191 247 350527 1870 c
348869 3493 348040 5462 348040 7767 c
348040 9872 348816 11671 350374 13176 c
351932 14682 353855 15434 356154 15434 c
358517 15434 360464 14664 361992 13118 c
363521 11571 364274 9572 364250 7114 C
@c
362786 8578 m
362498 10172 361745 11471 360522 12471 c
359299 13470 357841 13970 356154 13970 c
354466 13970 353014 13476 351797 12488 c
350580 11501 349821 10195 349522 8578 C
362786 8578 L
@c
F
%CHAR: 367002 0 (o) @t
385676 7426 m
385676 5221 384888 3334 383306 1776 c
381725 212 379826 -570 377597 -570 c
375345 -570 373434 218 371859 1782 c
370289 3351 369501 5233 369501 7426 c
369501 9631 370289 11518 371859 13082 c
373434 14652 375345 15434 377597 15434 c
379826 15434 381725 14652 383306 13094 c
384888 11530 385676 9643 385676 7426 c
@c
384212 7426 m
384212 9237 383565 10783 382271 12059 c
380978 13335 379414 13970 377580 13970 c
375739 13970 374175 13329 372882 12047 c
371594 10772 370947 9225 370947 7426 c
370947 5633 371594 4092 372882 2810 c
374175 1523 375739 876 377580 876 c
379414 876 380978 1517 382271 2799 c
383565 4080 384212 5621 384212 7426 c
@c
F
%CHAR: 388169 0 (f) @t
397800 13453 m
397800 1446 L
404156 1446 l
404497 1446 404744 1382 404897 1246 c
405044 1117 405120 941 405120 723 c
405120 517 405044 347 404897 206 c
404744 71 404497 0 404156 0 c
392837 0 l
392491 0 392244 71 392097 206 c
391950 347 391873 517 391873 723 c
391873 941 391950 1117 392097 1246 c
392244 1382 392491 1446 392837 1446 c
396336 1446 L
396336 13453 L
393196 13453 l
392855 13453 392608 13523 392455 13658 c
392308 13800 392232 13976 392232 14194 c
392232 14399 392308 14576 392455 14711 c
392608 14846 392855 14917 393196 14917 c
396336 14917 L
396336 17104 l
396336 18321 396830 19379 397818 20273 c
398805 21173 400111 21620 401745 21620 c
403109 21620 404567 21490 406120 21237 c
406702 21149 407054 21037 407178 20914 c
407296 20785 407360 20620 407360 20414 c
407360 20208 407290 20038 407154 19903 c
407013 19773 406831 19709 406602 19709 c
406508 19709 406355 19720 406137 19756 c
404403 20020 402939 20155 401745 20155 c
400481 20155 399505 19844 398823 19227 c
398141 18603 397800 17898 397800 17104 c
397800 14917 L
404567 14917 l
404914 14917 405161 14846 405308 14711 c
405455 14576 405532 14393 405532 14176 c
405532 13970 405455 13800 405308 13658 c
405161 13523 404914 13453 404567 13453 c
397800 13453 L
@c
F
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel8Dict
%%EOF
