%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 80 701 195 746 
%%Creator: CorelDRAW 8
%%Title: D:\ELFABI\strctsmall.eps
%%CreationDate: Thu Jan 25 14:47:03 2001
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Color profile: PROFILES.CCM - Generic CMYK printer profile
%%BeginResource: procset wCorel8Dict 8.0 0
/wCorel8Dict 300 dict def wCorel8Dict begin
% Copyright (c)1992-98 Corel Corporation
% All rights reserved.     v8.0 r0.15
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}
ifelse/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0
def/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def
/$T 1 def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0
def/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/@PL{/LV where
{pop LV 2 ge L2? not and{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel8Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%LogicalPage: 1
@sv
@sm
@sv
%%EndPageSetup
@rax 81.00000 719.85345 85.88324 726.27506 @E
[0.00028346 0.00000000 0.00000000 0.00028346 80.99999704 719.99997366] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (0) @t
17227 12594 m
17227 9008 l
17227 5897 16487 3434 15005 1617 c
13841 194 12377 -517 10613 -517 c
9760 -517 8961 -347 8208 -6 c
7455 329 6815 806 6285 1411 c
5956 1793 5592 2399 5192 3240 c
4798 4075 4516 4845 4339 5545 c
4075 6532 3945 7691 3945 9008 c
3945 12594 l
3945 15716 4686 18186 6168 19997 c
7326 21426 8790 22137 10560 22137 c
11418 22137 12224 21966 12971 21625 c
13717 21290 14352 20814 14881 20208 c
15228 19814 15593 19203 15987 18362 c
16375 17521 16663 16763 16845 16069 c
17098 15081 17227 13923 17227 12594 c
@c
15781 12400 m
15781 13770 15587 15040 15199 16216 c
14817 17392 14382 18333 13900 19032 c
13611 19438 13241 19779 12782 20067 c
12130 20467 11395 20673 10578 20673 c
8955 20673 7691 19844 6767 18192 c
5850 16540 5392 14605 5392 12400 c
5392 9213 l
5392 7849 5586 6573 5968 5392 c
6356 4210 6791 3269 7285 2569 c
7561 2175 7932 1840 8390 1552 c
9043 1135 9784 929 10613 929 c
12218 929 13482 1758 14399 3422 c
15317 5080 15781 7009 15781 9213 c
15781 12400 l
@c
F
T
@rax 108.00000 710.83843 113.36683 715.37499 @E
[0.00028346 0.00000000 0.00000000 0.00028346 107.99999605 710.99997399] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (c) @t
16622 13453 m
16622 13935 l
16622 14293 16692 14546 16828 14693 c
16969 14840 17139 14917 17345 14917 c
17563 14917 17745 14840 17880 14693 c
18015 14546 18086 14293 18086 13935 c
18086 10660 l
18074 10307 18004 10054 17874 9907 c
17739 9754 17563 9678 17345 9678 c
17151 9678 16986 9748 16857 9878 c
16722 10013 16645 10231 16622 10542 c
16551 11360 16016 12130 15011 12865 c
14005 13600 12653 13970 10954 13970 c
8808 13970 7179 13300 6062 11953 c
4951 10613 4392 9072 4392 7338 c
4392 5468 5009 3922 6238 2705 c
7467 1488 9055 876 11007 876 c
12130 876 13276 1088 14446 1499 c
15611 1911 16663 2575 17604 3498 c
17845 3728 18056 3839 18245 3839 c
18439 3839 18603 3775 18733 3645 c
18868 3510 18933 3346 18933 3152 c
18933 2658 18350 2034 17192 1276 c
15317 47 13235 -570 10936 -570 c
8608 -570 6691 176 5192 1664 c
3692 3152 2946 5033 2946 7320 c
2946 9654 3710 11589 5245 13123 c
6779 14664 8708 15434 11042 15434 c
13259 15434 15117 14776 16622 13453 C
@c
F
T
@rax 81.00000 735.89499 194.09641 745.18838 @E
[0.00028346 0.00000000 0.00000000 0.00028346 80.99999704 737.99997300] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_Arial 35278.00000 z
%CHAR: 0 0 (B) @t
2581 0 m
2581 25253 L
12059 25253 l
13988 25253 15534 24994 16698 24489 c
17868 23977 18780 23189 19438 22125 c
20097 21067 20432 19956 20432 18791 c
20432 17715 20138 16698 19550 15746 c
18968 14793 18080 14023 16898 13435 C
18427 12988 19597 12224 20420 11148 c
21243 10066 21655 8790 21655 7320 c
21655 6138 21402 5039 20902 4022 c
20402 3005 19785 2223 19050 1670 c
18315 1117 17392 706 16287 423 c
15181 141 13823 0 12212 0 c
2581 0 L
@c
5927 14640 m
11389 14640 l
12865 14640 13929 14740 14576 14934 c
15422 15187 16063 15605 16492 16193 c
16922 16781 17139 17516 17139 18397 c
17139 19232 16939 19973 16540 20608 c
16134 21249 15558 21684 14817 21919 c
14070 22155 12788 22272 10971 22272 c
5927 22272 L
5927 14640 L
@c
5927 2981 m
12212 2981 l
13294 2981 14052 3022 14487 3099 c
15258 3240 15899 3469 16416 3792 c
16933 4110 17357 4580 17692 5192 c
18021 5809 18192 6515 18192 7320 c
18192 8261 17951 9078 17468 9778 c
16986 10472 16316 10960 15458 11242 c
14605 11518 13370 11659 11765 11659 c
5927 11659 L
5927 2981 L
@c
F
%CHAR: 23530 0 (y) @t
25717 -7044 m
25370 -4133 L
26052 -4316 26640 -4410 27146 -4410 c
27834 -4410 28387 -4292 28798 -4063 c
29216 -3834 29551 -3516 29815 -3099 c
30015 -2793 30327 -2023 30762 -794 c
30821 -617 30915 -365 31038 -35 C
24100 18292 L
27440 18292 L
31250 7702 l
31738 6356 32185 4945 32573 3463 C
32932 4886 33355 6274 33849 7632 c
37759 18292 L
40857 18292 L
33902 -312 l
33155 -2322 32573 -3704 32161 -4463 c
31609 -5486 30980 -6232 30268 -6709 c
29551 -7185 28704 -7426 27716 -7426 c
27117 -7426 26452 -7297 25717 -7044 C
@c
F
%CHAR: 41169 0 (t) @t
50265 2775 m
50712 35 L
49842 -147 49060 -241 48372 -241 c
47243 -241 46373 -65 45749 294 c
45132 647 44697 1117 44444 1699 c
44191 2275 44062 3498 44062 5356 c
44062 15881 L
41786 15881 L
41786 18292 L
44062 18292 L
44062 22825 L
47149 24683 L
47149 18292 L
50265 18292 L
50265 15881 L
47149 15881 L
47149 5186 l
47149 4298 47202 3734 47307 3481 c
47419 3228 47595 3028 47842 2875 c
48089 2728 48442 2652 48901 2652 c
49248 2652 49700 2693 50265 2775 C
@c
F
%CHAR: 50976 0 (e) @t
65822 5891 m
69027 5497 L
68521 3622 67586 2170 66222 1135 c
64852 106 63106 -412 60983 -412 c
58308 -412 56185 412 54621 2058 c
53052 3704 52270 6015 52270 8990 c
52270 12071 53063 14458 54645 16157 c
56232 17857 58284 18709 60813 18709 c
63259 18709 65258 17874 66804 16210 c
68356 14546 69132 12200 69132 9184 c
69132 8996 69127 8720 69115 8355 C
55474 8355 L
55586 6344 56156 4804 57179 3739 c
58202 2669 59472 2134 61001 2134 c
62136 2134 63106 2434 63911 3034 c
64717 3628 65352 4580 65822 5891 C
@c
55644 10907 m
65857 10907 L
65722 12441 65328 13600 64687 14364 c
63700 15558 62418 16157 60848 16157 c
59425 16157 58226 15681 57255 14729 c
56285 13776 55750 12500 55644 10907 C
@c
F
%CHAR: 80398 0 (a) @t
94662 2258 m
93510 1282 92404 594 91346 188 c
90282 -212 89141 -412 87924 -412 c
85913 -412 84373 76 83291 1058 c
82215 2040 81674 3298 81674 4821 c
81674 5721 81874 6538 82285 7279 c
82691 8020 83226 8614 83885 9061 c
84549 9507 85290 9848 86119 10078 c
86725 10236 87642 10395 88871 10542 c
91375 10842 93222 11195 94403 11612 C
94415 12036 94421 12306 94421 12418 c
94421 13682 94127 14576 93539 15087 c
92751 15793 91569 16140 90011 16140 c
88553 16140 87477 15887 86777 15375 c
86084 14864 85572 13958 85237 12659 C
82209 13076 L
82485 14370 82938 15422 83567 16216 c
84196 17016 85113 17633 86307 18062 c
87501 18492 88882 18709 90458 18709 c
92022 18709 93286 18521 94262 18156 c
95238 17786 95956 17327 96420 16769 c
96879 16210 97196 15511 97384 14658 c
97484 14129 97537 13176 97537 11800 c
97537 7667 l
97537 4780 97602 2957 97737 2199 c
97866 1435 98131 700 98519 0 C
95279 0 L
94962 641 94750 1393 94662 2258 C
@c
94403 9184 m
93274 8720 91587 8331 89341 8008 c
88065 7826 87160 7620 86636 7391 c
86107 7161 85696 6826 85413 6379 c
85125 5938 84978 5450 84978 4910 c
84978 4080 85296 3393 85919 2840 c
86542 2293 87459 2017 88665 2017 c
89858 2017 90923 2275 91852 2799 c
92781 3322 93468 4039 93904 4945 c
94239 5644 94403 6679 94403 8043 c
94403 9184 L
@c
F
%CHAR: 100013 0 (l) @t
102271 0 m
102271 25253 L
105369 25253 L
105369 0 L
102271 0 L
@c
F
%CHAR: 107845 0 (i) @t
110185 21684 m
110185 25253 L
113290 25253 L
113290 21684 L
110185 21684 L
@c
110185 0 m
110185 18292 L
113290 18292 L
113290 0 L
110185 0 L
@c
F
%CHAR: 115677 0 (g) @t
117435 -1517 m
120451 -1964 L
120575 -2893 120928 -3569 121498 -3998 c
122268 -4569 123321 -4857 124649 -4857 c
126090 -4857 127195 -4569 127977 -3998 c
128759 -3422 129283 -2616 129559 -1588 c
129724 -953 129794 370 129782 2393 C
128430 800 126743 0 124720 0 c
122203 0 120257 905 118881 2722 c
117506 4533 116812 6715 116812 9249 c
116812 10995 117129 12606 117758 14082 c
118393 15558 119311 16698 120510 17504 c
121710 18303 123121 18709 124738 18709 c
126895 18709 128677 17833 130076 16087 C
130076 18292 L
132940 18292 L
132940 2481 l
132940 -365 132646 -2387 132070 -3575 c
131487 -4763 130570 -5703 129312 -6391 c
128054 -7079 126507 -7426 124667 -7426 c
122486 -7426 120722 -6932 119381 -5950 c
118035 -4968 117388 -3493 117435 -1517 C
@c
119999 9472 m
119999 7073 120475 5321 121433 4222 c
122386 3116 123579 2569 125014 2569 c
126437 2569 127630 3116 128595 4210 c
129559 5309 130041 7026 130041 9372 c
130041 11612 129547 13300 128553 14435 c
127560 15569 126360 16140 124961 16140 c
123585 16140 122415 15581 121445 14458 c
120481 13341 119999 11677 119999 9472 c
@c
F
%CHAR: 135292 0 (n) @t
137620 0 m
137620 18292 L
140407 18292 L
140407 15693 L
141754 17704 143694 18709 146228 18709 c
147334 18709 148345 18509 149268 18115 c
150197 17715 150885 17198 151343 16551 c
151808 15910 152125 15146 152314 14264 c
152425 13688 152484 12682 152484 11248 c
152484 0 L
149380 0 L
149380 11130 l
149380 12388 149262 13335 149021 13964 c
148780 14587 148351 15087 147739 15458 c
147122 15834 146405 16022 145576 16022 c
144253 16022 143118 15599 142154 14764 c
141195 13923 140719 12336 140719 9990 c
140719 0 L
137620 0 L
@c
F
%CHAR: 154907 0 (e) @t
169753 5891 m
172958 5497 L
172452 3622 171517 2170 170153 1135 c
168783 106 167037 -412 164914 -412 c
162239 -412 160116 412 158552 2058 c
156983 3704 156201 6015 156201 8990 c
156201 12071 156994 14458 158576 16157 c
160163 17857 162215 18709 164744 18709 c
167190 18709 169189 17874 170735 16210 c
172287 14546 173063 12200 173063 9184 c
173063 8996 173058 8720 173046 8355 C
159405 8355 L
159517 6344 160087 4804 161110 3739 c
162133 2669 163403 2134 164932 2134 c
166067 2134 167037 2434 167842 3034 c
168648 3628 169283 4580 169753 5891 C
@c
159575 10907 m
169788 10907 L
169653 12441 169259 13600 168618 14364 c
167631 15558 166349 16157 164779 16157 c
163356 16157 162157 15681 161186 14729 c
160216 13776 159681 12500 159575 10907 C
@c
F
%CHAR: 174522 0 (d) @t
188716 0 m
188716 2311 L
187557 494 185852 -412 183600 -412 c
182142 -412 180801 -12 179579 794 c
178356 1593 177409 2716 176733 4163 c
176062 5603 175727 7256 175727 9131 c
175727 10954 176033 12612 176639 14099 c
177250 15587 178162 16728 179379 17516 c
180596 18309 181960 18709 183465 18709 c
184564 18709 185546 18474 186405 18009 c
187269 17545 187969 16939 188510 16193 C
188510 25253 L
191591 25253 L
191591 0 L
188716 0 L
@c
178914 9131 m
178914 6785 179408 5033 180396 3875 c
181384 2716 182548 2134 183894 2134 c
185247 2134 186399 2693 187346 3798 c
188292 4904 188768 6597 188768 8872 c
188768 11377 188286 13212 187322 14382 c
186358 15558 185170 16140 183753 16140 c
182377 16140 181225 15575 180302 14452 c
179379 13329 178914 11554 178914 9131 c
@c
F
%CHAR: 194137 0 (,) @t
197271 0 m
197271 3534 L
200805 3534 L
200805 0 l
200805 -1299 200575 -2346 200117 -3146 c
199652 -3939 198923 -4557 197929 -4998 C
197065 -3669 L
197718 -3381 198200 -2957 198511 -2405 c
198823 -1846 198994 -1047 199029 0 C
197271 0 L
@c
F
%CHAR: 350560 0 (i) @t
352900 21684 m
352900 25253 L
356005 25253 L
356005 21684 L
352900 21684 L
@c
352900 0 m
352900 18292 L
356005 18292 L
356005 0 L
352900 0 L
@c
F
%CHAR: 358392 0 (s) @t
359480 5462 m
362543 5944 L
362714 4715 363196 3775 363984 3116 c
364766 2464 365865 2134 367282 2134 c
368705 2134 369763 2428 370451 3005 c
371139 3587 371486 4269 371486 5045 c
371486 5750 371180 6297 370569 6703 c
370145 6979 369087 7326 367400 7749 c
365130 8326 363548 8820 362672 9243 c
361796 9660 361126 10242 360673 10983 c
360221 11724 359991 12541 359991 13435 c
359991 14252 360179 15005 360556 15699 c
360926 16398 361438 16975 362079 17433 c
362561 17786 363219 18092 364048 18339 c
364883 18586 365777 18709 366729 18709 c
368164 18709 369422 18497 370510 18086 c
371598 17674 372397 17116 372915 16410 c
373432 15699 373785 14758 373979 13576 C
370951 13159 L
370810 14099 370410 14834 369752 15364 c
369093 15893 368158 16157 366953 16157 c
365530 16157 364513 15922 363907 15452 c
363296 14981 362990 14429 362990 13800 c
362990 13394 363119 13035 363372 12712 c
363625 12377 364019 12106 364560 11883 c
364871 11771 365783 11507 367300 11095 c
369493 10507 371022 10031 371886 9654 c
372756 9284 373438 8737 373932 8026 c
374426 7314 374673 6432 374673 5374 c
374673 4339 374367 3369 373767 2452 c
373162 1540 372292 835 371157 335 c
370022 -165 368734 -412 367300 -412 c
364918 -412 363107 82 361861 1070 c
360615 2058 359821 3522 359480 5462 C
@c
F
%CHAR: 385838 0 (1) @t
398979 0 m
395880 0 L
395880 19756 L
395134 19044 394158 18333 392947 17621 c
391729 16910 390642 16375 389677 16022 C
389677 19015 L
391412 19832 392929 20820 394228 21978 c
395522 23142 396445 24265 396986 25359 C
398979 25359 L
398979 0 L
@c
F
T
@rax 81.00000 735.89499 194.09641 745.18838 @E
[0.00028346 0.00000000 0.00000000 0.00028346 80.99999704 737.99997300] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 213751 0 (s) @t
229115 13970 m
229115 14305 229185 14546 229320 14693 c
229461 14840 229632 14917 229838 14917 c
230055 14917 230238 14840 230373 14693 c
230514 14546 230579 14293 230579 13935 c
230579 11454 l
230579 11113 230514 10866 230373 10713 c
230238 10566 230055 10489 229838 10489 c
229644 10489 229479 10554 229350 10677 c
229215 10807 229138 11013 229115 11301 c
229050 11989 228691 12559 228050 13006 c
227104 13647 225863 13970 224311 13970 c
222694 13970 221436 13641 220536 12988 c
219860 12494 219519 11942 219519 11336 c
219519 10648 219925 10072 220730 9613 c
221277 9290 222324 9043 223864 8872 c
225875 8655 227268 8408 228050 8132 c
229162 7726 229991 7173 230537 6462 c
231084 5750 231355 4980 231355 4151 c
231355 2922 230767 1829 229579 870 c
228397 -88 226663 -570 224381 -570 c
222094 -570 220225 12 218766 1170 C
218766 782 218743 529 218696 412 c
218649 300 218566 200 218443 123 c
218325 41 218190 0 218043 0 c
217831 0 217661 76 217526 223 c
217385 370 217314 617 217314 964 c
217314 3945 l
217314 4292 217385 4533 217514 4686 c
217649 4833 217820 4910 218043 4910 c
218249 4910 218419 4839 218566 4692 c
218708 4551 218778 4357 218778 4116 c
218778 3587 218913 3146 219178 2793 c
219578 2240 220219 1782 221101 1423 c
221977 1058 223053 876 224329 876 c
226210 876 227609 1229 228532 1929 c
229450 2628 229908 3369 229908 4151 c
229908 5045 229444 5762 228515 6303 c
227574 6844 226204 7208 224405 7391 c
222606 7573 221318 7814 220536 8114 c
219754 8414 219149 8861 218713 9455 c
218278 10054 218055 10695 218055 11389 c
218055 12624 218666 13611 219883 14341 c
221101 15070 222553 15434 224240 15434 c
226239 15434 227862 14946 229115 13970 C
@c
F
%CHAR: 234918 0 (i) @t
246219 22343 m
246219 18603 L
244084 18603 L
244084 22343 L
246219 22343 L
@c
246272 14917 m
246272 1446 L
251951 1446 l
252310 1446 252563 1382 252710 1246 c
252863 1117 252933 941 252933 723 c
252933 517 252863 347 252710 206 c
252563 71 252310 0 251951 0 c
239140 0 l
238793 0 238546 71 238399 206 c
238246 347 238175 517 238175 723 c
238175 941 238246 1117 238399 1246 c
238546 1382 238793 1446 239140 1446 c
244825 1446 L
244825 13453 L
240604 13453 l
240257 13453 240010 13523 239851 13658 c
239698 13800 239622 13970 239622 14176 c
239622 14393 239698 14576 239845 14711 c
239992 14846 240245 14917 240604 14917 c
246272 14917 L
@c
F
%CHAR: 256085 0 (z) @t
273001 14917 m
273001 13623 L
262165 1446 L
271948 1446 L
271948 3445 l
271948 3792 272013 4039 272148 4186 c
272278 4333 272454 4410 272672 4410 c
272889 4410 273071 4333 273207 4186 c
273348 4039 273412 3792 273412 3445 c
273395 0 L
260165 0 L
260165 1294 L
270949 13453 L
261959 13453 L
261959 11489 l
261959 11148 261888 10901 261753 10748 c
261612 10601 261441 10525 261236 10525 c
261018 10525 260842 10601 260701 10748 c
260565 10901 260495 11148 260495 11489 c
260495 14917 L
273001 14917 L
@c
F
%CHAR: 277252 0 (e) @t
295667 7114 m
280921 7114 L
281174 5245 281956 3734 283273 2593 c
284590 1452 286213 876 288159 876 c
289235 876 290364 1058 291551 1411 c
292733 1770 293697 2240 294444 2822 c
294662 2999 294850 3081 295014 3081 c
295197 3081 295355 3010 295497 2869 c
295632 2722 295702 2558 295702 2358 c
295702 2164 295608 1976 295426 1793 c
294873 1217 293897 682 292486 182 c
291081 -318 289635 -570 288159 -570 c
285678 -570 283608 247 281944 1870 c
280286 3493 279457 5462 279457 7767 c
279457 9872 280233 11671 281791 13176 c
283349 14682 285272 15434 287571 15434 c
289934 15434 291881 14664 293409 13118 c
294938 11571 295691 9572 295667 7114 C
@c
294203 8578 m
293915 10172 293162 11471 291939 12471 c
290716 13470 289258 13970 287571 13970 c
285883 13970 284431 13476 283214 12488 c
281997 11501 281238 10195 280939 8578 C
294203 8578 L
@c
F
%CHAR: 298419 0 (o) @t
317093 7426 m
317093 5221 316305 3334 314723 1776 c
313142 212 311243 -570 309014 -570 c
306762 -570 304851 218 303276 1782 c
301706 3351 300918 5233 300918 7426 c
300918 9631 301706 11518 303276 13082 c
304851 14652 306762 15434 309014 15434 c
311243 15434 313142 14652 314723 13094 c
316305 11530 317093 9643 317093 7426 c
@c
315629 7426 m
315629 9237 314982 10783 313688 12059 c
312395 13335 310831 13970 308997 13970 c
307156 13970 305592 13329 304299 12047 c
303011 10772 302364 9225 302364 7426 c
302364 5633 303011 4092 304299 2810 c
305592 1523 307156 876 308997 876 c
310831 876 312395 1517 313688 2799 c
314982 4080 315629 5621 315629 7426 c
@c
F
%CHAR: 319586 0 (f) @t
329217 13453 m
329217 1446 L
335573 1446 l
335914 1446 336161 1382 336314 1246 c
336461 1117 336537 941 336537 723 c
336537 517 336461 347 336314 206 c
336161 71 335914 0 335573 0 c
324254 0 l
323908 0 323661 71 323514 206 c
323367 347 323290 517 323290 723 c
323290 941 323367 1117 323514 1246 c
323661 1382 323908 1446 324254 1446 c
327753 1446 L
327753 13453 L
324613 13453 l
324272 13453 324025 13523 323872 13658 c
323725 13800 323649 13976 323649 14194 c
323649 14399 323725 14576 323872 14711 c
324025 14846 324272 14917 324613 14917 c
327753 14917 L
327753 17104 l
327753 18321 328247 19379 329235 20273 c
330222 21173 331528 21620 333162 21620 c
334526 21620 335984 21490 337537 21237 c
338119 21149 338471 21037 338595 20914 c
338713 20785 338777 20620 338777 20414 c
338777 20208 338707 20038 338571 19903 c
338430 19773 338248 19709 338019 19709 c
337925 19709 337772 19720 337554 19756 c
335820 20020 334356 20155 333162 20155 c
331898 20155 330922 19844 330240 19227 c
329558 18603 329217 17898 329217 17104 c
329217 14917 L
335984 14917 l
336331 14917 336578 14846 336725 14711 c
336872 14576 336949 14393 336949 14176 c
336949 13970 336872 13800 336725 13658 c
336578 13523 336331 13453 335984 13453 c
329217 13453 L
@c
F
T
@rax %Note: Object
81.00000 702.00000 135.00000 729.00000 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
81.00000 729.00000 m
135.00000 729.00000 L
135.00000 702.00000 L
81.00000 702.00000 L
81.00000 729.00000 L
@c
S

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel8Dict
%%EOF
