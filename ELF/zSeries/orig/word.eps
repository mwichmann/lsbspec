%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 81 710 298 738 
%%Creator: CorelDRAW 8
%%Title: D:\ELFABI\word.eps
%%CreationDate: Thu Jan 25 19:00:28 2001
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Color profile: PROFILES.CCM - Generic CMYK printer profile
%%BeginResource: procset wCorel8Dict 8.0 0
/wCorel8Dict 300 dict def wCorel8Dict begin
% Copyright (c)1992-98 Corel Corporation
% All rights reserved.     v8.0 r0.15
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}
ifelse/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0
def/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def
/$T 1 def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0
def/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/@PL{/LV where
{pop LV 2 ge L2? not and{@np/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
/z{exch findfont exch scalefont setfont}bd/ZB{9 dict dup begin 4 1 roll
/FontType 3 def/FontMatrix xd/FontBBox xd/Encoding 256 array def 0 1 255{
Encoding exch/.notdef put}for/CharStrings 256 dict def CharStrings/.notdef{}
put/Metrics 256 dict def Metrics/.notdef 3 -1 roll put/BuildChar{exch dup
/$char exch/Encoding get 3 index get def dup/Metrics get $char get aload pop
setcachedevice begin Encoding exch get CharStrings exch get end exec}def end
definefont pop}bd/ZBAddChar{findfont begin dup 4 1 roll dup 6 1 roll Encoding 3
1 roll put CharStrings 3 1 roll put Metrics 3 1 roll put end}bd/Z{findfont dup
maxlength 2 add dict exch dup{1 index/FID ne{3 index 3 1 roll put}{pop pop}
ifelse}forall pop dup dup/Encoding get 256 array copy dup/$fe xd/Encoding exch
put dup/Fontname 3 index put 3 -1 roll dup length 0 ne{0 exch{dup type 0 type
eq{exch pop}{$fe exch 2 index exch put 1 add}ifelse}forall pop}if dup 256 dict
dup/$met xd/Metrics exch put dup/FontMatrix get 0 get 1000 mul 1 exch div 3
index length 256 eq{0 1 255{dup $fe exch get dup/.notdef eq{pop pop}{5 index 3
-1 roll get 2 index mul $met 3 1 roll put}ifelse}for}if pop definefont pop pop
}bd/@ftx{{currentpoint 3 -1 roll(0)dup 3 -1 roll 0 exch put dup @gs true
charpath $ctm setmatrix @@txt @gr @np stringwidth pop 3 -1 roll add exch m}
forall}bd/@ft{matrix currentmatrix exch $sdf{$scf $sca $scp @ss}if $fil 1 eq
{/@@txt/@pf ld @ftx}{$fil 2 eq{/@@txt/@ff ld @ftx}{$fil 3 eq{/@@txt/@Pf ld
@ftx}{$t $c $m $y $k $n $o @scc_5{show}{pop}ifelse}ifelse}ifelse}ifelse $sdf
{$dsf $dsa $dsp @ss}if setmatrix}bd/@st{matrix currentmatrix exch $SDF{$SCF
$SCA $SCP @ss}if $T $C $M $Y $K $N $O @scc_5{{currentpoint 3 -1 roll(0)dup 3 -1
roll 0 exch put dup @gs true charpath $ctm setmatrix $ptm concat stroke @gr @np
stringwidth pop 3 -1 roll add exch m}forall}{pop}ifelse $SDF{$dsf $dsa $dsp
@ss}if setmatrix}bd/@te{@ft}bd/@tr{@st}bd/@ta{dup @gs @ft @gr @st}bd/@t@a{dup
@gs @st @gr @ft}bd/@tm{@sm concat}bd/e{/t{@te}def}bd/r{/t{@tr}def}bd/o{/t{pop}
def}bd/a{/t{@ta}def}bd/@a{/t{@t@a}def}bd/t{@te}def/T{@np $ctm setmatrix/$ttm
matrix def}bd/ddt{t}def/@t{/$stm $stm currentmatrix def 3 1 roll m $ttm concat
ddt $stm setmatrix}bd/@n{/$ttm exch matrix rotate def}bd/@s{}bd/@l{}bd
/_lineorientation 0 def/_bitfont null def/_bitlobyte 0 def/_bitkey null def
/_bithibyte 0 def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel8Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%LogicalPage: 1
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
81.30756 710.76246 135.30756 737.76246 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
81.30756 737.76246 m
135.30756 737.76246 L
135.30756 710.76246 L
81.30756 710.76246 L
81.30756 737.76246 L
@c
S

@rax %Note: Object
135.30756 710.76246 189.30756 737.76246 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
135.30756 737.76246 m
189.30756 737.76246 L
189.30756 710.76246 L
135.30756 710.76246 L
135.30756 737.76246 L
@c
S

@rax %Note: Object
189.30756 710.76246 243.30756 737.76246 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
189.30756 737.76246 m
243.30756 737.76246 L
243.30756 710.76246 L
189.30756 710.76246 L
189.30756 737.76246 L
@c
S

@rax %Note: Object
243.30756 710.76246 297.30756 737.76246 @E
0 J 0 j [] 0 d 0 R 0 @G
0.00 0.00 0.00 1.00 K
0 0.21600 0.21600 0.00000 @w
/$fm 0 def
243.30756 737.76246 m
297.30756 737.76246 L
297.30756 710.76246 L
243.30756 710.76246 L
243.30756 737.76246 L
@c
S

@rax 82.63871 728.94869 87.52195 735.37030 @E
[0.00028346 0.00000000 0.00000000 0.00028346 82.63870564 729.09521742] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (0) @t
17227 12594 m
17227 9008 l
17227 5897 16487 3434 15005 1617 c
13841 194 12377 -517 10613 -517 c
9760 -517 8961 -347 8208 -6 c
7455 329 6815 806 6285 1411 c
5956 1793 5592 2399 5192 3240 c
4798 4075 4516 4845 4339 5545 c
4075 6532 3945 7691 3945 9008 c
3945 12594 l
3945 15716 4686 18186 6168 19997 c
7326 21426 8790 22137 10560 22137 c
11418 22137 12224 21966 12971 21625 c
13717 21290 14352 20814 14881 20208 c
15228 19814 15593 19203 15987 18362 c
16375 17521 16663 16763 16845 16069 c
17098 15081 17227 13923 17227 12594 c
@c
15781 12400 m
15781 13770 15587 15040 15199 16216 c
14817 17392 14382 18333 13900 19032 c
13611 19438 13241 19779 12782 20067 c
12130 20467 11395 20673 10578 20673 c
8955 20673 7691 19844 6767 18192 c
5850 16540 5392 14605 5392 12400 c
5392 9213 l
5392 7849 5586 6573 5968 5392 c
6356 4210 6791 3269 7285 2569 c
7561 2175 7932 1840 8390 1552 c
9043 1135 9784 929 10613 929 c
12218 929 13482 1758 14399 3422 c
15317 5080 15781 7009 15781 9213 c
15781 12400 l
@c
F
T
@rax 191.96986 729.09524 196.76976 735.37030 @E
[0.00028346 0.00000000 0.00000000 0.00028346 191.96985125 729.09521742] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (2) @t
4357 1446 m
15469 1446 L
15469 2017 l
15469 2358 15540 2605 15675 2758 c
15810 2905 15993 2981 16210 2981 c
16416 2981 16587 2905 16728 2758 c
16863 2605 16933 2358 16933 2017 c
16933 0 L
2946 0 L
2946 2134 L
5886 4780 8743 7467 11524 10195 c
12824 11471 13711 12406 14194 13006 c
14676 13600 15005 14129 15187 14582 c
15364 15034 15452 15493 15452 15952 c
15452 17192 14952 18286 13952 19238 c
12953 20197 11748 20673 10336 20673 c
9072 20673 7955 20308 6979 19585 c
6003 18862 5368 17968 5080 16898 c
5015 16622 4927 16445 4821 16363 c
4686 16251 4527 16193 4339 16193 c
4145 16193 3981 16257 3851 16393 c
3716 16522 3651 16681 3651 16863 c
3651 17416 3951 18162 4557 19103 c
5156 20044 5991 20785 7056 21326 c
8114 21866 9202 22137 10319 22137 c
12124 22137 13670 21508 14970 20255 c
16269 19003 16916 17586 16916 16004 c
16916 15334 16804 14723 16587 14170 c
16369 13611 15999 13000 15475 12341 c
14952 11683 14017 10683 12659 9355 c
9260 6003 6497 3398 4357 1552 C
4357 1446 L
@c
F
T
@rax 83.30428 711.61427 88.18753 718.03587 @E
[0.00028346 0.00000000 0.00000000 0.00028346 83.30428042 711.76079286] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (0) @t
17227 12594 m
17227 9008 l
17227 5897 16487 3434 15005 1617 c
13841 194 12377 -517 10613 -517 c
9760 -517 8961 -347 8208 -6 c
7455 329 6815 806 6285 1411 c
5956 1793 5592 2399 5192 3240 c
4798 4075 4516 4845 4339 5545 c
4075 6532 3945 7691 3945 9008 c
3945 12594 l
3945 15716 4686 18186 6168 19997 c
7326 21426 8790 22137 10560 22137 c
11418 22137 12224 21966 12971 21625 c
13717 21290 14352 20814 14881 20208 c
15228 19814 15593 19203 15987 18362 c
16375 17521 16663 16763 16845 16069 c
17098 15081 17227 13923 17227 12594 c
@c
15781 12400 m
15781 13770 15587 15040 15199 16216 c
14817 17392 14382 18333 13900 19032 c
13611 19438 13241 19779 12782 20067 c
12130 20467 11395 20673 10578 20673 c
8955 20673 7691 19844 6767 18192 c
5850 16540 5392 14605 5392 12400 c
5392 9213 l
5392 7849 5586 6573 5968 5392 c
6356 4210 6791 3269 7285 2569 c
7561 2175 7932 1840 8390 1552 c
9043 1135 9784 929 10613 929 c
12218 929 13482 1758 14399 3422 c
15317 5080 15781 7009 15781 9213 c
15781 12400 l
@c
F
T
@rax 190.30592 712.27984 201.43276 718.70145 @E
[0.00028346 0.00000000 0.00000000 0.00028346 190.30591430 712.42636764] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (1) @t
11301 21914 m
11301 1446 L
16263 1446 l
16604 1446 16851 1382 17004 1246 c
17151 1117 17227 941 17227 723 c
17227 517 17151 347 17004 206 c
16851 71 16604 0 16263 0 c
4892 0 l
4545 0 4298 71 4151 206 c
4004 347 3928 517 3928 723 c
3928 941 4004 1117 4151 1246 c
4298 1382 4545 1446 4892 1446 c
9854 1446 L
9854 19914 L
5133 18433 l
4904 18362 4739 18327 4633 18327 c
4463 18327 4304 18397 4163 18544 c
4016 18686 3945 18856 3945 19050 c
3945 19227 4004 19385 4116 19532 c
4210 19626 4398 19720 4686 19826 c
11301 21914 L
@c
F
%CHAR: 21167 0 (6) @t
27435 9149 m
28334 10466 29252 11442 30204 12077 c
31151 12706 32203 13023 33361 13023 c
34902 13023 36266 12383 37460 11101 c
38659 9819 39253 8237 39253 6356 c
39253 4633 38706 3057 37618 1629 c
36525 200 35019 -517 33103 -517 c
31850 -517 30686 -129 29598 635 c
28517 1405 27664 2587 27041 4186 c
26271 6174 25888 8373 25888 10783 c
25888 12600 26247 14288 26970 15846 c
27523 17051 28258 18115 29175 19027 c
30098 19938 31168 20685 32391 21267 c
33614 21843 34937 22137 36360 22137 c
37324 22137 38130 21937 38771 21549 c
39047 21378 39182 21149 39182 20861 c
39182 20655 39124 20485 38994 20350 c
38871 20220 38706 20155 38512 20155 c
38365 20155 38189 20214 37977 20326 c
37507 20555 36925 20673 36225 20673 c
33985 20673 31944 19709 30098 17786 c
28258 15863 27335 13576 27335 10919 c
27335 10542 27370 9948 27435 9149 C
@c
27764 6750 m
28199 4663 28887 3169 29822 2275 c
30757 1376 31862 929 33138 929 c
34426 929 35525 1435 36436 2440 c
37348 3440 37806 4751 37806 6356 c
37806 7861 37348 9108 36431 10095 c
35508 11083 34473 11577 33309 11577 c
32197 11577 31121 11101 30092 10148 c
29399 9513 28628 8384 27764 6750 C
@c
F
T
@rax 99.30756 721.59761 116.73269 727.88769 @E
[0.00028346 0.00000000 0.00000000 0.00028346 99.30755542 721.75915470] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (m) @t
3998 14917 m
3998 13453 L
5227 14776 6462 15434 7702 15434 c
8449 15434 9102 15234 9666 14840 c
10225 14446 10695 13847 11077 13041 C
11718 13847 12371 14446 13029 14840 c
13694 15234 14352 15434 15023 15434 c
16063 15434 16898 15093 17521 14417 c
18333 13547 18744 12594 18744 11559 c
18744 1446 L
19967 1446 l
20308 1446 20555 1382 20702 1246 c
20855 1117 20932 941 20932 723 c
20932 517 20855 347 20702 206 c
20555 71 20308 0 19967 0 c
17292 0 L
17292 11418 l
17292 12153 17069 12765 16622 13247 c
16175 13729 15658 13970 15070 13970 c
14546 13970 13988 13770 13400 13376 c
12818 12982 12147 12200 11401 11042 C
11401 1446 L
12612 1446 l
12953 1446 13200 1382 13353 1246 c
13500 1117 13576 941 13576 723 c
13576 517 13500 347 13353 206 c
13200 71 12953 0 12612 0 c
9937 0 L
9937 11318 l
9937 12089 9713 12724 9260 13223 c
8808 13723 8296 13970 7732 13970 c
7220 13970 6709 13805 6203 13470 c
5503 13000 4768 12189 3998 11042 C
3998 1446 L
5221 1446 l
5562 1446 5809 1382 5962 1246 c
6109 1117 6185 941 6185 723 c
6185 517 6109 347 5962 206 c
5809 71 5562 0 5221 0 c
1329 0 l
982 0 735 71 588 206 c
435 347 365 517 365 723 c
365 941 435 1117 588 1246 c
735 1382 982 1446 1329 1446 c
2552 1446 L
2552 13453 L
1329 13453 l
982 13453 735 13523 588 13658 c
435 13800 365 13976 365 14194 c
365 14399 435 14576 588 14711 c
735 14846 982 14917 1329 14917 c
3998 14917 L
@c
F
%CHAR: 21167 0 (s) @t
36531 13970 m
36531 14305 36601 14546 36736 14693 c
36877 14840 37048 14917 37254 14917 c
37471 14917 37654 14840 37789 14693 c
37930 14546 37995 14293 37995 13935 c
37995 11454 l
37995 11113 37930 10866 37789 10713 c
37654 10566 37471 10489 37254 10489 c
37060 10489 36895 10554 36766 10677 c
36631 10807 36554 11013 36531 11301 c
36466 11989 36107 12559 35466 13006 c
34520 13647 33279 13970 31727 13970 c
30110 13970 28852 13641 27952 12988 c
27276 12494 26935 11942 26935 11336 c
26935 10648 27341 10072 28146 9613 c
28693 9290 29740 9043 31280 8872 c
33291 8655 34684 8408 35466 8132 c
36578 7726 37407 7173 37953 6462 c
38500 5750 38771 4980 38771 4151 c
38771 2922 38183 1829 36995 870 c
35813 -88 34079 -570 31797 -570 c
29510 -570 27641 12 26182 1170 C
26182 782 26159 529 26112 412 c
26065 300 25982 200 25859 123 c
25741 41 25606 0 25459 0 c
25247 0 25077 76 24942 223 c
24801 370 24730 617 24730 964 c
24730 3945 l
24730 4292 24801 4533 24930 4686 c
25065 4833 25236 4910 25459 4910 c
25665 4910 25835 4839 25982 4692 c
26124 4551 26194 4357 26194 4116 c
26194 3587 26329 3146 26594 2793 c
26994 2240 27635 1782 28517 1423 c
29393 1058 30469 876 31745 876 c
33626 876 35025 1229 35948 1929 c
36866 2628 37324 3369 37324 4151 c
37324 5045 36860 5762 35931 6303 c
34990 6844 33620 7208 31821 7391 c
30022 7573 28734 7814 27952 8114 c
27170 8414 26565 8861 26129 9455 c
25694 10054 25471 10695 25471 11389 c
25471 12624 26082 13611 27299 14341 c
28517 15070 29969 15434 31656 15434 c
33655 15434 35278 14946 36531 13970 C
@c
F
%CHAR: 42334 0 (b) @t
47467 21620 m
47467 12024 L
49213 14299 51318 15434 53788 15434 c
55904 15434 57709 14670 59215 13135 c
60720 11601 61472 9719 61472 7491 c
61472 5245 60708 3334 59191 1776 c
57668 212 55869 -570 53788 -570 c
51265 -570 49154 570 47467 2840 C
47467 0 L
44074 0 l
43727 0 43481 71 43334 206 c
43187 347 43110 517 43110 723 c
43110 941 43187 1117 43334 1246 c
43481 1382 43727 1446 44074 1446 c
46021 1446 L
46021 20155 L
44074 20155 l
43727 20155 43481 20220 43334 20361 c
43187 20497 43110 20679 43110 20896 c
43110 21102 43187 21273 43334 21414 c
43481 21549 43727 21620 44074 21620 c
47467 21620 L
@c
60026 7426 m
60026 9249 59397 10795 58144 12065 c
56898 13335 55434 13970 53752 13970 c
52077 13970 50613 13335 49360 12065 c
48108 10795 47485 9249 47485 7426 c
47485 5597 48108 4051 49360 2781 c
50613 1511 52077 876 53752 876 c
55434 876 56898 1511 58144 2781 c
59397 4051 60026 5597 60026 7426 c
@c
F
T
@rax 260.97477 721.93039 278.39991 728.22047 @E
[0.00028346 0.00000000 0.00000000 0.00028346 260.97476211 722.09194209] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (l) @t
11318 21620 m
11318 1446 L
17004 1446 l
17357 1446 17610 1382 17762 1246 c
17909 1117 17986 941 17986 723 c
17986 517 17909 347 17762 206 c
17610 71 17357 0 17004 0 c
4186 0 l
3839 0 3592 71 3445 206 c
3298 347 3222 517 3222 723 c
3222 941 3298 1117 3445 1246 c
3592 1382 3839 1446 4186 1446 c
9872 1446 L
9872 20155 L
5703 20155 l
5356 20155 5109 20220 4951 20361 c
4798 20497 4721 20679 4721 20896 c
4721 21102 4792 21273 4945 21414 c
5092 21549 5345 21620 5703 21620 c
11318 21620 L
@c
F
%CHAR: 21167 0 (s) @t
36531 13970 m
36531 14305 36601 14546 36736 14693 c
36877 14840 37048 14917 37254 14917 c
37471 14917 37654 14840 37789 14693 c
37930 14546 37995 14293 37995 13935 c
37995 11454 l
37995 11113 37930 10866 37789 10713 c
37654 10566 37471 10489 37254 10489 c
37060 10489 36895 10554 36766 10677 c
36631 10807 36554 11013 36531 11301 c
36466 11989 36107 12559 35466 13006 c
34520 13647 33279 13970 31727 13970 c
30110 13970 28852 13641 27952 12988 c
27276 12494 26935 11942 26935 11336 c
26935 10648 27341 10072 28146 9613 c
28693 9290 29740 9043 31280 8872 c
33291 8655 34684 8408 35466 8132 c
36578 7726 37407 7173 37953 6462 c
38500 5750 38771 4980 38771 4151 c
38771 2922 38183 1829 36995 870 c
35813 -88 34079 -570 31797 -570 c
29510 -570 27641 12 26182 1170 C
26182 782 26159 529 26112 412 c
26065 300 25982 200 25859 123 c
25741 41 25606 0 25459 0 c
25247 0 25077 76 24942 223 c
24801 370 24730 617 24730 964 c
24730 3945 l
24730 4292 24801 4533 24930 4686 c
25065 4833 25236 4910 25459 4910 c
25665 4910 25835 4839 25982 4692 c
26124 4551 26194 4357 26194 4116 c
26194 3587 26329 3146 26594 2793 c
26994 2240 27635 1782 28517 1423 c
29393 1058 30469 876 31745 876 c
33626 876 35025 1229 35948 1929 c
36866 2628 37324 3369 37324 4151 c
37324 5045 36860 5762 35931 6303 c
34990 6844 33620 7208 31821 7391 c
30022 7573 28734 7814 27952 8114 c
27170 8414 26565 8861 26129 9455 c
25694 10054 25471 10695 25471 11389 c
25471 12624 26082 13611 27299 14341 c
28517 15070 29969 15434 31656 15434 c
33655 15434 35278 14946 36531 13970 C
@c
F
%CHAR: 42334 0 (b) @t
47467 21620 m
47467 12024 L
49213 14299 51318 15434 53788 15434 c
55904 15434 57709 14670 59215 13135 c
60720 11601 61472 9719 61472 7491 c
61472 5245 60708 3334 59191 1776 c
57668 212 55869 -570 53788 -570 c
51265 -570 49154 570 47467 2840 C
47467 0 L
44074 0 l
43727 0 43481 71 43334 206 c
43187 347 43110 517 43110 723 c
43110 941 43187 1117 43334 1246 c
43481 1382 43727 1446 44074 1446 c
46021 1446 L
46021 20155 L
44074 20155 l
43727 20155 43481 20220 43334 20361 c
43187 20497 43110 20679 43110 20896 c
43110 21102 43187 21273 43334 21414 c
43481 21549 43727 21620 44074 21620 c
47467 21620 L
@c
60026 7426 m
60026 9249 59397 10795 58144 12065 c
56898 13335 55434 13970 53752 13970 c
52077 13970 50613 13335 49360 12065 c
48108 10795 47485 9249 47485 7426 c
47485 5597 48108 4051 49360 2781 c
50613 1511 52077 876 53752 876 c
55434 876 56898 1511 58144 2781 c
59397 4051 60026 5597 60026 7426 c
@c
F
T
@rax 127.63871 712.08369 132.43380 718.22211 @E
[0.00028346 0.00000000 0.00000000 0.00028346 127.63870399 712.09358025] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (7) @t
15452 19497 m
15452 20155 L
5080 20155 L
5080 18880 l
5080 18533 5015 18286 4886 18139 c
4751 17992 4574 17915 4357 17915 c
4151 17915 3981 17992 3839 18139 c
3704 18286 3634 18533 3634 18880 c
3634 21620 L
16916 21620 L
16916 19309 L
11095 706 l
11001 406 10895 212 10766 112 c
10642 12 10495 -35 10336 -35 c
10131 -35 9954 35 9819 171 c
9678 312 9613 470 9613 653 c
9613 770 9649 929 9713 1135 c
15452 19497 L
@c
F
T
@rax 230.29937 711.61427 241.30460 718.03587 @E
[0.00028346 0.00000000 0.00000000 0.00028346 230.29936165 711.76079286] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (2) @t
4357 1446 m
15469 1446 L
15469 2017 l
15469 2358 15540 2605 15675 2758 c
15810 2905 15993 2981 16210 2981 c
16416 2981 16587 2905 16728 2758 c
16863 2605 16933 2358 16933 2017 c
16933 0 L
2946 0 L
2946 2134 L
5886 4780 8743 7467 11524 10195 c
12824 11471 13711 12406 14194 13006 c
14676 13600 15005 14129 15187 14582 c
15364 15034 15452 15493 15452 15952 c
15452 17192 14952 18286 13952 19238 c
12953 20197 11748 20673 10336 20673 c
9072 20673 7955 20308 6979 19585 c
6003 18862 5368 17968 5080 16898 c
5015 16622 4927 16445 4821 16363 c
4686 16251 4527 16193 4339 16193 c
4145 16193 3981 16257 3851 16393 c
3716 16522 3651 16681 3651 16863 c
3651 17416 3951 18162 4557 19103 c
5156 20044 5991 20785 7056 21326 c
8114 21866 9202 22137 10319 22137 c
12124 22137 13670 21508 14970 20255 c
16269 19003 16916 17586 16916 16004 c
16916 15334 16804 14723 16587 14170 c
16369 13611 15999 13000 15475 12341 c
14952 11683 14017 10683 12659 9355 c
9260 6003 6497 3398 4357 1552 C
4357 1446 L
@c
F
%CHAR: 21167 0 (3) @t
34726 11765 m
36054 11165 37071 10348 37771 9313 c
38471 8273 38824 7191 38824 6062 c
38824 4327 38118 2799 36713 1470 c
35308 147 33544 -517 31433 -517 c
30192 -517 28905 -253 27576 276 c
26241 806 25312 1346 24783 1893 c
24612 2081 24524 2275 24524 2481 c
24524 2663 24595 2822 24724 2963 c
24854 3099 25012 3169 25200 3169 c
25383 3169 25589 3081 25818 2910 c
27599 1593 29481 929 31468 929 c
33144 929 34549 1458 35678 2505 c
36813 3557 37377 4727 37377 6009 c
37377 6873 37095 7720 36542 8543 c
35984 9372 35184 10025 34138 10501 c
33091 10977 32039 11213 30968 11213 c
30622 11213 30375 11277 30228 11412 c
30081 11542 30004 11718 30004 11936 c
30004 12142 30075 12318 30222 12453 c
30363 12594 30580 12659 30863 12659 c
32103 12641 l
33403 12641 34473 13041 35319 13835 c
36160 14623 36583 15546 36583 16587 c
36583 17668 36143 18621 35255 19450 c
34373 20273 33220 20691 31797 20691 c
30798 20691 29875 20514 29040 20173 c
28199 19826 27529 19356 27023 18756 c
26841 18527 26700 18386 26600 18339 c
26506 18286 26394 18256 26265 18256 c
26071 18256 25906 18327 25765 18456 c
25630 18592 25559 18744 25559 18933 c
25559 19391 26059 19967 27058 20673 c
28446 21649 30028 22137 31797 22137 c
33620 22137 35119 21584 36290 20491 c
37460 19391 38048 18086 38048 16569 c
38048 15605 37765 14693 37207 13835 c
36642 12971 35813 12283 34726 11765 C
@c
F
T
@rax 135.97313 712.27984 140.85156 718.70145 @E
[0.00028346 0.00000000 0.00000000 0.00028346 135.97312888 712.42636764] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (8) @t
13559 11213 m
14764 10630 15675 9854 16287 8896 c
16904 7938 17210 6909 17210 5803 c
17210 4092 16563 2611 15281 1358 c
13994 112 12430 -517 10595 -517 c
8755 -517 7197 112 5909 1358 c
4621 2611 3981 4092 3981 5803 c
3981 6897 4286 7920 4904 8878 c
5515 9837 6432 10619 7649 11213 C
6591 11824 5821 12453 5339 13112 c
4674 14041 4339 15070 4339 16193 c
4339 17774 4951 19162 6174 20350 c
7397 21543 8872 22137 10595 22137 c
12330 22137 13805 21543 15023 20350 c
16240 19162 16845 17774 16845 16193 c
16845 15070 16516 14047 15846 13123 c
15375 12459 14611 11824 13559 11213 C
@c
15364 16140 m
15364 17380 14905 18445 13976 19338 c
13053 20226 11918 20673 10578 20673 c
9243 20673 8114 20220 7191 19326 c
6268 18433 5803 17374 5803 16157 c
5803 15034 6262 14047 7173 13206 c
8085 12359 9219 11936 10578 11936 c
11942 11936 13082 12359 13994 13206 c
14911 14047 15364 15028 15364 16140 c
@c
15763 5768 m
15763 7044 15269 8155 14282 9096 c
13294 10037 12065 10507 10595 10507 c
9125 10507 7896 10037 6909 9096 c
5921 8155 5427 7050 5427 5786 c
5427 4480 5921 3340 6914 2375 c
7908 1411 9137 929 10595 929 c
12053 929 13276 1411 14270 2375 c
15264 3340 15763 4474 15763 5768 c
@c
F
T
@rax 244.30592 711.76082 255.10592 718.03587 @E
[0.00028346 0.00000000 0.00000000 0.00028346 244.30591232 711.76079286] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (2) @t
4357 1446 m
15469 1446 L
15469 2017 l
15469 2358 15540 2605 15675 2758 c
15810 2905 15993 2981 16210 2981 c
16416 2981 16587 2905 16728 2758 c
16863 2605 16933 2358 16933 2017 c
16933 0 L
2946 0 L
2946 2134 L
5886 4780 8743 7467 11524 10195 c
12824 11471 13711 12406 14194 13006 c
14676 13600 15005 14129 15187 14582 c
15364 15034 15452 15493 15452 15952 c
15452 17192 14952 18286 13952 19238 c
12953 20197 11748 20673 10336 20673 c
9072 20673 7955 20308 6979 19585 c
6003 18862 5368 17968 5080 16898 c
5015 16622 4927 16445 4821 16363 c
4686 16251 4527 16193 4339 16193 c
4145 16193 3981 16257 3851 16393 c
3716 16522 3651 16681 3651 16863 c
3651 17416 3951 18162 4557 19103 c
5156 20044 5991 20785 7056 21326 c
8114 21866 9202 22137 10319 22137 c
12124 22137 13670 21508 14970 20255 c
16269 19003 16916 17586 16916 16004 c
16916 15334 16804 14723 16587 14170 c
16369 13611 15999 13000 15475 12341 c
14952 11683 14017 10683 12659 9355 c
9260 6003 6497 3398 4357 1552 C
4357 1446 L
@c
F
%CHAR: 21167 0 (4) @t
34449 6044 m
24854 6044 L
24854 7720 L
32897 21620 L
35913 21620 L
35913 7491 L
37119 7491 l
37471 7491 37724 7426 37877 7297 c
38024 7161 38100 6985 38100 6767 c
38100 6562 38024 6391 37877 6250 c
37724 6115 37471 6044 37119 6044 c
35913 6044 L
35913 1446 L
37119 1446 l
37471 1446 37724 1382 37877 1246 c
38024 1117 38100 941 38100 723 c
38100 517 38024 347 37877 206 c
37724 71 37471 0 37119 0 c
31745 0 l
31386 0 31133 71 30986 206 c
30839 347 30763 517 30763 723 c
30763 941 30839 1117 30986 1246 c
31133 1382 31386 1446 31745 1446 c
34449 1446 L
34449 6044 L
@c
34449 7491 m
34449 20155 L
33691 20155 L
26371 7491 L
34449 7491 L
@c
F
T
@rax 136.30592 729.09524 141.18917 735.30709 @E
[0.00028346 0.00000000 0.00000000 0.00028346 136.30591627 729.09521742] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (1) @t
11301 21914 m
11301 1446 L
16263 1446 l
16604 1446 16851 1382 17004 1246 c
17151 1117 17227 941 17227 723 c
17227 517 17151 347 17004 206 c
16851 71 16604 0 16263 0 c
4892 0 l
4545 0 4298 71 4151 206 c
4004 347 3928 517 3928 723 c
3928 941 4004 1117 4151 1246 c
4298 1382 4545 1446 4892 1446 c
9854 1446 L
9854 19914 L
5133 18433 l
4904 18362 4739 18327 4633 18327 c
4463 18327 4304 18397 4163 18544 c
4016 18686 3945 18856 3945 19050 c
3945 19227 4004 19385 4116 19532 c
4210 19626 4398 19720 4686 19826 c
11301 21914 L
@c
F
T
@rax 245.63707 728.28312 250.64220 734.70472 @E
[0.00028346 0.00000000 0.00000000 0.00028346 245.63706188 728.42964265] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (3) @t
13559 11765 m
14887 11165 15904 10348 16604 9313 c
17304 8273 17657 7191 17657 6062 c
17657 4327 16951 2799 15546 1470 c
14141 147 12377 -517 10266 -517 c
9025 -517 7738 -253 6409 276 c
5074 806 4145 1346 3616 1893 c
3445 2081 3357 2275 3357 2481 c
3357 2663 3428 2822 3557 2963 c
3687 3099 3845 3169 4033 3169 c
4216 3169 4422 3081 4651 2910 c
6432 1593 8314 929 10301 929 c
11977 929 13382 1458 14511 2505 c
15646 3557 16210 4727 16210 6009 c
16210 6873 15928 7720 15375 8543 c
14817 9372 14017 10025 12971 10501 c
11924 10977 10872 11213 9801 11213 c
9455 11213 9208 11277 9061 11412 c
8914 11542 8837 11718 8837 11936 c
8837 12142 8908 12318 9055 12453 c
9196 12594 9413 12659 9696 12659 c
10936 12641 l
12236 12641 13306 13041 14152 13835 c
14993 14623 15416 15546 15416 16587 c
15416 17668 14976 18621 14088 19450 c
13206 20273 12053 20691 10630 20691 c
9631 20691 8708 20514 7873 20173 c
7032 19826 6362 19356 5856 18756 c
5674 18527 5533 18386 5433 18339 c
5339 18286 5227 18256 5098 18256 c
4904 18256 4739 18327 4598 18456 c
4463 18592 4392 18744 4392 18933 c
4392 19391 4892 19967 5891 20673 c
7279 21649 8861 22137 10630 22137 c
12453 22137 13952 21584 15123 20491 c
16293 19391 16881 18086 16881 16569 c
16881 15605 16598 14693 16040 13835 c
15475 12971 14646 12283 13559 11765 C
@c
F
T
@rax 175.96658 711.94706 186.97181 718.30545 @E
[0.00028346 0.00000000 0.00000000 0.00028346 175.96657624 712.09358025] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (1) @t
11301 21914 m
11301 1446 L
16263 1446 l
16604 1446 16851 1382 17004 1246 c
17151 1117 17227 941 17227 723 c
17227 517 17151 347 17004 206 c
16851 71 16604 0 16263 0 c
4892 0 l
4545 0 4298 71 4151 206 c
4004 347 3928 517 3928 723 c
3928 941 4004 1117 4151 1246 c
4298 1382 4545 1446 4892 1446 c
9854 1446 L
9854 19914 L
5133 18433 l
4904 18362 4739 18327 4633 18327 c
4463 18327 4304 18397 4163 18544 c
4016 18686 3945 18856 3945 19050 c
3945 19227 4004 19385 4116 19532 c
4210 19626 4398 19720 4686 19826 c
11301 21914 L
@c
F
%CHAR: 21167 0 (5) @t
27764 20155 m
27764 13076 L
28617 13429 29428 13700 30210 13876 c
30992 14052 31733 14141 32432 14141 c
34249 14141 35766 13506 36989 12230 c
38212 10954 38824 9278 38824 7203 c
38824 4904 38136 3046 36754 1617 c
35378 194 33655 -517 31586 -517 c
30222 -517 28905 -212 27646 394 c
26747 823 25935 1346 25200 1981 c
24759 2358 24542 2675 24542 2928 c
24542 3134 24612 3310 24748 3451 c
24889 3598 25048 3669 25230 3669 c
25430 3669 25636 3563 25853 3357 c
27588 1740 29475 929 31521 929 c
33209 929 34602 1505 35707 2663 c
36807 3816 37360 5350 37360 7267 c
37360 8902 36883 10213 35931 11207 c
34978 12200 33767 12694 32297 12694 c
30792 12694 29287 12300 27782 11507 c
27417 11324 27158 11230 27006 11230 c
26800 11230 26635 11301 26506 11436 c
26382 11577 26318 11771 26318 12024 c
26318 21620 L
36413 21620 l
36754 21620 37001 21549 37154 21414 c
37301 21273 37377 21096 37377 20879 c
37377 20673 37301 20497 37154 20361 c
37001 20220 36754 20155 36413 20155 c
27764 20155 L
@c
F
T
@rax 283.98132 711.61427 294.86466 718.03587 @E
[0.00028346 0.00000000 0.00000000 0.00028346 283.98131245 711.76079286] @tm
 0 O 0 @g
0.00 0.00 0.00 1.00 k
e

% FontChange:/_CourierNew 35278.00000 z
%CHAR: 0 0 (3) @t
13559 11765 m
14887 11165 15904 10348 16604 9313 c
17304 8273 17657 7191 17657 6062 c
17657 4327 16951 2799 15546 1470 c
14141 147 12377 -517 10266 -517 c
9025 -517 7738 -253 6409 276 c
5074 806 4145 1346 3616 1893 c
3445 2081 3357 2275 3357 2481 c
3357 2663 3428 2822 3557 2963 c
3687 3099 3845 3169 4033 3169 c
4216 3169 4422 3081 4651 2910 c
6432 1593 8314 929 10301 929 c
11977 929 13382 1458 14511 2505 c
15646 3557 16210 4727 16210 6009 c
16210 6873 15928 7720 15375 8543 c
14817 9372 14017 10025 12971 10501 c
11924 10977 10872 11213 9801 11213 c
9455 11213 9208 11277 9061 11412 c
8914 11542 8837 11718 8837 11936 c
8837 12142 8908 12318 9055 12453 c
9196 12594 9413 12659 9696 12659 c
10936 12641 l
12236 12641 13306 13041 14152 13835 c
14993 14623 15416 15546 15416 16587 c
15416 17668 14976 18621 14088 19450 c
13206 20273 12053 20691 10630 20691 c
9631 20691 8708 20514 7873 20173 c
7032 19826 6362 19356 5856 18756 c
5674 18527 5533 18386 5433 18339 c
5339 18286 5227 18256 5098 18256 c
4904 18256 4739 18327 4598 18456 c
4463 18592 4392 18744 4392 18933 c
4392 19391 4892 19967 5891 20673 c
7279 21649 8861 22137 10630 22137 c
12453 22137 13952 21584 15123 20491 c
16293 19391 16881 18086 16881 16569 c
16881 15605 16598 14693 16040 13835 c
15475 12971 14646 12283 13559 11765 C
@c
F
%CHAR: 21167 0 (1) @t
32468 21914 m
32468 1446 L
37430 1446 l
37771 1446 38018 1382 38171 1246 c
38318 1117 38394 941 38394 723 c
38394 517 38318 347 38171 206 c
38018 71 37771 0 37430 0 c
26059 0 l
25712 0 25465 71 25318 206 c
25171 347 25095 517 25095 723 c
25095 941 25171 1117 25318 1246 c
25465 1382 25712 1446 26059 1446 c
31021 1446 L
31021 19914 L
26300 18433 l
26071 18362 25906 18327 25800 18327 c
25630 18327 25471 18397 25330 18544 c
25183 18686 25112 18856 25112 19050 c
25112 19227 25171 19385 25283 19532 c
25377 19626 25565 19720 25853 19826 c
32468 21914 L
@c
F
T
%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel8Dict
%%EOF
