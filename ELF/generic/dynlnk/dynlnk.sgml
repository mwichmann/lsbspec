<PART ID="tocdynlnk">
<TITLE>Dynamic Linking</TITLE>

<CHAPTER ID=dynlnk>
<TITLE>Program Loading and Dynamic Linking</TITLE>

<PARA>
LSB-conforming implementations shall support the object file information and
system actions that create running programs as specified in the System V
Application Binary Interface, Edition 4.1 and the System V Application Binary
Interface - DRAFT - April 29, 1998 and as supplemented by this document and
an architecture specific LSB specification.
</PARA>

<PARA>
Any shared object that is loaded must contain sufficient DT_NEEDED records to
satisfy the symbols on the shared library.
</PARA>
</CHAPTER>

<CHAPTER ID=DynamicSection>
<TITLE>Dynamic Entries</TITLE>
<PARA>
</PARA>
<SECT1 ID=dynsectent>
<TITLE>ELF Dynamic Entries</TITLE>
<PARA>
The following dynamic entries are defined in the System V 
Application Binary Interface, Edition 4.1.
<TABLE>
<TITLE>ELF Dynamic Entries</TITLE>
<TGROUP COLS=4>
<TBODY>
<ROW><ENTRY>DT_BIND_NOW</ENTRY><ENTRY>DT_DEBUG</ENTRY><ENTRY>DT_FINI</ENTRY><ENTRY>DT_HASH</ENTRY></ROW>
<ROW><ENTRY>DT_HIPROC</ENTRY><ENTRY>DT_INIT</ENTRY><ENTRY>DT_JMPREL</ENTRY><ENTRY>DT_LOPROC</ENTRY></ROW>
<ROW><ENTRY>DT_NEEDED</ENTRY><ENTRY>DT_NULL</ENTRY><ENTRY>DT_PLTREL</ENTRY><ENTRY>DT_PLTRELSZ</ENTRY></ROW>
<ROW><ENTRY>DT_REL</ENTRY><ENTRY>DT_RELA</ENTRY><ENTRY>DT_RELAENT</ENTRY><ENTRY>DT_RELASZ</ENTRY></ROW>
<ROW><ENTRY>DT_RELENT</ENTRY><ENTRY>DT_RELSZ</ENTRY><ENTRY>DT_RPATH</ENTRY><ENTRY>DT_SONAME</ENTRY></ROW>
<ROW><ENTRY>DT_STRSZ</ENTRY><ENTRY>DT_STRTAB</ENTRY><ENTRY>DT_SYMBOLIC</ENTRY><ENTRY>DT_SYMENT</ENTRY></ROW>
<ROW><ENTRY>DT_SYMTAB</ENTRY><ENTRY>DT_TEXTREL</ENTRY></ROW>
</TBODY>

</TGROUP>
</TABLE>
</PARA>
</SECT1>
<SECT1 ID=lindynsectent>
<TITLE>Linux Dynamic Entries</TITLE>
<PARA>
The following dynamic entries are defined here.
<TABLE>
<TITLE>Linux Dynamic Entries</TITLE>
<TGROUP COLS=2>
<TBODY>
<ROW><ENTRY>DT_ADDRRNGLO</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>DT_AUXILIARY</ENTRY><ENTRY>Shared object to load before self</ENTRY></ROW>
<ROW><ENTRY>DT_FILTER</ENTRY><ENTRY>Shared object to get values from</ENTRY></ROW>
<ROW><ENTRY>DT_FINI_ARRAY</ENTRY><ENTRY>Array with addresses of fini fct</ENTRY></ROW>
<ROW><ENTRY>DT_FINI_ARRAYSZ</ENTRY><ENTRY>Size in bytes of DT_FINI_ARRAY</ENTRY></ROW>
<ROW><ENTRY>DT_FLAGS_1</ENTRY><ENTRY>State flags, see DF_1_* below</ENTRY></ROW>
<ROW><ENTRY>DT_HIOS</ENTRY><ENTRY>End of OS-specific</ENTRY></ROW>
<ROW><ENTRY>DT_INIT_ARRAY</ENTRY><ENTRY>Array with addresses of init fct</ENTRY></ROW>
<ROW><ENTRY>DT_INIT_ARRAYSZ</ENTRY><ENTRY>Size in bytes of DT_INIT_ARRAY</ENTRY></ROW>
<ROW><ENTRY>DT_LOOS</ENTRY><ENTRY>Start of OS-specific</ENTRY></ROW>
<ROW><ENTRY>DT_NUM</ENTRY><ENTRY>Number used</ENTRY></ROW>
<ROW><ENTRY>DT_POSFLAG_1</ENTRY><ENTRY>Flags for DT_* entries, effecting he following DT_* entry</ENTRY></ROW>
<ROW><ENTRY>DT_SYMINENT</ENTRY><ENTRY>Entry size of syminfo</ENTRY></ROW>
<ROW><ENTRY>DT_SYMINFO</ENTRY><ENTRY>syminfo table</ENTRY></ROW>
<ROW><ENTRY>DT_SYMINSZ</ENTRY><ENTRY>Size of syminfo table (in bytes)</ENTRY></ROW>
<ROW><ENTRY>DT_VALRNGHI</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>DT_VALRNGLO</ENTRY><ENTRY></ENTRY></ROW>
<ROW><ENTRY>DT_VERDEF</ENTRY><ENTRY>Address of version definition table</ENTRY></ROW>
<ROW><ENTRY>DT_VERDEFNUM</ENTRY><ENTRY>Number of version definitions</ENTRY></ROW>
<ROW><ENTRY>DT_VERNEED</ENTRY><ENTRY>Address of table with needed versions</ENTRY></ROW>
<ROW><ENTRY>DT_VERNEEDNUM</ENTRY><ENTRY>Number of needed versions</ENTRY></ROW>
<ROW><ENTRY>DT_VERSYM</ENTRY><ENTRY>GNU Symbol versioning</ENTRY></ROW>
</TBODY>

</TGROUP>
</TABLE>
</PARA>
</SECT1>
</CHAPTER>

<CHAPTER ID=ProgramInterpreter>
<TITLE>
Program Interpreter
</TITLE>
<PARA>
</PARA>
<SECT1 ID=proginterp>
<TITLE>
</TITLE>
<PARA>
The LSB specifies the Program Interpreter to be
<ITEMIZEDLIST>
<LISTITEM><SCREEN>/lib/lsb/ld-lsb.so.1</SCREEN></LISTITEM>
</ITEMIZEDLIST>
</PARA>
</SECT1>
</CHAPTER>

</PART>
