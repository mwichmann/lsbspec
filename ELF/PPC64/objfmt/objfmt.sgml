<chapter id="tocobjformat">
<title>Object Format</title>

<sect1 id=objfmt>
<title>Introduction</title>
<para>
LSB-conforming implementations shall support the
Executable and Linking Format (ELF) object file format,
as defined by the following documents:
<itemizedlist mark=bullet>
<listitem>
<para>
<xref linkend="std.gABI41">
</para>
</listitem>
<listitem>
<para>
<xref linkend="std.ABIupdate">
</para>
</listitem>
<listitem>
<para>
<xref linkend="std.PPC64.ABI">
</para>
</listitem>
<listitem>
<para>
<xref linkend="std.LSB"> 
</para>
</listitem>
<listitem>
<para>
this document
</para>
</listitem>
</itemizedlist>
</para>

<para>
LSB-conforming implementations
need not support tags related functionality. LSB-conforming applications
must not rely on tags related functionality.
</para>
</sect1>

<SECT1 ID=elfheader>
<TITLE>ELF Header</TITLE>
<PARA>
LSB-conforming applications shall use the ELF header as defined in
<xref linkend="std.PPC64.ABI">, Chapter 4.
</PARA>
</SECT1>

<SECT1 ID=specialsections>
<TITLE>Special Sections</TITLE>
<PARA>
The following sections are defined in the <xref linkend="std.PPC64.ABI">.
<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mksectiontable -->
<TABLE>
<TITLE>ELF Special Sections</TITLE>
<TGROUP COLS=3>
<THEAD>
<ROW>
<ENTRY ALIGN=center>Name</ENTRY><ENTRY ALIGN=center>Type</ENTRY><ENTRY ALIGN=center>Attributes</ENTRY></ROW>
</THEAD>
<TBODY>
<ROW><ENTRY>.glink</ENTRY><ENTRY>SHT_PROGBITS</ENTRY><ENTRY>SHF_ALLOC+SHF_EXECINSTR</ENTRY></ROW>
<ROW><ENTRY>.got</ENTRY><ENTRY>SHT_PROGBITS</ENTRY><ENTRY>SHF_ALLOC+SHF_WRITE</ENTRY></ROW>
<ROW><ENTRY>.plt</ENTRY><ENTRY>SHT_NOBITS</ENTRY><ENTRY>SHF_ALLOC+SHF_WRITE</ENTRY></ROW>
<ROW><ENTRY>.sbss</ENTRY><ENTRY>SHT_NOBITS</ENTRY><ENTRY>SHF_ALLOC+SHF_WRITE</ENTRY></ROW>
<ROW><ENTRY>.sdata</ENTRY><ENTRY>SHT_PROGBITS</ENTRY><ENTRY>SHF_ALLOC+SHF_WRITE</ENTRY></ROW>
<ROW><ENTRY>.toc</ENTRY><ENTRY>SHT_PROGBITS</ENTRY><ENTRY>SHF_ALLOC+SHF_WRITE</ENTRY></ROW>
<ROW><ENTRY>.tocbss</ENTRY><ENTRY>SHT_NOBITS</ENTRY><ENTRY>SHF_ALLOC+SHF_WRITE</ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<VARIABLELIST>
<VARLISTENTRY><TERM>.glink</TERM><LISTITEM><PARA>This section may be used to hold the global linkage table which aids the procedure linkage table. See Procedure Linkage Table in Chapter 5 of the processor supplement for more information.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM>.got</TERM><LISTITEM><PARA>This section may be used to hold the Global Offset Table, or GOT.  See The Toc Section and Coding Examples in Chapter 3 and Global Offset Table in Chapter 5 of the processor supplement for more information.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM>.plt</TERM><LISTITEM><PARA>This section holds the procedure linkage table. See Procedure Linkage Table in Chapter 5 of the processor supplement for more information.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM>.sbss</TERM><LISTITEM><PARA>This section holds uninitialized data that contribute to the program's memory image. The system initializes the data with zeroes when the program begins to run.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM>.sdata</TERM><LISTITEM><PARA>This section holds initialized small data that contribute to the program memory image.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM>.toc</TERM><LISTITEM><PARA>This section may be used to hold the initialized Table of Contents, or TOC.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM>.tocbss</TERM><LISTITEM><PARA>This section may be used to hold the uninitialized portions of the TOC.  This data may also be stored as zero-initialized data in a .toc section.</PARA></LISTITEM></VARLISTENTRY>
</VARIABLELIST>
<!-- End of text generated from database -->

</PARA>
<SECT2>
<TITLE>Additional Special Sections</TITLE>
<PARA>
The following additional sections are defined here.
<!-- Start of generated text - do not edit! -->
<!-- generated from the LSB specification database by mksectiontable -->
<TABLE>
<TITLE>Additional Special Sections</TITLE>
<TGROUP COLS=3>
<THEAD>
<ROW>
<ENTRY ALIGN=center>Name</ENTRY><ENTRY ALIGN=center>Type</ENTRY><ENTRY ALIGN=center>Attributes</ENTRY></ROW>
</THEAD>
<TBODY>
<ROW><ENTRY>.branch_lt</ENTRY><ENTRY>SHT_PROGBITS</ENTRY><ENTRY>SHF_ALLOC+SHF_WRITE</ENTRY></ROW>
<ROW><ENTRY>.opd</ENTRY><ENTRY>SHT_PROGBITS</ENTRY><ENTRY>SHF_ALLOC+SHF_WRITE</ENTRY></ROW>
<ROW><ENTRY>.rela.dyn</ENTRY><ENTRY>SHT_RELA</ENTRY><ENTRY>SHF_ALLOC</ENTRY></ROW>
<ROW><ENTRY>.rela.plt</ENTRY><ENTRY>SHT_RELA</ENTRY><ENTRY>SHF_ALLOC</ENTRY></ROW>
<ROW><ENTRY>.toc1</ENTRY><ENTRY>SHT_PROGBITS</ENTRY><ENTRY>SHF_ALLOC+SHF_WRITE</ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<VARIABLELIST>
<VARLISTENTRY><TERM>.branch_lt</TERM><LISTITEM><PARA>This section holds destination addresses for very long branches.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM>.opd</TERM><LISTITEM><PARA>This section contains the official procedure descriptors. A pointer to a function shall reference a procedure descriptor in this section.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM>.rela.dyn</TERM><LISTITEM><PARA>This section holds RELA type relocation information for all sections of a shared library except the PLT.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM>.rela.plt</TERM><LISTITEM><PARA>This section holds RELA type relocation information for the PLT section of a shared library or dynamically linked application.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM>.toc1</TERM><LISTITEM><PARA>This section holds the second level TOC information.</PARA></LISTITEM></VARLISTENTRY>
</VARIABLELIST>
<!-- End of text generated from database -->

</PARA>
</SECT2>

</SECT1>

<SECT1 ID=toc>
<TITLE>TOC</TITLE>
<PARA>
LSB-conforming applications shall use the Table of Contents (TOC) as defined in
<xref linkend="std.PPC64.ABI">, Chapter 4.
</PARA>
</SECT1>

<SECT1 ID=symboltable>
<TITLE>Symbol Table</TITLE>

<PARA>
LSB-conforming applications shall use the Symbol Table as defined in
Chapter 4 of the <xref linkend="std.PPC64.ABI">.

</PARA>

<SECT2 ID="symbolvalues">
<TITLE>Symbol Values</TITLE>
<PARA>
See Chapter 4 of the <xref linkend="std.PPC64.ABI">.
</PARA>
</SECT2>

</SECT1>

<SECT1 ID=relocation>
<TITLE>Relocation</TITLE>

<PARA>
LSB-conforming applications shall use Relocations as defined in
Chapter 4 of the <xref linkend="std.PPC64.ABI">.
</PARA>

<SECT2 ID="relocationtypes">
<TITLE>Relocation Types</TITLE>
<PARA>
See Chapter 4 of the <xref linkend="std.PPC64.ABI">.
</PARA>
</SECT2>

</SECT1>

</CHAPTER>
