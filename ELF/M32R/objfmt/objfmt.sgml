<PART ID="tocobjformat">
<TITLE>Object Format</TITLE>
<PARTINTRO>
<PARA>

LSB-conforming implementations shall support an object file ,
called Executable and Linking Format (ELF) as defined by the <XREF
LINKEND="std.M32R.ABI"> and as supplemented by the Linux Standard
Base Specification and this document. LSB-conforming implementations
need not support tags related functionality. LSB-conforming applications
must not rely on tags related functionality.

</PARA>
</PARTINTRO>

<CHAPTER ID=elfheader>
<TITLE>ELF Header</TITLE>
<PARA>
LSB-conforming applications shall use the ELF header as defined in
<XREF LINKEND="std.M32R.ABI">, Chapter 4.
</PARA>
</CHAPTER>

<CHAPTER ID=specialsections>
<TITLE>Special Sections</TITLE>
<PARA>
The following sections are defined in the <XREF LINKEND="std.M32R.ABI">.
<!-- Start of text generated from database -->
<!-- generated from the LSB specification database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mksectiontable,v 1.10 2002/06/20 20:35:42 anderson Exp 0 -->
<!--    at Sat Apr 16 10:34:20 2005 -->
<TABLE>
<TITLE>ELF Special Sections</TITLE>
<TGROUP COLS=3>
<THEAD>
<ROW>
<ENTRY ALIGN=center>Name</ENTRY><ENTRY ALIGN=center>Type</ENTRY><ENTRY ALIGN=center>Attributes</ENTRY></ROW>
</THEAD>
<TBODY>
<ROW><ENTRY>.got</ENTRY><ENTRY>SHT_PROGBITS</ENTRY><ENTRY>SHF_ALLOC+SHF_WRITE</ENTRY></ROW>
<ROW><ENTRY>.plt</ENTRY><ENTRY>SHT_NOBITS</ENTRY><ENTRY>SHF_ALLOC+SHF_WRITE</ENTRY></ROW>
<ROW><ENTRY>.sbss</ENTRY><ENTRY>SHT_NOBITS</ENTRY><ENTRY>SHF_ALLOC+SHF_WRITE</ENTRY></ROW>
</TBODY>
</TGROUP>
</TABLE>
<VARIABLELIST>
<VARLISTENTRY><TERM>.got</TERM><LISTITEM><PARA>This section may be used to hold the Global Offset Table, or GOT.  See The Toc Section and Coding Examples in Chapter 3 and Global Offset Table in Chapter 5 of the processor supplement for more information.</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM>.plt</TERM><LISTITEM><PARA>This section holds the procedure linkage table. See Procedure Linkage Table in Chapter 5 of the processor supplement for more information.
</PARA></LISTITEM></VARLISTENTRY>
<VARLISTENTRY><TERM>.sbss</TERM><LISTITEM><PARA>This section holds uninitialized data that contribute to the program's memory image. The system initializes the data with zeroes when the program begins to run.	</PARA></LISTITEM></VARLISTENTRY>
</VARIABLELIST>
<!-- End of text generated from database -->
<!--    by $Header: /cvsroot/lsb/lsbspec/mksectiontable,v 1.10 2002/06/20 20:35:42 anderson Exp 0 -->

</PARA>
</CHAPTER>

<CHAPTER ID=symboltable>
<TITLE>Symbol Table</TITLE>

<PARA>
LSB-conforming applications shall use the Symbol Table as defined in
Chapter 4 of the <XREF LINKEND="std.M32R.ABI">.

</PARA>

<SECT1 ID="symbolvalues">
<TITLE>Symbol Values</TITLE>
<PARA>
</PARA>
</SECT1>

</CHAPTER>

<CHAPTER ID=relocation>
<TITLE>Relocation</TITLE>

<PARA>
LSB-conforming applications shall use Relocations as defined in
Chapter 4 of the <XREF LINKEND="std.M32R.ABI">.
</PARA>

<SECT1 ID="relocationtypes">
<TITLE>Relocation Types</TITLE>
<PARA>
</PARA>
</SECT1>

</CHAPTER>

</PART>
