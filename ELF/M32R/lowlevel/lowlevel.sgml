<PART ID="lowlevel">
<TITLE>Low Level System Information</TITLE>

<CHAPTER id=machineinterface>
<TITLE>Machine Interface</TITLE>

<SECT1 ID="processorarch">
<TITLE>Processor Architecture</TITLE>
<PARA>

The M32R Architecture is specified by the following documents:

<ITEMIZEDLIST MARK=bullet>
<LISTITEM><PARA>
<XREF LINKEND="std.M32R.ABI">
</PARA></LISTITEM>
<LISTITEM><PARA>
<XREF LINKEND="std.M32R.Arch">
</PARA></LISTITEM>
</ITEMIZEDLIST>
</PARA>
<PARA>

Only the features of the M32R processor instruction set may be assumed
to be present. An application is responsible for determining
if any additional instruction set features are available before
using those additional features. If a feature is not present, then the
application may not use it.

</PARA>
<PARA>
Only instructions which do not require elevated privileges may be used.
</PARA>
<PARA>
Applications may not make system calls directly. The interfaces in the
C library must be used instead.
</PARA>
<PARA>
Applications conforming to this specification must provide feedback to the
user if a feature that is required for correct execution of the application
is not present. Applications conforming to this specification should attempt
to execute in a diminished capacity if a required feature is not present.
</PARA>
<PARA>
This specification does not provide any performance guarantees of a conforming
system. A system conforming to this specification may be implemented in either
hardware or software.
</PARA>

</SECT1>

<SECT1 ID="datarepresentation">
<TITLE>Data Representation</TITLE>
<PARA>

LSB-conforming applications shall use the data representation as
defined in Chapter 3 of the <XREF LINKEND="std.M32R.ABI">.

</PARA>
</SECT1>

<SECT1 ID="byteordering">
<TITLE>Byte Ordering</TITLE>
<PARA>
LSB-conforming applications shall use big-endian byte ordering.
LSB-conforming implementations may support little-endian applications.
</PARA>
</SECT1>
<SECT1 ID="fundamentaltyes">
<TITLE>Fundamental Types</TITLE>
<PARA>

LSB-conforming applications shall use the fundamental types as
defined in Chapter 3 of the <XREF LINKEND="std.M32R.ABI">.

</PARA>

<PARA>
LSB-conforming applications shall not use the long double fundamental
type.
</PARA>


</SECT1>
<SECT1 ID="aggregatesandunions">
<TITLE>Aggregates and Unions</TITLE>
<PARA></PARA>
</SECT1>

<SECT1 ID="bitfields">
<TITLE>Bit Fields</TITLE>
<PARA></PARA>
</SECT1>

</CHAPTER>

<CHAPTER id=callingsequence>
<TITLE>Function Calling Sequence</TITLE>
<PARA>
LSB-conforming applications shall use the function calling sequence as defined
in Chapter 3 of the <XREF LINKEND="std.M32R.ABI">.
</PARA>

<SECT1 ID="registers">
<TITLE>Registers</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="stackframe">
<TITLE>Stack Frame</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="parameterpassing">
<TITLE>Parameter Passing</TITLE>
<PARA>
</PARA>

</SECT1>

<SECT1 ID="returnvalues">
<TITLE>Return Values</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="functiondescriptors">
<TITLE>Function Descriptors</TITLE>
<PARA>
</PARA>
</SECT1>

</CHAPTER>

<CHAPTER id=tracebacktables>
<TITLE>Traceback Tables</TITLE>
<PARA>
LSB-conforming applications shall use the traceback tables
as defined in Chapter 3 of the <XREF LINKEND="std.M32R.ABI">.
</PARA>

<SECT1 ID="mandatoryfields">
<TITLE>Mandatory Fields</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="optionalfields">
<TITLE>Optional Fields</TITLE>
<PARA>
</PARA>
</SECT1>

</CHAPTER>

<CHAPTER id=processinitialization>
<TITLE>Process Initialization</TITLE>
<PARA>
LSB-conforming applications shall use the Operating System Interfaces
as defined in Chapter 3 of the <XREF LINKEND="std.M32R.ABI">.
</PARA>

<SECT1 ID="processinitializationregisters">
<TITLE>Registers</TITLE>
<PARA>
</PARA>

</SECT1>

<SECT1 ID="processstack">
<TITLE>Process Stack</TITLE>
<PARA>
</PARA>
</SECT1>

</CHAPTER>

<CHAPTER id=codingexamples>
<TITLE>Coding Examples</TITLE>

<PARA>
LSB-conforming applications may implement fundamental operations using the
Coding Examples as defined in Chapter 3 of the <XREF LINKEND="std.M32R.ABI">.
</PARA>

<SECT1 ID="codemodeloverview">
<TITLE>Code Model Overview</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="tocsection">
<TITLE>The TOC Section</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="tocassemblylanguagesyntax">
<TITLE>TOC Assembly Language Syntax</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="functionprologueandepilogue">
<TITLE>Function Prologue and Epilogue</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="registersavingandrestoringfunctions">
<TITLE>Register Saving and Restoring Functions</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="savinggeneralregistersonly">
<TITLE>Saving General Registers Only</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="savinggeneralregistersandfloatingpointregisters">
<TITLE>Saving General Registers and Floating Point Registers</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="savingfloatingpointregistersonly">
<TITLE>Saving Floating Point Registers Only</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="saveandrestoreservices">
<TITLE>Save and Restore Services</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="dataobjects">
<TITLE>Data Objects</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="functioncalls">
<TITLE>Function Calls</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="branching">
<TITLE>Branching</TITLE>
<PARA>
</PARA>
</SECT1>

<SECT1 ID="dynamicstackspaceallocation">
<TITLE>Dynamic Stack Space Allocation</TITLE>
<PARA>
</PARA>
</SECT1>

</CHAPTER>

</PART>
