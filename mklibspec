#!/usr/bin/perl

use CGI;
use Carp;
use Mysql;

use Env qw(LSBUSER LSBDBPASSWD LSBDB LSBDBHOST);

$query = new CGI(%ARGV);

$Dbh = Mysql->connect($LSBDBHOST,$LSBDB,$LSBUSER, $LSBDBPASSWD) || die $Mysql::db_errstr;

#
# First, get & print the library info
#
$select = "SELECT * FROM Library WHERE ".
		"Library.Lname=".$Dbh->quote($query->param('Lname'));
#printf $select,"\n";
$sth = $Dbh->query($select) || die $select."\n".$Dbh->errmsg();
%entry=$sth->fetchhash;
$Lid=$entry{'Lid'};
$Lname=$entry{'Lname'};

print "<SECT1>\n";
print "<TITLE>", $Lname, "</TITLE>\n";
print "<PARA>\n";
print "</PARA>\n";
print "<TABLE>\n";
print "<TITLE></TITLE>\n";
print "<TGROUP COLS=2>\n";
print "<TBODY>\n";
print "<ROW>\n";
print "<ENTRY>Library:</ENTRY>\n";
print "<ENTRY>", $entry{'Lname'}, "</ENTRY>\n";
print "</ROW>\n";
print "<ROW>\n";
print "<ENTRY>Runtime Path:</ENTRY>\n";
print "<ENTRY>", $entry{'Lrunname'}, "</ENTRY>\n";
print "</ROW>\n";
print "<ROW>\n";
print "<ENTRY>Development Name:</ENTRY>\n";
print "<ENTRY>", $entry{'LDevname'}, "</ENTRY>\n";
print "</ROW>\n";
print "<ROW>\n";
print "<ENTRY>Header Location:</ENTRY>\n";
print "<ENTRY>", $entry{'Lheaderpath'}, "</ENTRY>\n";
print "</ROW>\n";
print "</TBODY>\n";
print "</TGROUP>\n";
print "</TABLE>\n";

#
# Second, Check for additional description text for the library
#
if(open(DESC,"<$Lname.txt" )) {
	while(<DESC>) {
		print $_;
	}
}

#
# Third, get a list of the Standards that are used by this library
#
print "<PARA>\n";
$select = "SELECT DISTINCT Sfull,Sid FROM Standard,LibGroup,Interface ";
$select.= "WHERE Sid=Istandard AND Ilibgroup=LGid ";
$select.= "AND LGlib=$Lid ORDER BY Sname";
$lsh = $Dbh->query($select) || die $select."\n".$Dbh->errmsg();
if( $lsh->numrows) {
	print "The behaviour of the interfaces in this library is specified ";
	print "by the following Standards.";
	print "<SIMPLELIST COLUMNS=1>\n";
	for(1..$lsh->numrows) {
		local(*entry);
		%entry=$lsh->fetchhash;
		# NB: Footnotes must be unique across the entire document
		print "<MEMBER>\n";
		print $entry{'Sfull'};
		printf "<FOOTNOTE ID=\"std-%d-%d\">\n",$Lid, $entry{'Sid'};
		print "<PARA>\n";
		print $entry{'Sfull'};
		print "</PARA>\n";
		print "</FOOTNOTE>\n";
		print "</MEMBER>\n";
		}
	print "</SIMPLELIST>\n";
	}
print "</PARA>\n";

#
# Fourth, get a list of the libgroups in the library
#
$select = "SELECT * FROM LibGroup WHERE LGlib=$Lid ORDER BY LGorder";
$lgh = $Dbh->query($select) || die $select."\n".$Dbh->errmsg();
for(1..$lgh->numrows) {
	local(*entry);
	local(*std);
	local(*mangle);
	%entry=$lgh->fetchhash;
	$LGid=$entry{'LGid'};
	print "<SECT2>\n";
	print "<TITLE>";
	print $entry{'LGname'};
	print "</TITLE>\n";
	print "<PARA>\n";
	print "</PARA>\n";
#
# Fifth, foreach group, make a table of the interfaces
#
	$select = "SELECT * FROM Interface ".
		  "WHERE Ilibgroup=$LGid AND Itype='F' ORDER BY Iname";
	$inh = $Dbh->query($select) || die $select."\n".$Dbh->errmsg();
	for(1..$inh->numrows) {
		%entry=$inh->fetchhash;
		$entry[$_]=$entry{'Iname'};
		$std[$_]=$entry{'Istandard'};
	}
	print "<TABLE>\n";
	print "<TITLE></TITLE>\n";
	print "<TGROUP COLS=5>\n";
	print "<TBODY>\n";
	$inc=int(($inh->numrows+4)/5);
	for(1..$inc) {
		print "<ROW>";
		printf "<ENTRY>%s", $entry[$_];
		if( $entry[$_] ) {
			printf "<FOOTNOTEREF LINKEND=\"std-%d-%d\">",
							$Lid, $std[$_];
		}
		printf "</ENTRY>";
		printf "<ENTRY>%s", $entry[$_+$inc];
		if( $entry[$_+$inc] ) {
			printf "<FOOTNOTEREF LINKEND=\"std-%d-%d\">",
							$Lid, $std[$_+$inc];
		}
		printf "</ENTRY>";
		printf "<ENTRY>%s", $entry[$_+(2*$inc)];
		if( $entry[$_+(2*$inc)] ) {
			printf "<FOOTNOTEREF LINKEND=\"std-%d-%d\">",
							$Lid, $std[$_+(2*$inc)];
		}
		printf "</ENTRY>";
		printf "<ENTRY>%s", $entry[$_+(3*$inc)];
		if( $entry[$_+(3*$inc)] ) {
			printf "<FOOTNOTEREF LINKEND=\"std-%d-%d\">",
							$Lid, $std[$_+(3*$inc)];
		}
		printf "</ENTRY>";
		printf "<ENTRY>%s", $entry[$_+(4*$inc)];
		if( $entry[$_+(4*$inc)] ) {
			printf "<FOOTNOTEREF LINKEND=\"std-%d-%d\">",
							$Lid, $std[$_+(4*$inc)];
		}
		printf "</ENTRY>";
		print "</ROW>\n";
	}
	print "</TBODY>\n";
	print "</TGROUP>\n";
	print "</TABLE>\n";

	#
	# Get the mangles for this libgroup
	#
	$select = "SELECT DISTINCT * FROM Mangle ".
		  "WHERE Mlibgroup=$LGid ".
		  "ORDER BY Mname";
	$sth = $Dbh->query($select) || die $select."\n".$Dbh->errmsg();
	if ($sth->numrows > 0 ) {
		print "<TABLE>\n";
		print "<TITLE>Mangled Symbol Mappings</TITLE>\n";
		print "<TGROUP COLS=2>\n";
		print "<THEAD>";
		print "<ROW>";
		print "<ENTRY>Symbol</ENTRY>";
		print "<ENTRY>Implements</ENTRY>";
		print "</ROW>";
		print "</THEAD>\n";
		print "<TBODY>\n";
		for(1..$sth->numrows) {
			%mangle=$sth->fetchhash;
			print "<ROW>";
			printf "<ENTRY>%s</ENTRY>",$mangle{'Mmname'};
			printf "<ENTRY>%s</ENTRY>",$mangle{'Mname'};
			print "</ROW>\n";
		}
		print "</TBODY>\n";
		print "</TGROUP>\n";
		print "</TABLE>\n";
	}
	print "</SECT2>\n";
}

#
# Sixth, make a table of data interaces
#
{
	local(*lftovr);
	$select = "SELECT DISTINCT * FROM Interface,LibInt ".
		  "WHERE LibInt.LIlib=".$Lid." AND ".
		  "LibInt.LIint=Interface.Iid AND IType='D' ".
		  "ORDER BY Iname";
	$sth = $Dbh->query($select) || die $select."\n".$Dbh->errmsg();
	if ($sth->numrows > 0 ) {
		print "<SECT2>\n";
		print "<TITLE>Data Symbols</TITLE>\n";
		print "<PARA>\n";
		print "</PARA>\n";
		for(1..$sth->numrows) {
			%lftovr=$sth->fetchhash;
			$lftovr[$_]=$lftovr{'Iname'};
		}
		print "<TABLE>\n";
		print "<TITLE></TITLE>\n";
		print "<TGROUP COLS=5>\n";
		print "<TBODY>\n";
		$inc=($sth->numrows+4)/5;
		for(1..$inc) {
			print "<ROW>";
			printf "<ENTRY>%s</ENTRY>",$lftovr[$_];
			printf "<ENTRY>%s</ENTRY>",$lftovr[$_+$inc];
			printf "<ENTRY>%s</ENTRY>",$lftovr[$_+(2*$inc)];
			printf "<ENTRY>%s</ENTRY>",$lftovr[$_+(3*$inc)];
			printf "<ENTRY>%s</ENTRY>",$lftovr[$_+(4*$inc)];
			print "</ROW>\n";
		}
		print "</TBODY>\n";
		print "</TGROUP>\n";
		print "</TABLE>\n";
		print "</SECT2>\n";
	}
}


#
# Seventh, make a table of the interfaces not in a group
#
{
	local(*lftovr);
	$select = "SELECT DISTINCT * FROM Interface,LibInt ".
		  "WHERE LibInt.LIlib=".$Lid." AND ".
		  "LibInt.LIint=Interface.Iid AND ".
		  "Itype!='D' AND Ilibgroup is NULL ".
		  "ORDER BY Iname";
	$sth = $Dbh->query($select) || die $select."\n".$Dbh->errmsg();
	if ($sth->numrows > 0 ) {
		print "<SECT2>\n";
		print "<TITLE>Leftovers (This need to be eliminated)</TITLE>\n";
		print "<PARA>\n";
		print "</PARA>\n";
		for(1..$sth->numrows) {
			%lftovr=$sth->fetchhash;
			$lftovr[$_]=$lftovr{'Iname'};
		}
		print "<TABLE>\n";
		print "<TITLE></TITLE>\n";
		print "<TGROUP COLS=5>\n";
		print "<TBODY>\n";
		$inc=($sth->numrows+4)/5;
		for(1..$inc) {
			print "<ROW>";
			printf "<ENTRY>%s</ENTRY>",$lftovr[$_];
			printf "<ENTRY>%s</ENTRY>",$lftovr[$_+$inc];
			printf "<ENTRY>%s</ENTRY>",$lftovr[$_+(2*$inc)];
			printf "<ENTRY>%s</ENTRY>",$lftovr[$_+(3*$inc)];
			printf "<ENTRY>%s</ENTRY>",$lftovr[$_+(4*$inc)];
			print "</ROW>\n";
		}
		print "</TBODY>\n";
		print "</TGROUP>\n";
		print "</TABLE>\n";
		print "</SECT2>\n";
	}
}

#
# Eigth, make a table of the dangling mangled interfaces 
#
{
	local(*mangle);
	$select = "SELECT DISTINCT * FROM Mangle ".
		  "WHERE Mlib=$Lid AND Mlibgroup=0 ".
		  "ORDER BY Mname";
	$sth = $Dbh->query($select) || die $select."\n".$Dbh->errmsg();
	if ($sth->numrows > 0 ) {
		print "<SECT2>\n";
		print "<TITLE>Leftover Mangled Symbols (This need to be eliminated)</TITLE>\n";
		print "<PARA>\n";
		print "</PARA>\n";
		print "<TABLE>\n";
		print "<TITLE></TITLE>\n";
		print "<TGROUP COLS=5>\n";
		print "<TBODY>\n";
		for(1..$sth->numrows) {
			%mangle=$sth->fetchhash;
			print "<ROW>";
			printf "<ENTRY>%s</ENTRY>",$mangle{'Mname'};
			printf "<ENTRY>%s</ENTRY>",$mangle{'Mprototype'};
			print "</ROW>\n";
		}
		print "</TBODY>\n";
		print "</TGROUP>\n";
		print "</TABLE>\n";
		print "</SECT2>\n";
	}
}
print "</SECT1>\n";

#
# List the data definitions by including the related headers here
#
$select = "SELECT * FROM Headers WHERE Hlibrary=$Lid ORDER BY Hname";
$hdh = $Dbh->query($select) || die $select."\n".$Dbh->errmsg();
if( $hdh->numrows ) {
	print "<SECT1>\n";
	print "<TITLE> Data Definitions for ", $Lname, "</TITLE>\n";
	print "<PARA>\n";
	print "</PARA>\n";
#
# Now, get a list of all headers associate with this library
#
	$select = "SELECT * FROM Headers WHERE Hlibrary=$Lid ORDER BY Hname";
	$hdh = $Dbh->query($select) || die $select."\n".$Dbh->errmsg();
	for(1..$hdh->numrows) {
		local(*entry);
		%entry=$hdh->fetchhash;
		$Hname=$entry{'Hname'};
		$headname="../../src/include/".$Hname;
		print "<SECT2>\n";
		print "<TITLE>";
		print $entry{'Hname'};
		print "</TITLE>\n";
		print "<PARA>\n";
		print "</PARA>\n";
		print "<SCREEN>\n";
		open(HEADER,"<".$headname) || die "Can't open $headname";
		while(<HEADER>) {
			print $_;
			}
		print "</SCREEN>\n";
		print "</SECT2>\n";
	}
	print "</SECT1>\n";
}
